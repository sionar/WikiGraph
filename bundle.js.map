{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/wtf_wikipedia/builds/wtf_wikipedia-client.js","webpack:///./src/actions.js","webpack:///./src/canvas.js","webpack:///./src/events.js","webpack:///./src/index.js","webpack:///./src/mobile.js","webpack:///./src/store.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA,EAAE,KAA4D;AAC9D,EAAE,SACiD;AACnD,CAAC,qBAAqB;;AAEtB;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,+BAA+B;AAC9E;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0CAA0C,SAAS;;AAEnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;;AAEvB;AACA;;AAEA;AACA,iCAAiC,YAAY;;AAE7C,2FAA2F;;AAE3F,uDAAuD;;AAEvD;AACA,8BAA8B;;AAE9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA,4BAA4B;AAC5B,KAAK;AACL,sCAAsC;AACtC,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;AACxC;;AAEA;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,2BAA2B;AAC3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG,IAAI,EAAE;;AAET;AACA;AACA;AACA;AACA,GAAG,IAAI;;AAEP;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,sDAAsD;;AAEtD,+DAA+D;;AAE/D;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,kDAAkD;;AAElD;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA,OAAO,EAAE;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,mDAAmD;;AAEnD;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,uBAAuB,eAAe;AACtC;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG,EAAE;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,2EAA2E,OAAO;AAClF,yBAAyB,MAAM,mBAAmB,KAAK,KAAK;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;;AAErB;;AAEA;AACA;AACA,8BAA8B,MAAM,UAAU,KAAK,aAAa;;AAEhE,6BAA6B,MAAM,KAAK,MAAM,SAAS;;AAEvD,2BAA2B,MAAM,UAAU;;AAE3C;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,IAAI;;;AAGJ;AACA,mBAAmB;;AAEnB,uCAAuC;;AAEvC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,8FAA8F,MAAM;;AAEpG;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD,MAAM;AAC/D;AACA,yBAAyB;;AAEzB;;AAEA;AACA;AACA;AACA,uCAAuC;;AAEvC,qEAAqE,KAAK,MAAM,iBAAiB;AACjG;;AAEA,mDAAmD,MAAM,gBAAgB;AACzE;;AAEA,6GAA6G;;AAE7G,sHAAsH;;AAEtH,0DAA0D;;AAE1D,iDAAiD;;AAEjD;AACA;;AAEA;;AAEA;AACA,wBAAwB;;AAExB,oCAAoC,OAAO;AAC3C,wEAAwE;;AAExE,4BAA4B,IAAI,QAAQ;;AAExC,mCAAmC;;AAEnC,yCAAyC;;AAEzC,qCAAqC;;AAErC,2BAA2B,EAAE,EAAE,EAAE;AACjC,2BAA2B,EAAE,IAAI,EAAE,WAAW;;AAE9C,+BAA+B,SAAS;;AAExC,4BAA4B,MAAM,UAAU,GAAG,UAAU;;AAEzD,8BAA8B,eAAe;;AAE7C,2BAA2B,4DAA4D,EAAE;AACzF;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA,uDAAuD;;AAEvD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6BAA6B,qBAAqB;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;;AAExB;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,oBAAoB;;AAE/C;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,uFAAuF,KAAK;AAC5F;;AAEA;AACA;AACA,qCAAqC,KAAK,qBAAqB,IAAI;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B,iCAAiC,MAAM;AACvC;AACA;AACA;AACA,KAAK,EAAE;;AAEP,gCAAgC,MAAM;AACtC;AACA;AACA,KAAK,EAAE;;AAEP,+BAA+B,MAAM;AACrC;AACA;AACA,KAAK,EAAE;;AAEP,8BAA8B,MAAM;AACpC;AACA;AACA,KAAK,EAAE;;AAEP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,uDAAuD;;AAEvD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA,mDAAmD;AACnD,KAAK;AACL;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB;;AAEvB,oBAAoB;;AAEpB;AACA;AACA,KAAK;AACL;AACA;;;AAGA,oCAAoC;;AAEpC,mBAAmB,mBAAmB;AACtC;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;;;AAGN,oBAAoB,oBAAoB;AACxC;AACA;AACA,6DAA6D;AAC7D,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,8BAA8B,cAAc;;AAE5C,+BAA+B,aAAa;;AAE5C;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,MAAM;;AAEN;AACA,qCAAqC;;AAErC,4BAA4B,0BAA0B;;AAEtD;AACA,GAAG;;;AAGH;AACA;AACA,4CAA4C;;AAE5C,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,EAAE;AAC9B,2BAA2B,EAAE;AAC7B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,WAAW,oBAAoB;AAC/B;AACA;AACA,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA,OAAO;AACP;;;AAGA,sCAAsC,EAAE,IAAI,2BAA2B,yBAAyB;AAChG;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK,EAAE;;AAEP,gCAAgC,QAAQ;AACxC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,sBAAsB,YAAY;AAClC;AACA,iFAAiF;;AAEjF;AACA;AACA;AACA;AACA,IAAI,wBAAwB;;AAE5B;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,0BAA0B;;;AAG9B;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA,2BAA2B;;AAE3B;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK,IAAI;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,2CAA2C;;AAE3C;AACA,+BAA+B;;AAE/B;AACA;AACA,KAAK;AACL;AACA,KAAK;;;AAGL;AACA,IAAI;;;AAGJ;AACA,wBAAwB,gBAAgB;;AAExC;AACA,oCAAoC;;AAEpC,2BAA2B;;AAE3B,sCAAsC;;AAEtC,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;AACP;AACA,uDAAuD;;AAEvD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,6CAA6C,sCAAsC;;AAEnF;AACA,kBAAkB,EAAE,qCAAqC,EAAE;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK,EAAE;;AAEP,qCAAqC,MAAM,gBAAgB;;AAE3D,qCAAqC,MAAM,UAAU,OAAO;AAC5D;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK,EAAE;;AAEP,2CAA2C,IAAI,YAAY,KAAK,kBAAkB;;AAElF;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,yBAAyB,IAAI,IAAI,MAAM,IAAI,IAAI,GAAG;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,mCAAmC,WAAW;AACxF;;AAEA,6BAA6B,EAAE,KAAK,EAAE,OAAO;;AAE7C;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,WAAW;AACX;AACA;;AAEA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,yCAAyC;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,8DAA8D;;AAE9D;AACA;AACA;AACA;;AAEA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;;AAEA;;AAEA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA;;AAEA,6BAA6B,aAAa;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,sCAAsC;;AAEtC;AACA,sCAAsC;AACtC;;AAEA,+CAA+C;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,SAAS;;AAEd;AACA;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,IAAI;;;AAGJ;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,WAAW;;;AAGf;AACA,4DAA4D;AAC5D;AACA;AACA,KAAK;AACL,gCAAgC;;AAEhC,gCAAgC;;AAEhC,wBAAwB;;AAExB;;AAEA;AACA;AACA,6CAA6C;;AAE7C;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,OAAO,EAAE;;AAET;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO,EAAE;;AAET;AACA;AACA,OAAO;AACP;AACA,uDAAuD;;AAEvD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,sBAAsB;AACtB,yBAAyB,EAAE;;AAE3B;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA,uDAAuD;;AAEvD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC,sBAAsB;;AAEtB;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;;AAGT;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,6CAA6C;;AAE7C;AACA;AACA,iEAAiE;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB;;AAEvB,iEAAiE;;AAEjE;;AAEA;AACA;AACA;AACA,QAAQ;;AAER;AACA,qCAAqC;AACrC;;AAEA;AACA,mCAAmC;;AAEnC;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA,uDAAuD;;AAEvD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,yBAAyB;AACzB,gCAAgC,EAAE;AAClC,iCAAiC,EAAE;AACnC,8BAA8B,IAAI;;AAElC;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA,KAAK;;AAEL,mBAAmB,iBAAiB;AACpC,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;;AAElC;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER,8BAA8B;;AAE9B,+BAA+B;;AAE/B;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,IAAI,EAAE;;AAEX;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA,uDAAuD;;AAEvD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO,IAAI;AACX;AACA,IAAI;;AAEJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,eAAe;AACf,gBAAgB,EAAE,yCAAyC,KAAK;;AAEhE;AACA;AACA;AACA;;AAEA,oCAAoC,6BAA6B;AACjE,sBAAsB;;AAEtB;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;;AAEvB,mBAAmB,EAAE,mBAAmB,EAAE;AAC1C;AACA;;AAEA;AACA;AACA,SAAS,kBAAkB;;;AAG3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,6BAA6B,YAAY;;AAEzC;AACA,oBAAoB,KAAK;;AAEzB,YAAY,EAAE;AACd,6BAA6B,EAAE;AAC/B,KAAK;AACL,WAAW;AACX,6BAA6B,EAAE;AAC/B,KAAK;AACL,UAAU;AACV,6BAA6B,EAAE,OAAO,EAAE;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,uBAAuB,EAAE;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,EAAE,QAAQ;;AAErC;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA,KAAK;AACL;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA,wFAAwF;;AAExF;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC,6BAA6B;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,IAAI,EAAE;;AAET;AACA;AACA,sEAAsE;;AAEtE,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4BAA4B;AAC5B,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,4FAA4F;;AAE5F;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA,sBAAsB;AACtB;;AAEA;AACA;;AAEA;;AAEA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;;AAEA,kBAAkB,EAAE;AACpB;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,oCAAoC;AACpC;AACA;AACA,qCAAqC;;AAErC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;;;AAGP;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,4FAA4F;;AAE5F,iCAAiC;AACjC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG,EAAE;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,kCAAkC;AAClD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,KAAK,yBAAyB;;AAE9B,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL,wDAAwD;AACxD;AACA;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK,YAAY,aAAa;;AAE9B;AACA;AACA;AACA;AACA;AACA,KAAK,aAAa;;;AAGlB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,aAAa;;;AAGlB;AACA;AACA;AACA;AACA;AACA,KAAK,aAAa;;;AAGlB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,MAAM;;AAE7B;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,IAAI,MAAM;AACV,OAAO;AACP,OAAO;AACP,OAAO;;AAEP,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA,KAAK;AACL;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA,KAAK;AACL;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA,kCAAkC;;AAElC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA,4BAA4B;;AAE5B,mBAAmB,OAAO;AAC1B;;AAEA,qBAAqB,QAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD;;AAEpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,UAAU;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,SAAS,cAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA,IAAI,aAAa;;AAEjB;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yDAAyD;;AAEzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,eAAe,SAAS,GAAG,yBAAyB;AACpD,mBAAmB,SAAS,GAAG,qCAAqC,OAAO,+BAA+B;;AAE1G;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,QAAQ;AACR;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wQAAwQ,KAAK,qEAAqE,GAAG;AACrV;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F;AAC5F,4FAA4F;AAC5F,4FAA4F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B,mCAAmC,EAAE,4BAA4B,EAAE;AACnE;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA,SAAS;AACT;;AAEA,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,sDAAsD;AACtD;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB;;AAExB;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO,EAAE;;AAET,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,sBAAsB;;AAEtB,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;;AAEA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA,IAAI,uBAAuB,UAAU;;;AAGrC;AACA;;AAEA;AACA;AACA,KAAK,MAAM;;;AAGX;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA,4BAA4B;;AAE5B;AACA,kBAAkB;;AAElB;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA,SAAS;AACT;;AAEA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,6CAA6C;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO,EAAE;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,2BAA2B,EAAE,8BAA8B,EAAE,kBAAkB,EAAE;AACjF;AACA;AACA;AACA,QAAQ;;AAER,uBAAuB;;AAEvB;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;;AAGP;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,2BAA2B,EAAE,sDAAsD,EAAE,OAAO,EAAE;AAC9F,8BAA8B,EAAE,KAAK,EAAE;AACvC,6BAA6B,EAAE,OAAO,EAAE;AACxC;AACA;AACA,oBAAoB,oCAAoC;AACxD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,uCAAuC;AACvC;;AAEA;AACA,oCAAoC;AACpC;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA,2BAA2B,EAAE,sCAAsC,EAAE,kCAAkC,EAAE;AACzG;AACA,8BAA8B,EAAE,KAAK,EAAE;AACvC,6BAA6B,EAAE,kCAAkC,EAAE;AACnE;AACA,oBAAoB,oCAAoC;AACxD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,kHAAkH;;AAElH;AACA;AACA,2BAA2B,EAAE,0BAA0B,EAAE,KAAK,EAAE;AAChE,8BAA8B,EAAE,KAAK,EAAE;AACvC,6BAA6B,EAAE,KAAK,EAAE;AACtC;AACA,oBAAoB,oCAAoC;AACxD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA;;AAEA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,sBAAsB,OAAO,KAAK;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gCAAgC,IAAI,EAAE,MAAM,GAAG,IAAI,IAAI;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC,gCAAgC,mBAAmB;;AAEnD,+BAA+B;;AAE/B,2BAA2B;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA,SAAS;;;AAGT;AACA,qCAAqC;AACrC;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER,wCAAwC;;AAExC;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;;AAEA,6EAA6E,MAAM,OAAO,KAAK;AAC/F;;AAEA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA,6CAA6C;;AAE7C,kCAAkC;;AAElC;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL,uBAAuB;;AAEvB,6BAA6B;;AAE7B,0BAA0B;;AAE1B;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,gCAAgC;AAChC;AACA,OAAO;AACP;;AAEA;AACA,8BAA8B;AAC9B,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,uBAAuB;;AAErD;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B,uBAAuB;;AAErD;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;;AAEA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC;AACD;;;;;;;;;;;;;AC1nRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACgB;AACtB;;AAE5C,aAAa,mBAAO,CAAC,kFAAe;;AAE7B;AACP;AACA;AACA;AACA,MAAM,yDAAU;AAChB;AACA;AACA;AACA;AACA;AACA,kC;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA,IAAI,4CAAK;AACT,IAAI,4CAAK;AACT,IAAI,4CAAK;AACT,IAAI,4CAAK;AACT;AACA;AACA,MAAM,4CAAK,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL,mBAAmB,4CAAK,wBAAwB,oDAAa,mB;AAC7D,mBAAmB,4CAAK,wBAAwB,oDAAa,mB;AAC7D,MAAM,4CAAK,mBAAmB;AAC9B,MAAM,4CAAK,OAAO,6BAA6B;AAC/C;AACA,IAAI,gEAAgB;AACpB,qBAAqB,4CAAK;AAC1B,GAAG;AACH;;AAEO;AACP;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,EAAE,yDAAU;AACZ,EAAE,gEAAgB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6B;AACA;AACA,KAAK,O;AACL;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAA;AAAA;AAA4D;AACY;;;AAGjE;AACP;AACA;AACA,qCAAqC,6CAAK,kBAAkB,6CAAK;AACjE,+BAA+B,4CAAK;AACpC;AACA;;AAEA;AACA;AACA;AACA,eAAe,4CAAK;AACpB,kCAAkC,4CAAI,oBAAoB,4CAAI;AAC9D;AACA;AACA,gBAAgB,6CAAM;AACtB;AACA;AACA;AACA;AACA,mBAAmB,6CAAK,KAAK,6CAAK;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB,O;AACrC;AACA;AACA;;AAEO;AACP;AACA;AACA,qCAAqC,6CAAK,kBAAkB,6CAAK;AACjE,MAAM,qDAAa;AACnB;AACA,WAAW,4CAAK,CAAC,qDAAa;AAC9B;AACA;AACA,wCAAwC,4CAAI,oBAAoB,4CAAI;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU,kBAAkB,kDAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,yBAAyB,6CAAK,KAAK,6CAAK;AACxC,OAAO;AACP;AACA;;AAEA,EAAE,4CAAK;AACP;AACA,eAAe,4CAAK,0BAA0B,4CAAI,EAAE,4CAAK,0BAA0B,4CAAI;AACvF;AACA;AACA,eAAe,4CAAK,0BAA0B,4CAAI,EAAE,4CAAK,0BAA0B,4CAAI;AACvF;AACA,GAAG;AACH,C;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;AACC;;AAEhE;AACA;AACA;AACA;AACA;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,yBAAyB,sDAAe,iB;AACxC,+BAA+B,4CAAK;AACpC;;AAEA;AACA,WAAW,4CAAK;AAChB;AACA,iBAAiB,6CAAM,CAAC,6CAAM;AAC9B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP,OAAO,4CAAK,mBAAmB,4CAAK;AACpC;;AAEA;AACA,yBAAyB,sDAAe;AACxC,+BAA+B,4CAAK;AACpC;AACA,SAAS,4CAAK;AACd;AACA,MAAM,6CAAM,CAAC,6CAAM,sBAAsB,kDAAW,GAAG,kDAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,GAAG;AACH;AACA;AACA;;AAEO;AACP,+BAA+B,4CAAK;AACpC;AACA,yBAAyB,sDAAe;AACxC;;AAEA;AACA;AACA,WAAW,4CAAK;AAChB;AACA,iBAAiB,6CAAM,CAAC,6CAAM;AAC9B;AACA,MAAM,2DAAU;AAChB;AACA,GAAG;AACH;;AAEO;AACP;AACA,iBAAiB,4CAAK;AACtB;AACA,mBAAmB,uBAAuB;AAC1C;AACA,oD;AACA;AACA;AACA,IAAI,2DAAU;AACd,IAAI,mEAAkB;AACtB;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA,C;;;;;;;;;;;;AC9IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACK;AAEuB;AACtB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,yDAAiB;AACvD,0CAA0C,uDAAe;AACzD,wCAAwC,qDAAa;AACrD,0CAA0C,uDAAe;AACzD,0CAA0C,uDAAe;AACzD,0CAA0C,uDAAe;AACzD,oCAAoC,oDAAY;;AAEhD,EAAE,wEAAwB;;AAE1B,cAAc,mDAAW;AACzB,cAAc,mDAAW;AACzB,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAU;AAChB;AACA;AACA,G;AACA;AACA;AACA;AACA,MAAM,sDAAK;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6B;AACA,yCAAyC;AACzC;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACxGA;AAAA;AAAA;AAAA;AAAkD;AACL;AACL;;AAExC;;AAEO;AACP;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,8B;AACA;AACA,4CAA4C,6CAAK,GAAG,4CAAI;AACxD,4CAA4C,6CAAK,GAAG,4CAAI;AACxD;AACA;AACA,+BAA+B,4CAAK;AACpC;;AAEA;AACA,WAAW,4CAAK;AAChB;AACA,iBAAiB,6CAAM,CAAC,6CAAM;AAC9B;AACA,mDAAmD,6CAAK;AACxD,mDAAmD,6CAAK;AACxD;AACA,GAAG;AACH;AACA,IAAI,yDAAS;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM,2DAAW;AACjB;AACA,MAAM,2DAAW;AACjB;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACA;AACA;AACA;AACA;;AAEA;AACP;AACA;AACA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/* wtf_wikipedia 8.1.0 MIT */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.wtf = factory());\n}(this, (function () { 'use strict';\n\n  var parseUrl = function parseUrl(url) {\n    var parsed = new URL(url); //eslint-disable-line\n\n    var title = parsed.pathname.replace(/^\\/(wiki\\/)?/, '');\n    title = decodeURIComponent(title);\n    return {\n      domain: parsed.host,\n      title: title\n    };\n  };\n\n  var _00ParseUrl = parseUrl;\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var isInterWiki = /(wiktionary|wikinews|wikibooks|wikiquote|wikisource|wikispecies|wikiversity|wikivoyage|wikipedia|wikimedia|foundation|meta)\\.org/;\n  var defaults = {\n    action: 'query',\n    prop: 'revisions',\n    //we use the 'revisions' api here, instead of the Raw api, for its CORS-rules..\n    rvprop: 'content',\n    maxlag: 5,\n    rvslots: 'main',\n    origin: '*',\n    format: 'json',\n    redirects: 'true'\n  };\n\n  var toQueryString = function toQueryString(obj) {\n    return Object.entries(obj).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(value));\n    }).join('&');\n  };\n\n  var isArray = function isArray(arr) {\n    return Object.prototype.toString.call(arr) === '[object Array]';\n  };\n\n  var cleanTitle = function cleanTitle(page) {\n    page = page.replace(/ /g, '_');\n    page = page.trim(); // page = encodeURIComponent(page)\n\n    return page;\n  };\n\n  var makeUrl = function makeUrl(options) {\n    var params = Object.assign({}, defaults); // default url\n\n    var url = \"https://\".concat(options.lang, \".\").concat(options.wiki, \".org/w/api.php?\"); // from a 3rd party wiki\n\n    options.domain = options.domain || options.wikiUrl; //support old syntax\n\n    if (options.domain) {\n      var path = options.path; //wikimedia api uses ./w/api path. no others do\n\n      if (isInterWiki.test(options.domain)) {\n        path = 'w/api.php';\n      }\n\n      url = \"https://\".concat(options.domain, \"/\").concat(path, \"?\");\n    }\n\n    if (!options.follow_redirects) {\n      delete params.redirects;\n    } // support numerical ids\n\n\n    var page = options.title;\n\n    if (typeof page === 'number') {\n      params.pageids = page; //single pageId\n    } else if (isArray(page) && typeof page[0] === 'number') {\n      params.pageids = page.join('|'); //pageid array\n    } else if (isArray(page) === true) {\n      //support array\n      params.titles = page.map(cleanTitle).join('|');\n    } else {\n      // single page\n      params.titles = cleanTitle(page);\n    } // make it!\n\n\n    url += toQueryString(params);\n    return url;\n  };\n\n  var _01MakeUrl = makeUrl;\n\n  //this data-format from mediawiki api is nutso\n  var getResult = function getResult(data, options) {\n    options = options || {};\n    var pages = Object.keys(data.query.pages);\n    var docs = pages.map(function (id) {\n      var page = data.query.pages[id] || {};\n\n      if (page.hasOwnProperty('missing') || page.hasOwnProperty('invalid')) {\n        return null;\n      }\n\n      var text = page.revisions[0]['*']; // console.log(page.revisions[0])\n      //us the 'generator' result format, for the random() method\n\n      if (!text && page.revisions[0].slots) {\n        text = page.revisions[0].slots.main['*'];\n      }\n\n      var meta = Object.assign({}, options, {\n        title: page.title,\n        pageID: page.pageid,\n        namespace: page.ns\n      });\n\n      try {\n        return {\n          wiki: text,\n          meta: meta\n        };\n      } catch (e) {\n        console.error(e);\n        throw e;\n      }\n    });\n    return docs;\n  };\n\n  var _02GetResult = getResult;\n\n  //helper for looping around all sections of a document\n  var sectionMap = function sectionMap(doc, fn, clue) {\n    var arr = [];\n    doc.sections().forEach(function (sec) {\n      var list = [];\n\n      if (typeof clue === 'string') {\n        list = sec[fn](clue);\n      } else {\n        list = sec[fn]();\n      }\n\n      list.forEach(function (t) {\n        arr.push(t);\n      });\n    });\n\n    if (typeof clue === 'number') {\n      return arr[clue];\n    }\n\n    return arr;\n  };\n\n  var _sectionMap = sectionMap;\n\n  //\n  var setDefaults = function setDefaults(options, defaults) {\n    return Object.assign({}, defaults, options);\n  };\n\n  var setDefaults_1 = setDefaults;\n\n  var defaults$1 = {\n    title: true,\n    sections: true,\n    pageID: true,\n    categories: true\n  }; //an opinionated output of the most-wanted data\n\n  var toJSON = function toJSON(doc, options) {\n    options = setDefaults_1(options, defaults$1);\n    var data = {};\n\n    if (options.title) {\n      data.title = doc.title();\n    }\n\n    if (options.pageID) {\n      data.pageID = doc.pageID();\n    }\n\n    if (options.categories) {\n      data.categories = doc.categories();\n    }\n\n    if (options.sections) {\n      data.sections = doc.sections().map(function (i) {\n        return i.json(options);\n      });\n    }\n\n    if (doc.isRedirect() === true) {\n      data.isRedirect = true;\n      data.redirectTo = doc.data.redirectTo;\n      data.sections = [];\n    } //these are default-off\n\n\n    if (options.coordinates) {\n      data.coordinates = doc.coordinates();\n    }\n\n    if (options.infoboxes) {\n      data.infoboxes = doc.infoboxes().map(function (i) {\n        return i.json(options);\n      });\n    }\n\n    if (options.images) {\n      data.images = doc.images().map(function (i) {\n        return i.json(options);\n      });\n    }\n\n    if (options.plaintext) {\n      data.plaintext = doc.text(options);\n    }\n\n    if (options.citations || options.references) {\n      data.references = doc.references();\n    }\n\n    return data;\n  };\n\n  var toJson = toJSON;\n\n  var disambig = ['dab', //en\n  'disamb', //en\n  'disambig', //en\n  'disambiguation', //en\n  'aðgreining', //is\n  'aimai', //ja\n  'ałtsʼáʼáztiin', //nv\n  'anlam ayrımı', //gag\n  'anlam ayrımı', //tr\n  'apartigilo', //eo\n  'argipen', //eu\n  'begriepskloorenge', //stq\n  'begriffsklärung', //als\n  'begriffsklärung', //de\n  'begriffsklärung', //pdc\n  'begriffsklearung', //bar\n  'bisongidila', //kg\n  'bkl', //pfl\n  'bokokani', //ln\n  'caddayn', //so\n  'clerheans', //kw\n  'cudakirin', //ku\n  'čvor', //bs\n  'db', //vls\n  'desambig', //nov\n  'desambigación', //an\n  'desambiguação', //pt\n  'desambiguació', //ca\n  'desambiguación', //es\n  'desambiguáncia', //ext\n  'desambiguasion', //lad\n  'desambiguassiù', //lmo\n  'desambigui', //lfn\n  'dezambiguizare', //ro\n  'dəqiqləşdirmə', //az\n  'disambigua', //it\n  'disambigua', //lij\n  'disambigua', //nap\n  'disambìgua', //sc\n  'disambigua', //scn\n  'disambiguasi', //id\n  'disambiguasi', //su\n  'discretiva', //la\n  'disheñvelout', //br\n  'disingkek', //min\n  'dixanbigua', //vec\n  'dixebra', //ast\n  'diżambigwazzjoni', //mt\n  'doorverwijspagina', //nl\n  'dp', //nl\n  'dp', //zea\n  'dubbelsinnig', //af\n  'dudalipen', //rmy\n  'dv', //nds_nl\n  'egyért', //hu\n  'fleiri týdningar', //fo\n  'fleirtyding', //nn\n  'flertydig', //da\n  'förgrening', //sv\n  'gì-ngiê', //cdo\n  'giklaro', //ceb\n  'gwahaniaethu', //cy\n  'homonimo', //io\n  'homónimos', //gl\n  'homonymie', //fr\n  'huaʻōlelo puana like', //haw\n  'idirdhealú', //ga\n  'khu-pia̍t', //zh_min_nan\n  'kthjellim', //sq\n  'kujekesa', //sn\n  'maana', //sw\n  'maneo bin', //diq\n  'mehrdüdig begreep', //nds\n  'menm non', //ht\n  'muardüüdag artiikel', //frr\n  'neibetsjuttings', //fy\n  'nozīmju atdalīšana', //lv\n  'nuorodinis', //lt\n  'nyahkekaburan', //ms\n  'omonimeye', //wa\n  'omonimia', //oc\n  'page dé frouque', //nrm\n  'paglilinaw', //tl\n  'panangilawlawag', //ilo\n  'pansayod', //war\n  'pejy mitovy anarana', //mg\n  'peker', //no\n  'razdvojba', //hr\n  'razločitev', //sl\n  'razvrstavanje', //sh\n  'reddaghey', //gv\n  'rozcestník', //cs\n  'rozlišovacia stránka', //sk\n  'sclerir noziun', //rm\n  'selvendyssivu', //olo\n  'soilleireachadh', //gd\n  'suzmunski', //jbo\n  'täpsustuslehekülg', //et\n  'täsmennyssivu', //fi\n  'telplänov', //vo\n  'tlahtolmelahuacatlaliztli', //nah\n  'trang định hướng', //vi\n  'ujednoznacznienie', //pl\n  'verdudeliking', //li\n  'wěcejwóznamowosć', //dsb\n  'wjacezmyslnosć', //hsb\n  'zambiguaçon', //mwl\n  'zeimeibu škiršona', //ltg\n  'αποσαφήνιση', //el\n  'айрық', //kk\n  'аҵакырацәа', //ab\n  'вишезначна одредница', //sr\n  'ибҳомзудоӣ', //tg\n  'кёб магъаналы', //krc\n  'күп мәгънәләр', //tt\n  'күп мәғәнәлелек', //ba\n  'мъногосъмꙑслиѥ', //cu\n  'неадназначнасць', //be\n  'неадназначнасьць', //be_x_old\n  'неоднозначность', //ru\n  'олон удхатай', //bxr\n  'појаснување', //mk\n  'пояснение', //bg\n  'са шумуд манавал', //lez\n  'салаа утгатай', //mn\n  'суолталар', //sah\n  'текмаанисиздик', //ky\n  'цо магіна гуреб', //av\n  'чеперушка', //rue\n  'чолхалла', //ce\n  'шуко ончыктымаш-влак', //mhr\n  'მრავალმნიშვნელოვანი', //ka\n  'բազմիմաստութիւն', //hyw\n  'բազմիմաստություն', //hy\n  'באדייטן', //yi\n  'פירושונים', //he\n  'ابهام‌زدایی', //fa\n  'توضيح', //ar\n  'توضيح', //arz\n  'دقیقلشدیرمه', //azb\n  'ڕوونکردنەوە', //ckb\n  'سلجهائپ', //sd\n  'ضد ابہام', //ur\n  'گجگجی بیری', //mzn\n  'نامبهمېدنه', //ps\n  'መንታ', //am\n  'अस्पष्टता', //ne\n  'बहुअर्थी', //bh\n  'बहुविकल्पी शब्द', //hi\n  'দ্ব্যর্থতা নিরসন', //bn\n  'ਗੁੰਝਲ-ਖੋਲ੍ਹ', //pa\n  'સંદિગ્ધ શીર્ષક', //gu\n  'பக்கவழி நெறிப்படுத்தல்', //ta\n  'అయోమయ నివృత్తి', //te\n  'ದ್ವಂದ್ವ ನಿವಾರಣೆ', //kn\n  'വിവക്ഷകൾ', //ml\n  'වක්‍රෝත්ති', //si\n  'แก้ความกำกวม', //th\n  'သံတူကြောင်းကွဲ', //my\n  'ណែនាំ', //km\n  '동음이의', //ko\n  '扤清楚', //gan\n  '搞清楚', //zh_yue\n  '曖昧さ回避', //ja\n  '消歧义', //zh\n  '釋義', //zh_classical\n  \"gestion dj'omònim\", //pms\n  \"sut'ichana qillqa\" //qu\n  // 'z', //vep\n  // 'သဵင်မိူၼ် တူၼ်ႈထႅဝ်ပႅၵ်ႇ', //shn\n  ];\n\n  var i18n = disambig.reduce(function (h, str) {\n    h[str] = true;\n    return h;\n  }, {}); //special disambig-templates en-wikipedia uses\n\n  var d = ' disambiguation';\n  var english = ['dab', 'dab', 'disamb', 'disambig', 'geodis', 'hndis', 'setindex', 'ship index', 'split dab', 'sport index', 'wp disambig', 'disambiguation cleanup', 'airport' + d, 'biology' + d, 'call sign' + d, 'caselaw' + d, 'chinese title' + d, 'genus' + d, 'hospital' + d, 'lake index', 'letter' + d, 'letter-number combination' + d, 'mathematical' + d, 'military unit' + d, 'mountainindex', 'number' + d, 'phonetics' + d, 'place name' + d, 'portal' + d, 'road' + d, 'school' + d, 'species latin name abbreviation' + d, 'species latin name' + d, 'station' + d, 'synagogue' + d, 'taxonomic authority' + d, 'taxonomy' + d].reduce(function (h, str) {\n    h[str] = true;\n    return h;\n  }, {});\n\n  var isDisambig = function isDisambig(doc) {\n    var templates = doc.templates();\n    var found = templates.find(function (obj) {\n      return english.hasOwnProperty(obj.template) || i18n.hasOwnProperty(obj.template);\n    });\n\n    if (found) {\n      return true;\n    } // try 'may refer to' on first line for en-wiki?\n\n\n    var firstLine = doc.sentences(0).text();\n\n    if (firstLine !== null && firstLine[0]) {\n      if (/. may refer to ./i.test(firstLine) === true) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var disambig$1 = isDisambig;\n\n  var defaults$2 = {\n    caption: true,\n    alt: true,\n    links: true,\n    thumb: true,\n    url: true\n  }; //\n\n  var toJson$1 = function toJson(img, options) {\n    options = setDefaults_1(options, defaults$2);\n    var json = {\n      file: img.file()\n    };\n\n    if (options.thumb !== false) {\n      json.thumb = img.thumbnail();\n    }\n\n    if (options.url !== false) {\n      json.url = img.url();\n    } //add captions\n\n\n    if (options.caption !== false && img.data.caption) {\n      json.caption = img.caption();\n\n      if (options.links !== false && img.data.caption.links()) {\n        json.links = img.links();\n      }\n    }\n\n    if (options.alt !== false && img.data.alt) {\n      json.alt = img.alt();\n    }\n\n    return json;\n  };\n\n  var toJson_1 = toJson$1;\n\n  var server = 'https://wikipedia.org/wiki/Special:Redirect/file/';\n\n  var encodeTitle = function encodeTitle(file) {\n    var title = file.replace(/^(image|file?)\\:/i, ''); //titlecase it\n\n    title = title.charAt(0).toUpperCase() + title.substring(1); //spaces to underscores\n\n    title = title.trim().replace(/ /g, '_');\n    return title;\n  }; //the wikimedia image url is a little silly:\n\n\n  var makeSrc = function makeSrc(file) {\n    var title = encodeTitle(file);\n    title = encodeURIComponent(title);\n    return title;\n  }; //the class for our image generation functions\n\n\n  var Image = function Image(data) {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  var methods = {\n    file: function file() {\n      return this.data.file || '';\n    },\n    alt: function alt() {\n      var str = this.data.alt || this.data.file || '';\n      str = str.replace(/^(file|image):/i, '');\n      str = str.replace(/\\.(jpg|jpeg|png|gif|svg)/i, '');\n      return str.replace(/_/g, ' ');\n    },\n    caption: function caption() {\n      if (this.data.caption) {\n        return this.data.caption.text();\n      }\n\n      return '';\n    },\n    links: function links() {\n      if (this.data.caption) {\n        return this.data.caption.links();\n      }\n\n      return [];\n    },\n    url: function url() {\n      return server + makeSrc(this.file());\n    },\n    thumbnail: function thumbnail(size) {\n      size = size || 300;\n      var path = makeSrc(this.file());\n      return server + path + '?width=' + size;\n    },\n    format: function format() {\n      var arr = this.file().split('.');\n\n      if (arr[arr.length - 1]) {\n        return arr[arr.length - 1].toLowerCase();\n      }\n\n      return null;\n    },\n    json: function json(options) {\n      options = options || {};\n      return toJson_1(this, options);\n    },\n    text: function text() {\n      return '';\n    }\n  };\n  Object.keys(methods).forEach(function (k) {\n    Image.prototype[k] = methods[k];\n  });\n  Image.prototype.src = Image.prototype.url;\n  Image.prototype.thumb = Image.prototype.thumbnail;\n  var Image_1 = Image;\n\n  var defaults$3 = {\n    tables: true,\n    lists: true,\n    paragraphs: true\n  }; //\n\n  var Document = function Document(data) {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  var methods$1 = {\n    title: function title(str) {\n      //use like a setter\n      if (str !== undefined) {\n        this.data.title = str;\n        return str;\n      } //if we have it already\n\n\n      if (this.data.title) {\n        return this.data.title;\n      } //guess the title of this page from first sentence bolding\n\n\n      var guess = null;\n      var sen = this.sentences(0);\n\n      if (sen) {\n        guess = sen.bolds(0);\n      }\n\n      return guess;\n    },\n    pageID: function pageID(id) {\n      if (id !== undefined) {\n        this.data.pageID = id;\n      }\n\n      return this.data.pageID;\n    },\n    language: function language(lang) {\n      if (lang !== undefined) {\n        this.data.lang = lang;\n      }\n\n      return this.data.lang;\n    },\n    url: function url() {\n      var title = this.title();\n\n      if (!title) {\n        return null;\n      }\n\n      var lang = this.language() || 'en';\n      var domain = this.data.domain || 'wikipedia.org'; // replace blank to underscore\n\n      title = title.replace(/ /g, '_');\n      title = encodeURIComponent(title);\n      return \"https://\".concat(lang, \".\").concat(domain, \".org/wiki/\").concat(title);\n    },\n    namespace: function namespace(ns) {\n      if (ns !== undefined) {\n        this.data.namespace = ns;\n      }\n\n      return this.data.namespace;\n    },\n    isRedirect: function isRedirect() {\n      return this.data.type === 'redirect';\n    },\n    redirectTo: function redirectTo() {\n      return this.data.redirectTo;\n    },\n    isDisambiguation: function isDisambiguation() {\n      return disambig$1(this);\n    },\n    categories: function categories(clue) {\n      if (typeof clue === 'number') {\n        return this.data.categories[clue];\n      }\n\n      return this.data.categories || [];\n    },\n    sections: function sections(clue) {\n      var _this = this;\n\n      var arr = this.data.sections || [];\n      arr.forEach(function (sec) {\n        return sec.doc = _this;\n      }); //grab a specific section, by its title\n\n      if (typeof clue === 'string') {\n        var str = clue.toLowerCase().trim();\n        return arr.find(function (s) {\n          return s.title().toLowerCase() === str;\n        });\n      }\n\n      if (typeof clue === 'number') {\n        return arr[clue];\n      }\n\n      return arr;\n    },\n    paragraphs: function paragraphs(n) {\n      var arr = [];\n      this.data.sections.forEach(function (s) {\n        arr = arr.concat(s.paragraphs());\n      });\n\n      if (typeof n === 'number') {\n        return arr[n];\n      }\n\n      return arr;\n    },\n    paragraph: function paragraph(n) {\n      var arr = this.paragraphs() || [];\n\n      if (typeof n === 'number') {\n        return arr[n];\n      }\n\n      return arr[0];\n    },\n    sentences: function sentences(n) {\n      var arr = [];\n      this.sections().forEach(function (sec) {\n        arr = arr.concat(sec.sentences());\n      });\n\n      if (typeof n === 'number') {\n        return arr[n];\n      }\n\n      return arr;\n    },\n    sentence: function sentence() {\n      return this.sentences(0);\n    },\n    images: function images(clue) {\n      var arr = _sectionMap(this, 'images', null); //grab image from infobox, first\n\n      this.infoboxes().forEach(function (info) {\n        var img = info.image();\n\n        if (img) {\n          arr.unshift(img); //put it at the top\n        }\n      }); //look for 'gallery' templates, too\n\n      this.templates().forEach(function (obj) {\n        if (obj.template === 'gallery') {\n          obj.images = obj.images || [];\n          obj.images.forEach(function (img) {\n            if (img instanceof Image_1 === false) {\n              img = new Image_1(img);\n            }\n\n            arr.push(img);\n          });\n        }\n      });\n\n      if (typeof clue === 'number') {\n        return arr[clue];\n      }\n\n      return arr;\n    },\n    image: function image() {\n      return this.images(0);\n    },\n    links: function links(clue) {\n      return _sectionMap(this, 'links', clue);\n    },\n    interwiki: function interwiki(clue) {\n      return _sectionMap(this, 'interwiki', clue);\n    },\n    lists: function lists(clue) {\n      return _sectionMap(this, 'lists', clue);\n    },\n    tables: function tables(clue) {\n      return _sectionMap(this, 'tables', clue);\n    },\n    templates: function templates(clue) {\n      return _sectionMap(this, 'templates', clue);\n    },\n    references: function references(clue) {\n      return _sectionMap(this, 'references', clue);\n    },\n    coordinates: function coordinates(clue) {\n      return _sectionMap(this, 'coordinates', clue);\n    },\n    infoboxes: function infoboxes(clue) {\n      var arr = _sectionMap(this, 'infoboxes'); //sort them by biggest-first\n\n      arr = arr.sort(function (a, b) {\n        if (Object.keys(a.data).length > Object.keys(b.data).length) {\n          return -1;\n        }\n\n        return 1;\n      });\n\n      if (typeof clue === 'number') {\n        return arr[clue];\n      }\n\n      return arr;\n    },\n    text: function text(options) {\n      options = setDefaults_1(options, defaults$3); //nah, skip these.\n\n      if (this.isRedirect() === true) {\n        return '';\n      }\n\n      var arr = this.sections().map(function (sec) {\n        return sec.text(options);\n      });\n      return arr.join('\\n\\n');\n    },\n    json: function json(options) {\n      options = setDefaults_1(options, defaults$3);\n      return toJson(this, options);\n    },\n    debug: function debug() {\n      console.log('\\n');\n      this.sections().forEach(function (sec) {\n        var indent = ' - ';\n\n        for (var i = 0; i < sec.depth; i += 1) {\n          indent = ' -' + indent;\n        }\n\n        console.log(indent + (sec.title() || '(Intro)'));\n      });\n      return this;\n    }\n  };\n\n  var isArray$1 = function isArray(arr) {\n    return Object.prototype.toString.call(arr) === '[object Array]';\n  }; //add singular-methods, too\n\n\n  var plurals = ['sections', 'infoboxes', 'sentences', 'citations', 'references', 'coordinates', 'tables', 'lists', 'links', 'images', 'templates', 'categories'];\n  plurals.forEach(function (fn) {\n    var sing = fn.replace(/ies$/, 'y');\n    sing = sing.replace(/oxes$/, 'ox');\n    sing = sing.replace(/s$/, '');\n\n    methods$1[sing] = function (n) {\n      n = n || 0;\n      var res = this[fn](n);\n\n      if (isArray$1(res)) {\n        return res[0];\n      }\n\n      return res;\n    };\n  });\n  Object.keys(methods$1).forEach(function (k) {\n    Document.prototype[k] = methods$1[k];\n  }); //alias these ones\n\n  Document.prototype.lang = Document.prototype.language;\n  Document.prototype.ns = Document.prototype.namespace;\n  Document.prototype.plaintext = Document.prototype.text;\n  Document.prototype.isDisambig = Document.prototype.isDisambiguation;\n  Document.prototype.citations = Document.prototype.references;\n  Document.prototype.redirectsTo = Document.prototype.redirectTo;\n  Document.prototype.redirect = Document.prototype.redirectTo;\n  Document.prototype.redirects = Document.prototype.redirectTo;\n  var Document_1 = Document;\n\n  var categories = ['category', //en\n  'abdeeling', //\tpdc\n  'bólkur', //\tfo\n  'catagóir', //\tga\n  'categori', //\tcy\n  'categoria', 'categoria', //\tco\n  'categoría', //\tes\n  'categorîa', //\tlij\n  'categorìa', //\tpms\n  'catégorie', 'categorie', 'catègorie', //\tfrp\n  'category', 'categuria', //\tlmo\n  'catigurìa', //\tscn\n  'class', //\tkw\n  'ẹ̀ka', //\tyo\n  'flocc', 'flocc', //\tang\n  'flokkur', 'grup', //\ttpi\n  'jamii', //\tsw\n  'kaarangay', //\twar\n  'kateggoría', //\tlad\n  'kategooria', //\tet\n  'kategori', //\tda\n  'kategorî', //\tku\n  'kategoria', //\teu\n  'kategória', //\thu\n  'kategorie', //de\n  'kategoriija', //\tse\n  'kategorija', //\tsl\n  'kategorio', //\teo\n  'kategoriya', 'kategoriýa', //\ttk\n  'kategoriye', //\tdiq\n  'kategory', //\tfy\n  'kategorya', //\ttl\n  'kateqoriya', //\taz\n  'katiguriya', //\tqu\n  'klad', //\tvo\n  'luokka', 'ñemohenda', //\tgn\n  'roinn', //-seòrsa\tgd\n  'ronney', //\tgv\n  'rummad', //\tbr\n  'setensele', //\tnso\n  'sokajy', //\tmg\n  'sumut', // atassuseq\tkl\n  'thể', // loại\tvi\n  'turkum', //\tuz\n  'категорија', 'категория', //\tru\n  'категорія', //\tuk\n  'катэгорыя', 'төркем', //\ttt\n  'קטגוריה', //\the\n  'تصنيف', 'تۈر', //\tug\n  'رده', 'श्रेणी', 'श्रेणी', //\thi\n  'বিষয়শ্রেণী', //\tbn\n  'หมวดหมู่', //\tth\n  '분류', //\tko\n  '분류', //ko\n  '分类' //\tza\n  //--\n  ];\n\n  var images = ['file', //en\n  'image', //en\n  'चित्र', //img\n  'archivo', //es\n  'attēls', //lv\n  'berkas', //id\n  'bestand', //nl\n  'datei', //de\n  'dosiero', //eo\n  'dosya', //lad\n  'fájl', //hu\n  'fasciculus', //la\n  'fichier', //fr\n  'fil', //da\n  'fitxategi', //eu\n  'fitxer', //ca\n  'gambar', //su\n  'imagem', //pt\n  'imej', //ms\n  'immagine', //it\n  'larawan', //tl\n  'lêer', //af\n  'plik', //pl\n  'restr', //br\n  'slika', //bs\n  'wêne', //ku\n  'wobraz', //dsb\n  'выява', //be\n  'податотека', //mk\n  'слика', //sr\n  'файл', //ru\n  'სურათი', //ka\n  'պատկեր', //hy\n  'קובץ', //he\n  'پرونده', //fa\n  'دوتنه', //ps\n  'ملف', //ar\n  'وێنە', //ckb\n  'चित्र', //hi\n  'ไฟล์', //th\n  '파일', //ko\n  'ファイル' //ja\n  ];\n\n  var infoboxes = ['infobox', //en\n  'anfo', //mwl\n  'anuāmapa', //haw\n  'bilgi kutusu', //tr\n  'bilgi', //tr\n  'bilgiquti', //uz\n  'boaty', //mg\n  'boestkelaouiñ', //br\n  'bosca', //ga\n  'capsa', //la\n  'diehtokássa', //se\n  'faktamall', //sv\n  'ficha', //es\n  'generalni', //hr\n  'gwybodlen3', //cy\n  'info', //pt\n  'infobokis', //tpi\n  'infoboks', //da\n  'infochascha', //rm\n  'infokašćik', //dsb\n  'infokast', //et\n  'infokutija', //bs\n  'infolentelė', //lt\n  'infopolje', //sl\n  'informkesto', //eo\n  'infoskreine', //ltg\n  'infotaula', //eu\n  'inligtingskas', 'inligtingskas3', //af\n  'inligtingskas4', //af\n  'kishtey', //gv\n  'kotak', //su\n  'tertcita', //jbo\n  'tietolaatikko', //fi\n  'yerleşim bilgi kutusu', 'ynfoboks', //fy\n  'πλαίσιο', //el\n  'акарточка', //ab\n  'аҥа', //mhr\n  'инфобокс', //kk\n  'инфокутија', //sr\n  'инфокутия', //bg\n  'інфобокс', //rue\n  'канадский', 'картка', //be\n  'карточка', //ru\n  'карточка2', //mdf\n  'карточкарус', //ba\n  'картуш', //koi\n  'қуттӣ', //tg\n  'ინფოდაფა', //ka\n  'տեղեկաքարտ', //hy\n  'אינפאקעסטל', //yi\n  'תבנית', //he\n  'بطاقة', //ar\n  'ڄاڻخانو', //sd\n  'خانہ', //ur\n  'لغة', 'ज्ञानसन्दूक', //hi\n  'তথ্যছক', //bn\n  'ਜਾਣਕਾਰੀਡੱਬਾ', //pa\n  'సమాచారపెట్టె', //te\n  'තොරතුරුකොටුව', //si\n  'กล่องข้อมูล', //th\n  'ប្រអប់ព័ត៌មាន', //km\n  '정보상자', //ko\n  '明細' //zh_yue\n  ];\n\n  var redirects = ['adkas', //br\n  'aýdaw', 'doorverwijzing', 'ohjaus', 'patrz', //pl\n  'přesměruj', 'redirección', 'redireccion', 'redirección', //es\n  'redirecionamento', //pt\n  'redirect', //en\n  'redirection', 'redirection', //fr\n  'rinvia', //it\n  'tilvísun', 'uudelleenohjaus', 'weiterleitung', 'weiterleitung', //de\n  'yönlendi̇r', 'yönlendirme', 'yönlendi̇rme', //tr\n  'ανακατευθυνση', //el\n  'айдау', 'перанакіраваньне', 'перенаправлення', //uk\n  'пренасочување', //mk\n  'преусмери', 'преусмјери', 'تغییر_مسیر', 'تغییرمسیر', 'تغییرمسیر', //fa\n  'เปลี่ยนทาง', //th\n  'ប្តូរទីតាំងទៅ', //km\n  '転送', //ja\n  '重定向'];\n\n  var references = ['references', 'reference', 'einzelnachweise', 'referencias', 'références', 'notes et références', '脚注', 'referenser', 'bronnen', 'примечания'];\n\n  // and then manually on March 2020\n\n  var i18n$1 = {\n    categories: categories,\n    disambig: disambig,\n    images: images,\n    infoboxes: infoboxes,\n    redirects: redirects,\n    references: references // specials: [\n    //   'спэцыяльныя',\n    //   'especial',\n    //   'speciální',\n    //   'spezial',\n    //   'special',\n    //   'ویژه',\n    //   'toiminnot',\n    //   'kerfissíða',\n    //   'arnawlı',\n    //   'spécial',\n    //   'speciaal',\n    //   'посебно',\n    //   'özel',\n    //   '特別'\n    // ],\n    // users: [\n    //   'удзельнік',\n    //   'usuari',\n    //   'uživatel',\n    //   'benutzer',\n    //   'user',\n    //   'usuario',\n    //   'کاربر',\n    //   'käyttäjä',\n    //   'notandi',\n    //   'paydalanıwshı',\n    //   'utilisateur',\n    //   'gebruiker',\n    //   'корисник',\n    //   'kullanıcı',\n    //   '利用者'\n    // ],\n    // sources: [\n    //   //blacklist these headings, as they're not plain-text\n    //   'references',\n    //   'see also',\n    //   'external links',\n    //   'further reading',\n    //   'notes et références',\n    //   'voir aussi',\n    //   'liens externes',\n    //   '参考文献', //references (ja)\n    //   '脚注', //citations (ja)\n    //   '関連項目', //see also (ja)\n    //   '外部リンク' //external links (ja)\n    // ]\n\n  };\n\n  var languages = {\n    aa: 'Afar',\n    //Afar\n    ab: 'Аҧсуа',\n    //Abkhazian\n    af: 'Afrikaans',\n    //Afrikaans\n    ak: 'Akana',\n    //Akan\n    als: 'Alemannisch',\n    //Alemannic\n    am: 'አማርኛ',\n    //Amharic\n    an: 'Aragonés',\n    //Aragonese\n    ang: 'Englisc',\n    //Anglo-Saxon\n    ar: 'العربية',\n    //Arabic\n    arc: 'ܣܘܪܬ',\n    //Aramaic\n    as: 'অসমীয়া',\n    //Assamese\n    ast: 'Asturianu',\n    //Asturian\n    av: 'Авар',\n    //Avar\n    ay: 'Aymar',\n    //Aymara\n    az: 'Azərbaycanca',\n    //Azerbaijani\n    ba: 'Башҡорт',\n    //Bashkir\n    bar: 'Boarisch',\n    //Bavarian\n    'bat-smg': 'Žemaitėška',\n    //Samogitian\n    bcl: 'Bikol',\n    //Bikol\n    be: 'Беларуская',\n    //Belarusian\n    'be-x-old': 'ltr',\n    //Belarusian\n    bg: 'Български',\n    //Bulgarian\n    bh: 'भोजपुरी',\n    //Bihari\n    bi: 'Bislama',\n    //Bislama\n    bm: 'Bamanankan',\n    //Bambara\n    bn: 'বাংলা',\n    //Bengali\n    bo: 'བོད་ཡིག',\n    //Tibetan\n    bpy: 'ltr',\n    //Bishnupriya\n    br: 'Brezhoneg',\n    //Breton\n    bs: 'Bosanski',\n    //Bosnian\n    bug: 'ᨅᨔ',\n    //Buginese\n    bxr: 'ltr',\n    //Buriat\n    ca: 'Català',\n    //Catalan\n    cdo: 'Chinese',\n    //Min\n    ce: 'Нохчийн',\n    //Chechen\n    ceb: 'Sinugboanong',\n    //Cebuano\n    ch: 'Chamoru',\n    //Chamorro\n    cho: 'Choctaw',\n    //Choctaw\n    chr: 'ᏣᎳᎩ',\n    //Cherokee\n    chy: 'Tsetsêhestâhese',\n    //Cheyenne\n    co: 'Corsu',\n    //Corsican\n    cr: 'Nehiyaw',\n    //Cree\n    cs: 'Česky',\n    //Czech\n    csb: 'Kaszëbsczi',\n    //Kashubian\n    cu: 'Slavonic',\n    //Old\n    cv: 'Чăваш',\n    //Chuvash\n    cy: 'Cymraeg',\n    //Welsh\n    da: 'Dansk',\n    //Danish\n    de: 'Deutsch',\n    //German\n    diq: 'Zazaki',\n    //Dimli\n    dsb: 'ltr',\n    //Lower\n    dv: 'ދިވެހިބަސް',\n    //Divehi\n    dz: 'ཇོང་ཁ',\n    //Dzongkha\n    ee: 'Ɛʋɛ',\n    //Ewe\n    far: 'فارسی',\n    //Farsi\n    el: 'Ελληνικά',\n    //Greek\n    en: 'English',\n    //English\n    eo: 'Esperanto',\n    //Esperanto\n    es: 'Español',\n    //Spanish\n    et: 'Eesti',\n    //Estonian\n    eu: 'Euskara',\n    //Basque\n    ext: 'Estremeñu',\n    //Extremaduran\n    ff: 'Fulfulde',\n    //Peul\n    fi: 'Suomi',\n    //Finnish\n    'fiu-vro': 'Võro',\n    //Võro\n    fj: 'Na',\n    //Fijian\n    fo: 'Føroyskt',\n    //Faroese\n    fr: 'Français',\n    //French\n    frp: 'Arpitan',\n    //Arpitan\n    fur: 'Furlan',\n    //Friulian\n    fy: 'ltr',\n    //West\n    ga: 'Gaeilge',\n    //Irish\n    gan: 'ltr',\n    //Gan\n    gd: 'ltr',\n    //Scottish\n    gil: 'Taetae',\n    //Gilbertese\n    gl: 'Galego',\n    //Galician\n    gn: \"Avañe'ẽ\",\n    //Guarani\n    got: 'gutisk',\n    //Gothic\n    gu: 'ગુજરાતી',\n    //Gujarati\n    gv: 'Gaelg',\n    //Manx\n    ha: 'هَوُسَ',\n    //Hausa\n    hak: 'ltr',\n    //Hakka\n    haw: 'Hawai`i',\n    //Hawaiian\n    he: 'עברית',\n    //Hebrew\n    hi: 'हिन्दी',\n    //Hindi\n    ho: 'ltr',\n    //Hiri\n    hr: 'Hrvatski',\n    //Croatian\n    ht: 'Krèyol',\n    //Haitian\n    hu: 'Magyar',\n    //Hungarian\n    hy: 'Հայերեն',\n    //Armenian\n    hz: 'Otsiherero',\n    //Herero\n    ia: 'Interlingua',\n    //Interlingua\n    id: 'Bahasa',\n    //Indonesian\n    ie: 'Interlingue',\n    //Interlingue\n    ig: 'Igbo',\n    //Igbo\n    ii: 'ltr',\n    //Sichuan\n    ik: 'Iñupiak',\n    //Inupiak\n    ilo: 'Ilokano',\n    //Ilokano\n    io: 'Ido',\n    //Ido\n    is: 'Íslenska',\n    //Icelandic\n    it: 'Italiano',\n    //Italian\n    iu: 'ᐃᓄᒃᑎᑐᑦ',\n    //Inuktitut\n    ja: '日本語',\n    //Japanese\n    jbo: 'Lojban',\n    //Lojban\n    jv: 'Basa',\n    //Javanese\n    ka: 'ქართული',\n    //Georgian\n    kg: 'KiKongo',\n    //Kongo\n    ki: 'Gĩkũyũ',\n    //Kikuyu\n    kj: 'Kuanyama',\n    //Kuanyama\n    kk: 'Қазақша',\n    //Kazakh\n    kl: 'Kalaallisut',\n    //Greenlandic\n    km: 'ភាសាខ្មែរ',\n    //Cambodian\n    kn: 'ಕನ್ನಡ',\n    //Kannada\n    khw: 'کھوار',\n    //Khowar\n    ko: '한국어',\n    //Korean\n    kr: 'Kanuri',\n    //Kanuri\n    ks: 'कश्मीरी',\n    //Kashmiri\n    ksh: 'Ripoarisch',\n    //Ripuarian\n    ku: 'Kurdî',\n    //Kurdish\n    kv: 'Коми',\n    //Komi\n    kw: 'Kernewek',\n    //Cornish\n    ky: 'Kırgızca',\n    //Kirghiz\n    la: 'Latina',\n    //Latin\n    lad: 'Dzhudezmo',\n    //Ladino\n    lan: 'Leb',\n    //Lango\n    lb: 'Lëtzebuergesch',\n    //Luxembourgish\n    lg: 'Luganda',\n    //Ganda\n    li: 'Limburgs',\n    //Limburgian\n    lij: 'Líguru',\n    //Ligurian\n    lmo: 'Lumbaart',\n    //Lombard\n    ln: 'Lingála',\n    //Lingala\n    lo: 'ລາວ',\n    //Laotian\n    lt: 'Lietuvių',\n    //Lithuanian\n    lv: 'Latviešu',\n    //Latvian\n    'map-bms': 'Basa',\n    //Banyumasan\n    mg: 'Malagasy',\n    //Malagasy\n    man: '官話',\n    //Mandarin\n    mh: 'Kajin',\n    //Marshallese\n    mi: 'Māori',\n    //Maori\n    min: 'Minangkabau',\n    //Minangkabau\n    mk: 'Македонски',\n    //Macedonian\n    ml: 'മലയാളം',\n    //Malayalam\n    mn: 'Монгол',\n    //Mongolian\n    mo: 'Moldovenească',\n    //Moldovan\n    mr: 'मराठी',\n    //Marathi\n    ms: 'Bahasa',\n    //Malay\n    mt: 'bil-Malti',\n    //Maltese\n    mus: 'Muskogee',\n    //Creek\n    my: 'Myanmasa',\n    //Burmese\n    na: 'Dorerin',\n    //Nauruan\n    nah: 'Nahuatl',\n    //Nahuatl\n    nap: 'Nnapulitano',\n    //Neapolitan\n    nd: 'ltr',\n    //North\n    nds: 'Plattdüütsch',\n    //Low German\n    'nds-nl': 'Saxon',\n    //Dutch\n    ne: 'नेपाली',\n    //Nepali\n    \"new\": 'नेपालभाषा',\n    //Newar\n    ng: 'Oshiwambo',\n    //Ndonga\n    nl: 'Nederlands',\n    //Dutch\n    nn: 'ltr',\n    //Norwegian\n    no: 'Norsk',\n    //Norwegian\n    nr: 'ltr',\n    //South\n    nso: 'ltr',\n    //Northern\n    nrm: 'Nouormand',\n    //Norman\n    nv: 'Diné',\n    //Navajo\n    ny: 'Chi-Chewa',\n    //Chichewa\n    oc: 'Occitan',\n    //Occitan\n    oj: 'ᐊᓂᔑᓈᐯᒧᐎᓐ',\n    //Ojibwa\n    om: 'Oromoo',\n    //Oromo\n    or: 'ଓଡ଼ିଆ',\n    //Oriya\n    os: 'Иронау',\n    //Ossetian\n    pa: 'ਪੰਜਾਬੀ',\n    //Panjabi\n    pag: 'Pangasinan',\n    //Pangasinan\n    pam: 'Kapampangan',\n    //Kapampangan\n    pap: 'Papiamentu',\n    //Papiamentu\n    pdc: 'ltr',\n    //Pennsylvania\n    pi: 'Pāli',\n    //Pali\n    pih: 'Norfuk',\n    //Norfolk\n    pl: 'Polski',\n    //Polish\n    pms: 'Piemontèis',\n    //Piedmontese\n    ps: 'پښتو',\n    //Pashto\n    pt: 'Português',\n    //Portuguese\n    qu: 'Runa',\n    //Quechua\n    rm: 'ltr',\n    //Raeto\n    rmy: 'Romani',\n    //Romani\n    rn: 'Kirundi',\n    //Kirundi\n    ro: 'Română',\n    //Romanian\n    'roa-rup': 'Armâneashti',\n    //Aromanian\n    ru: 'Русский',\n    //Russian\n    rw: 'Kinyarwandi',\n    //Rwandi\n    sa: 'संस्कृतम्',\n    //Sanskrit\n    sc: 'Sardu',\n    //Sardinian\n    scn: 'Sicilianu',\n    //Sicilian\n    sco: 'Scots',\n    //Scots\n    sd: 'सिनधि',\n    //Sindhi\n    se: 'ltr',\n    //Northern\n    sg: 'Sängö',\n    //Sango\n    sh: 'Srpskohrvatski',\n    //Serbo-Croatian\n    si: 'සිංහල',\n    //Sinhalese\n    simple: 'ltr',\n    //Simple\n    sk: 'Slovenčina',\n    //Slovak\n    sl: 'Slovenščina',\n    //Slovenian\n    sm: 'Gagana',\n    //Samoan\n    sn: 'chiShona',\n    //Shona\n    so: 'Soomaaliga',\n    //Somalia\n    sq: 'Shqip',\n    //Albanian\n    sr: 'Српски',\n    //Serbian\n    ss: 'SiSwati',\n    //Swati\n    st: 'ltr',\n    //Southern\n    su: 'Basa',\n    //Sundanese\n    sv: 'Svenska',\n    //Swedish\n    sw: 'Kiswahili',\n    //Swahili\n    ta: 'தமிழ்',\n    //Tamil\n    te: 'తెలుగు',\n    //Telugu\n    tet: 'Tetun',\n    //Tetum\n    tg: 'Тоҷикӣ',\n    //Tajik\n    th: 'ไทย',\n    //Thai\n    ti: 'ትግርኛ',\n    //Tigrinya\n    tk: 'Туркмен',\n    //Turkmen\n    tl: 'Tagalog',\n    //Tagalog\n    tlh: 'tlhIngan-Hol',\n    //Klingon\n    tn: 'Setswana',\n    //Tswana\n    to: 'Lea',\n    //Tonga\n    tpi: 'ltr',\n    //Tok\n    tr: 'Türkçe',\n    //Turkish\n    ts: 'Xitsonga',\n    //Tsonga\n    tt: 'Tatarça',\n    //Tatar\n    tum: 'chiTumbuka',\n    //Tumbuka\n    tw: 'Twi',\n    //Twi\n    ty: 'Reo',\n    //Tahitian\n    udm: 'Удмурт',\n    //Udmurt\n    ug: 'Uyƣurqə',\n    //Uyghur\n    uk: 'Українська',\n    //Ukrainian\n    ur: 'اردو',\n    //Urdu\n    uz: 'Ўзбек',\n    //Uzbek\n    ve: 'Tshivenḓa',\n    //Venda\n    vi: 'Việtnam',\n    //Vietnamese\n    vec: 'Vèneto',\n    //Venetian\n    vls: 'ltr',\n    //West\n    vo: 'Volapük',\n    //Volapük\n    wa: 'Walon',\n    //Walloon\n    war: 'Winaray',\n    //Waray-Waray\n    wo: 'Wollof',\n    //Wolof\n    xal: 'Хальмг',\n    //Kalmyk\n    xh: 'isiXhosa',\n    //Xhosa\n    yi: 'ייִדיש',\n    //Yiddish\n    yo: 'Yorùbá',\n    //Yoruba\n    za: 'Cuengh',\n    //Zhuang\n    zh: '中文',\n    //Chinese\n    'zh-classical': 'ltr',\n    //Classical\n    'zh-min-nan': 'Bân-lâm-gú',\n    //Minnan\n    'zh-yue': '粵語',\n    //Cantonese\n    zu: 'isiZulu' //Zulu\n\n  };\n\n  var wp = '.wikipedia.org/wiki/$1';\n  var wm = '.wikimedia.org/wiki/$1';\n  var w = 'www.';\n  var interwiki = {\n    acronym: w + 'acronymfinder.com/$1.html',\n    advisory: 'advisory' + wm,\n    advogato: w + 'advogato.org/$1',\n    aew: 'wiki.arabeyes.org/$1',\n    appropedia: w + 'appropedia.org/$1',\n    aquariumwiki: w + 'theaquariumwiki.com/$1',\n    arborwiki: 'localwiki.org/ann-arbor/$1',\n    arxiv: 'arxiv.org/abs/$1',\n    atmwiki: w + 'otterstedt.de/wiki/index.php/$1',\n    baden: w + 'stadtwiki-baden-baden.de/wiki/$1/',\n    battlestarwiki: 'en.battlestarwiki.org/wiki/$1',\n    bcnbio: 'historiapolitica.bcn.cl/resenas_parlamentarias/wiki/$1',\n    beacha: w + 'beachapedia.org/$1',\n    betawiki: 'translatewiki.net/wiki/$1',\n    bibcode: 'adsabs.harvard.edu/abs/$1',\n    bibliowiki: 'wikilivres.org/wiki/$1',\n    bluwiki: 'bluwiki.com/go/$1',\n    blw: 'britainloves' + wp,\n    botwiki: 'botwiki.sno.cc/wiki/$1',\n    boxrec: w + 'boxrec.com/media/index.php?$1',\n    brickwiki: w + 'brickwiki.info/wiki/$1',\n    bugzilla: 'bugzilla.wikimedia.org/show_bug.cgi?id=$1',\n    bulba: 'bulbapedia.bulbagarden.net/wiki/$1',\n    c: 'commons' + wm,\n    c2: 'c2.com/cgi/wiki?$1',\n    c2find: 'c2.com/cgi/wiki?FindPage&value=$1',\n    cache: w + 'google.com/search?q=cache:$1',\n    ĉej: 'esperanto.blahus.cz/cxej/vikio/index.php/$1',\n    cellwiki: 'cell.wikia.com/wiki/$1',\n    centralwikia: 'community.wikia.com/wiki/$1',\n    chej: 'esperanto.blahus.cz/cxej/vikio/index.php/$1',\n    choralwiki: w + 'cpdl.org/wiki/index.php/$1',\n    citizendium: 'en.citizendium.org/wiki/$1',\n    ckwiss: w + 'ck-wissen.de/ckwiki/index.php?title=$1',\n    comixpedia: w + 'comixpedia.org/index.php?title=$1',\n    commons: 'commons' + wm,\n    communityscheme: 'community.schemewiki.org/?c=s&key=$1',\n    communitywiki: 'communitywiki.org/$1',\n    comune: 'rete.comuni-italiani.it/wiki/$1',\n    creativecommons: 'creativecommons.org/licenses/$1',\n    creativecommonswiki: 'wiki.creativecommons.org/$1',\n    cxej: 'esperanto.blahus.cz/cxej/vikio/index.php/$1',\n    dcc: w + 'dccwiki.com/$1',\n    dcdatabase: 'dc.wikia.com/$1',\n    dcma: 'christian-morgenstern.de/dcma/index.php?title=$1',\n    debian: 'wiki.debian.org/$1',\n    delicious: w + 'delicious.com/tag/$1',\n    devmo: 'developer.mozilla.org/en/docs/$1',\n    dictionary: w + 'dict.org/bin/Dict?Database=*&Form=Dict1&Strategy=*&Query=$1',\n    dict: w + 'dict.org/bin/Dict?Database=*&Form=Dict1&Strategy=*&Query=$1',\n    disinfopedia: 'sourcewatch.org/index.php/$1',\n    distributedproofreaders: w + 'pgdp.net/wiki/$1',\n    distributedproofreadersca: w + 'pgdpcanada.net/wiki/index.php/$1',\n    dmoz: 'curlie.org/$1',\n    dmozs: 'curlie.org/search?q=$1',\n    doi: 'doi.org/$1',\n    donate: 'donate' + wm,\n    doom_wiki: 'doom.wikia.com/wiki/$1',\n    download: 'releases.wikimedia.org/$1',\n    dbdump: 'dumps.wikimedia.org/$1/latest/',\n    dpd: 'lema.rae.es/dpd/?key=$1',\n    drae: 'dle.rae.es/?w=$1',\n    dreamhost: 'wiki.dreamhost.com/index.php/$1',\n    drumcorpswiki: w + 'drumcorpswiki.com/index.php/$1',\n    dwjwiki: w + 'suberic.net/cgi-bin/dwj/wiki.cgi?$1',\n    eĉei: w + 'ikso.net/cgi-bin/wiki.pl?$1',\n    ecoreality: w + 'EcoReality.org/wiki/$1',\n    ecxei: w + 'ikso.net/cgi-bin/wiki.pl?$1',\n    elibre: 'enciclopedia.us.es/index.php/$1',\n    emacswiki: w + 'emacswiki.org/emacs?$1',\n    encyc: 'encyc.org/wiki/$1',\n    energiewiki: w + 'netzwerk-energieberater.de/wiki/index.php/$1',\n    englyphwiki: 'en.glyphwiki.org/wiki/$1',\n    enkol: 'enkol.pl/$1',\n    eokulturcentro: 'esperanto.toulouse.free.fr/nova/wikini/wakka.php?wiki=$1',\n    esolang: 'esolangs.org/wiki/$1',\n    etherpad: 'etherpad.wikimedia.org/$1',\n    ethnologue: w + 'ethnologue.com/language/$1',\n    ethnologuefamily: w + 'ethnologue.com/show_family.asp?subid=$1',\n    evowiki: 'wiki.cotch.net/index.php/$1',\n    exotica: w + 'exotica.org.uk/wiki/$1',\n    fanimutationwiki: 'wiki.animutationportal.com/index.php/$1',\n    fedora: 'fedoraproject.org/wiki/$1',\n    finalfantasy: 'finalfantasy.wikia.com/wiki/$1',\n    finnix: w + 'finnix.org/$1',\n    flickruser: w + 'flickr.com/people/$1',\n    flickrphoto: w + 'flickr.com/photo.gne?id=$1',\n    floralwiki: w + 'floralwiki.co.uk/wiki/$1',\n    foldoc: 'foldoc.org/$1',\n    foundation: 'foundation' + wm,\n    foundationsite: 'wikimediafoundation.org/$1',\n    foxwiki: 'fox.wikis.com/wc.dll?Wiki~$1',\n    freebio: 'freebiology.org/wiki/$1',\n    freebsdman: w + 'FreeBSD.org/cgi/man.cgi?apropos=1&query=$1',\n    freeculturewiki: 'wiki.freeculture.org/index.php/$1',\n    freedomdefined: 'freedomdefined.org/$1',\n    freefeel: 'freefeel.org/wiki/$1',\n    freekiwiki: 'wiki.freegeek.org/index.php/$1',\n    // freenode: 'irc://irc.freenode.net/$1',\n    freesoft: 'directory.fsf.org/wiki/$1',\n    ganfyd: 'ganfyd.org/index.php?title=$1',\n    gardenology: w + 'gardenology.org/wiki/$1',\n    gausswiki: 'gauss.ffii.org/$1',\n    gentoo: 'wiki.gentoo.org/wiki/$1',\n    genwiki: 'wiki.genealogy.net/index.php/$1',\n    gerrit: 'gerrit.wikimedia.org/r/$1',\n    git: 'gerrit.wikimedia.org/g/$1',\n    google: w + 'google.com/search?q=$1',\n    googledefine: w + 'google.com/search?q=define:$1',\n    googlegroups: 'groups.google.com/groups?q=$1',\n    guildwarswiki: 'wiki.guildwars.com/wiki/$1',\n    guildwiki: 'guildwars.wikia.com/wiki/$1',\n    guc: 'tools.wmflabs.org/guc/?user=$1',\n    gucprefix: 'tools.wmflabs.org/guc/?isPrefixPattern=1&src=rc&user=$1',\n    gutenberg: w + 'gutenberg.org/etext/$1',\n    gutenbergwiki: w + 'gutenberg.org/wiki/$1',\n    hackerspaces: 'hackerspaces.org/wiki/$1',\n    h2wiki: 'halowiki.net/p/$1',\n    hammondwiki: w + 'dairiki.org/HammondWiki/index.php3?$1',\n    hdl: 'hdl.handle.net/$1',\n    heraldik: 'heraldik-wiki.de/wiki/$1',\n    heroeswiki: 'heroeswiki.com/$1',\n    horizonlabs: 'horizon.wikimedia.org/$1',\n    hrwiki: w + 'hrwiki.org/index.php/$1',\n    hrfwiki: 'fanstuff.hrwiki.org/index.php/$1',\n    hupwiki: 'wiki.hup.hu/index.php/$1',\n    iarchive: 'archive.org/details/$1',\n    imdbname: w + 'imdb.com/name/nm$1/',\n    imdbtitle: w + 'imdb.com/title/tt$1/',\n    imdbcompany: w + 'imdb.com/company/co$1/',\n    imdbcharacter: w + 'imdb.com/character/ch$1/',\n    incubator: 'incubator' + wm,\n    infosecpedia: 'infosecpedia.org/wiki/$1',\n    infosphere: 'theinfosphere.org/$1',\n    // irc: 'irc://irc.freenode.net/$1',\n    // ircs: 'ircs://irc.freenode.net/$1',\n    // ircrc: 'irc://irc.wikimedia.org/$1',\n    // rcirc: 'irc://irc.wikimedia.org/$1',\n    'iso639-3': 'iso639-3.sil.org/code/$1',\n    issn: w + 'worldcat.org/issn/$1',\n    iuridictum: 'iuridictum.pecina.cz/w/$1',\n    jaglyphwiki: 'glyphwiki.org/wiki/$1',\n    jefo: 'esperanto-jeunes.org/wiki/$1',\n    jerseydatabase: 'jerseydatabase.com/wiki.php?id=$1',\n    jira: 'jira.toolserver.org/browse/$1',\n    jspwiki: w + 'ecyrd.com/JSPWiki/Wiki.jsp?page=$1',\n    jstor: w + 'jstor.org/journals/$1',\n    kamelo: 'kamelopedia.mormo.org/index.php/$1',\n    karlsruhe: 'ka.stadtwiki.net/$1',\n    kinowiki: 'kino.skripov.com/index.php/$1',\n    komicawiki: 'wiki.komica.org/?$1',\n    kontuwiki: 'kontu.wiki/$1',\n    wikitech: 'wikitech' + wm,\n    libreplanet: 'libreplanet.org/wiki/$1',\n    linguistlist: 'linguistlist.org/forms/langs/LLDescription.cfm?code=$1',\n    linuxwiki: w + 'linuxwiki.de/$1',\n    linuxwikide: w + 'linuxwiki.de/$1',\n    liswiki: 'liswiki.org/wiki/$1',\n    literateprograms: 'en.literateprograms.org/$1',\n    livepedia: w + 'livepedia.gr/index.php?title=$1',\n    localwiki: 'localwiki.org/$1',\n    lojban: 'mw.lojban.org/papri/$1',\n    lostpedia: 'lostpedia.wikia.com/wiki/$1',\n    lqwiki: 'wiki.linuxquestions.org/wiki/$1',\n    luxo: 'tools.wmflabs.org/guc/?user=$1',\n    mail: 'lists.wikimedia.org/mailman/listinfo/$1',\n    mailarchive: 'lists.wikimedia.org/pipermail/$1',\n    mariowiki: w + 'mariowiki.com/$1',\n    marveldatabase: w + 'marveldatabase.com/wiki/index.php/$1',\n    meatball: 'meatballwiki.org/wiki/$1',\n    mw: w + 'mediawiki.org/wiki/$1',\n    mediazilla: 'bugzilla.wikimedia.org/$1',\n    memoryalpha: 'memory-alpha.fandom.com/wiki/$1',\n    metawiki: 'meta' + wm,\n    metawikimedia: 'meta' + wm,\n    metawikipedia: 'meta' + wm,\n    mineralienatlas: w + 'mineralienatlas.de/lexikon/index.php/$1',\n    moinmoin: 'moinmo.in/$1',\n    monstropedia: w + 'monstropedia.org/?title=$1',\n    mosapedia: 'mosapedia.de/wiki/index.php/$1',\n    mozcom: 'mozilla.wikia.com/wiki/$1',\n    mozillawiki: 'wiki.mozilla.org/$1',\n    mozillazinekb: 'kb.mozillazine.org/$1',\n    musicbrainz: 'musicbrainz.org/doc/$1',\n    mediawikiwiki: w + 'mediawiki.org/wiki/$1',\n    mwod: w + 'merriam-webster.com/dictionary/$1',\n    mwot: w + 'merriam-webster.com/thesaurus/$1',\n    nkcells: w + 'nkcells.info/index.php?title=$1',\n    nara: 'catalog.archives.gov/id/$1',\n    nosmoke: 'no-smok.net/nsmk/$1',\n    nost: 'nostalgia.' + wp,\n    nostalgia: 'nostalgia.' + wp,\n    oeis: 'oeis.org/$1',\n    oldwikisource: 'wikisource.org/wiki/$1',\n    olpc: 'wiki.laptop.org/go/$1',\n    omegawiki: w + 'omegawiki.org/Expression:$1',\n    onelook: w + 'onelook.com/?ls=b&w=$1',\n    openlibrary: 'openlibrary.org/$1',\n    openstreetmap: 'wiki.openstreetmap.org/wiki/$1',\n    openwetware: 'openwetware.org/wiki/$1',\n    opera7wiki: 'operawiki.info/$1',\n    organicdesign: w + 'organicdesign.co.nz/$1',\n    orthodoxwiki: 'orthodoxwiki.org/$1',\n    osmwiki: 'wiki.openstreetmap.org/wiki/$1',\n    otrs: 'ticket.wikimedia.org/otrs/index.pl?Action=AgentTicketZoom&TicketID=$1',\n    otrswiki: 'otrs-wiki' + wm,\n    ourmedia: w + 'socialtext.net/ourmedia/index.cgi?$1',\n    outreach: 'outreach' + wm,\n    outreachwiki: 'outreach' + wm,\n    owasp: w + 'owasp.org/index.php/$1',\n    panawiki: 'wiki.alairelibre.net/index.php?title=$1',\n    patwiki: 'gauss.ffii.org/$1',\n    personaltelco: 'personaltelco.net/wiki/$1',\n    petscan: 'petscan.wmflabs.org/?psid=$1',\n    phab: 'phabricator.wikimedia.org/$1',\n    phabricator: 'phabricator.wikimedia.org/$1',\n    phwiki: w + 'pocketheaven.com/ph/wiki/index.php?title=$1',\n    phpwiki: 'phpwiki.sourceforge.net/phpwiki/index.php?$1',\n    planetmath: 'planetmath.org/node/$1',\n    pmeg: w + 'bertilow.com/pmeg/$1',\n    pmid: w + 'ncbi.nlm.nih.gov/pubmed/$1?dopt=Abstract',\n    pokewiki: 'pokewiki.de/$1',\n    pokéwiki: 'pokewiki.de/$1',\n    policy: 'policy.wikimedia.org/$1',\n    proofwiki: w + 'proofwiki.org/wiki/$1',\n    pyrev: w + 'mediawiki.org/wiki/Special:Code/pywikipedia/$1',\n    pythoninfo: 'wiki.python.org/moin/$1',\n    pythonwiki: w + 'pythonwiki.de/$1',\n    pywiki: 'c2.com/cgi/wiki?$1',\n    psycle: 'psycle.sourceforge.net/wiki/$1',\n    quality: 'quality' + wm,\n    quarry: 'quarry.wmflabs.org/$1',\n    regiowiki: 'regiowiki.at/wiki/$1',\n    rev: w + 'mediawiki.org/wiki/Special:Code/MediaWiki/$1',\n    revo: 'purl.org/NET/voko/revo/art/$1.html',\n    rfc: 'tools.ietf.org/html/rfc$1',\n    rheinneckar: 'rhein-neckar-wiki.de/$1',\n    robowiki: 'robowiki.net/?$1',\n    rodovid: 'en.rodovid.org/wk/$1',\n    reuterswiki: 'glossary.reuters.com/index.php/$1',\n    rowiki: 'wiki.rennkuckuck.de/index.php/$1',\n    rt: 'rt.wikimedia.org/Ticket/Display.html?id=$1',\n    // rtfm: 'ftp://rtfm.mit.edu/pub/faqs/$1',\n    s23wiki: 's23.org/wiki/$1',\n    scholar: 'scholar.google.com/scholar?q=$1',\n    schoolswp: 'schools-' + wp,\n    scores: 'imslp.org/wiki/$1',\n    scoutwiki: 'en.scoutwiki.org/$1',\n    scramble: w + 'scramble.nl/wiki/index.php?title=$1',\n    seapig: w + 'seapig.org/$1',\n    seattlewiki: 'seattle.wikia.com/wiki/$1',\n    slwiki: 'wiki.secondlife.com/wiki/$1',\n    'semantic-mw': w + 'semantic-mediawiki.org/wiki/$1',\n    senseislibrary: 'senseis.xmp.net/?$1',\n    sharemap: 'sharemap.org/$1',\n    silcode: w + 'sil.org/iso639-3/documentation.asp?id=$1',\n    slashdot: 'slashdot.org/article.pl?sid=$1',\n    sourceforge: 'sourceforge.net/$1',\n    spcom: 'spcom' + wm,\n    species: 'species' + wm,\n    squeak: 'wiki.squeak.org/squeak/$1',\n    stats: 'stats.wikimedia.org/$1',\n    stewardry: 'tools.wmflabs.org/meta/stewardry/?wiki=$1',\n    strategy: 'strategy' + wm,\n    strategywiki: 'strategywiki.org/wiki/$1',\n    sulutil: 'meta.wikimedia.org/wiki/Special:CentralAuth/$1',\n    swtrain: 'train.spottingworld.com/$1',\n    svn: 'svn.wikimedia.org/viewvc/mediawiki/$1?view=log',\n    swinbrain: 'swinbrain.ict.swin.edu.au/wiki/$1',\n    tabwiki: w + 'tabwiki.com/index.php/$1',\n    tclerswiki: 'wiki.tcl.tk/$1',\n    technorati: w + 'technorati.com/search/$1',\n    tenwiki: 'ten.' + wp,\n    testwiki: 'test.' + wp,\n    testwikidata: 'test.wikidata.org/wiki/$1',\n    test2wiki: 'test2.' + wp,\n    tfwiki: 'tfwiki.net/wiki/$1',\n    thelemapedia: w + 'thelemapedia.org/index.php/$1',\n    theopedia: w + 'theopedia.com/$1',\n    thinkwiki: w + 'thinkwiki.org/wiki/$1',\n    ticket: 'ticket.wikimedia.org/otrs/index.pl?Action=AgentTicketZoom&TicketNumber=$1',\n    tmbw: 'tmbw.net/wiki/$1',\n    tmnet: w + 'technomanifestos.net/?$1',\n    tmwiki: w + 'EasyTopicMaps.com/?page=$1',\n    toolforge: 'tools.wmflabs.org/$1',\n    toollabs: 'tools.wmflabs.org/$1',\n    tools: 'toolserver.org/$1',\n    tswiki: w + 'mediawiki.org/wiki/Toolserver:$1',\n    translatewiki: 'translatewiki.net/wiki/$1',\n    tviv: 'tviv.org/wiki/$1',\n    tvtropes: w + 'tvtropes.org/pmwiki/pmwiki.php/Main/$1',\n    twiki: 'twiki.org/cgi-bin/view/$1',\n    tyvawiki: w + 'tyvawiki.org/wiki/$1',\n    umap: 'umap.openstreetmap.fr/$1',\n    uncyclopedia: 'en.uncyclopedia.co/wiki/$1',\n    unihan: w + 'unicode.org/cgi-bin/GetUnihanData.pl?codepoint=$1',\n    unreal: 'wiki.beyondunreal.com/wiki/$1',\n    urbandict: w + 'urbandictionary.com/define.php?term=$1',\n    usej: w + 'tejo.org/usej/$1',\n    usemod: w + 'usemod.com/cgi-bin/wiki.pl?$1',\n    usability: 'usability' + wm,\n    utrs: 'utrs.wmflabs.org/appeal.php?id=$1',\n    vikidia: 'fr.vikidia.org/wiki/$1',\n    vlos: 'tusach.thuvienkhoahoc.com/wiki/$1',\n    vkol: 'kol.coldfront.net/thekolwiki/index.php/$1',\n    voipinfo: w + 'voip-info.org/wiki/view/$1',\n    votewiki: 'vote' + wm,\n    werelate: w + 'werelate.org/wiki/$1',\n    wg: 'wg-en.' + wp,\n    wikia: w + 'wikia.com/wiki/w:c:$1',\n    wikiasite: w + 'wikia.com/wiki/w:c:$1',\n    wikiapiary: 'wikiapiary.com/wiki/$1',\n    wikibooks: 'en.wikibooks.org/wiki/$1',\n    wikichristian: w + 'wikichristian.org/index.php?title=$1',\n    wikicities: w + 'wikia.com/wiki/w:$1',\n    wikicity: w + 'wikia.com/wiki/w:c:$1',\n    wikiconference: 'wikiconference.org/wiki/$1',\n    wikidata: w + 'wikidata.org/wiki/$1',\n    wikif1: w + 'wikif1.org/$1',\n    wikifur: 'en.wikifur.com/wiki/$1',\n    wikihow: w + 'wikihow.com/$1',\n    wikiindex: 'wikiindex.org/$1',\n    wikilemon: 'wiki.illemonati.com/$1',\n    wikilivres: 'wikilivres.org/wiki/$1',\n    wikilivresru: 'wikilivres.ru/$1',\n    'wikimac-de': 'apfelwiki.de/wiki/Main/$1',\n    wikimedia: 'foundation' + wm,\n    wikinews: 'en.wikinews.org/wiki/$1',\n    wikinfo: 'wikinfo.org/w/index.php/$1',\n    wikinvest: 'meta.wikimedia.org/wiki/Interwiki_map/discontinued#Wikinvest',\n    wikiotics: 'wikiotics.org/$1',\n    wikipapers: 'wikipapers.referata.com/wiki/$1',\n    wikipedia: 'en.' + wp,\n    wikipediawikipedia: 'en.wikipedia.org/wiki/Wikipedia:$1',\n    wikiquote: 'en.wikiquote.org/wiki/$1',\n    wikisophia: 'wikisophia.org/index.php?title=$1',\n    wikisource: 'en.wikisource.org/wiki/$1',\n    wikispecies: 'species' + wm,\n    wikispot: 'wikispot.org/?action=gotowikipage&v=$1',\n    wikiskripta: w + 'wikiskripta.eu/index.php/$1',\n    labsconsole: 'wikitech' + wm,\n    wikiti: 'wikiti.denglend.net/index.php?title=$1',\n    wikiversity: 'en.wikiversity.org/wiki/$1',\n    wikivoyage: 'en.wikivoyage.org/wiki/$1',\n    betawikiversity: 'beta.wikiversity.org/wiki/$1',\n    wikiwikiweb: 'c2.com/cgi/wiki?$1',\n    wiktionary: 'en.wiktionary.org/wiki/$1',\n    wipipedia: 'wipipedia.org/index.php/$1',\n    wlug: w + 'wlug.org.nz/$1',\n    wmam: 'am' + wm,\n    wmar: w + 'wikimedia.org.ar/wiki/$1',\n    wmat: 'mitglieder.wikimedia.at/$1',\n    wmau: 'wikimedia.org.au/wiki/$1',\n    wmbd: 'bd' + wm,\n    wmbe: 'be' + wm,\n    wmbr: 'br' + wm,\n    wmca: 'ca' + wm,\n    wmch: w + 'wikimedia.ch/$1',\n    wmcl: w + 'wikimediachile.cl/index.php?title=$1',\n    wmcn: 'cn' + wm,\n    wmco: 'co' + wm,\n    wmcz: w + 'wikimedia.cz/web/$1',\n    wmdc: 'wikimediadc.org/wiki/$1',\n    securewikidc: 'secure.wikidc.org/$1',\n    wmde: 'wikimedia.de/wiki/$1',\n    wmdk: 'dk' + wm,\n    wmee: 'ee' + wm,\n    wmec: 'ec' + wm,\n    wmes: w + 'wikimedia.es/wiki/$1',\n    wmet: 'ee' + wm,\n    wmfdashboard: 'outreachdashboard.wmflabs.org/$1',\n    wmfi: 'fi' + wm,\n    wmfr: 'wikimedia.fr/$1',\n    wmge: 'ge' + wm,\n    wmhi: 'hi' + wm,\n    wmhk: 'meta.wikimedia.org/wiki/Wikimedia_Hong_Kong',\n    wmhu: 'wikimedia.hu/wiki/$1',\n    wmid: 'id' + wm,\n    wmil: w + 'wikimedia.org.il/$1',\n    wmin: 'wiki.wikimedia.in/$1',\n    wmit: 'wiki.wikimedia.it/wiki/$1',\n    wmke: 'meta.wikimedia.org/wiki/Wikimedia_Kenya',\n    wmmk: 'mk' + wm,\n    wmmx: 'mx' + wm,\n    wmnl: 'nl' + wm,\n    wmnyc: 'nyc' + wm,\n    wmno: 'no' + wm,\n    'wmpa-us': 'pa-us' + wm,\n    wmph: 'meta.wikimedia.org/wiki/Wikimedia_Philippines',\n    wmpl: 'pl' + wm,\n    wmpt: 'pt' + wm,\n    wmpunjabi: 'punjabi' + wm,\n    wmromd: 'romd' + wm,\n    wmrs: 'rs' + wm,\n    wmru: 'ru' + wm,\n    wmse: 'se' + wm,\n    wmsk: 'wikimedia.sk/$1',\n    wmtr: 'tr' + wm,\n    wmtw: 'wikimedia.tw/wiki/index.php5/$1',\n    wmua: 'ua' + wm,\n    wmuk: 'wikimedia.org.uk/wiki/$1',\n    wmve: 'wikimedia.org.ve/wiki/$1',\n    wmza: 'wikimedia.org.za/wiki/$1',\n    wm2005: 'wikimania2005' + wm,\n    wm2006: 'wikimania2006' + wm,\n    wm2007: 'wikimania2007' + wm,\n    wm2008: 'wikimania2008' + wm,\n    wm2009: 'wikimania2009' + wm,\n    wm2010: 'wikimania2010' + wm,\n    wm2011: 'wikimania2011' + wm,\n    wm2012: 'wikimania2012' + wm,\n    wm2013: 'wikimania2013' + wm,\n    wm2014: 'wikimania2014' + wm,\n    wm2015: 'wikimania2015' + wm,\n    wm2016: 'wikimania2016' + wm,\n    wm2017: 'wikimania2017' + wm,\n    wm2018: 'wikimania2018' + wm,\n    wmania: 'wikimania' + wm,\n    wikimania: 'wikimania' + wm,\n    wmteam: 'wikimaniateam' + wm,\n    wmf: 'foundation' + wm,\n    wmfblog: 'blog.wikimedia.org/$1',\n    wmdeblog: 'blog.wikimedia.de/$1',\n    wookieepedia: 'starwars.wikia.com/wiki/$1',\n    wowwiki: w + 'wowwiki.com/$1',\n    wqy: 'wqy.sourceforge.net/cgi-bin/index.cgi?$1',\n    wurmpedia: 'wurmpedia.com/index.php/$1',\n    viaf: 'viaf.org/viaf/$1',\n    zrhwiki: w + 'zrhwiki.ch/wiki/$1',\n    zum: 'wiki.zum.de/$1',\n    zwiki: w + 'zwiki.org/$1',\n    m: 'meta' + wm,\n    meta: 'meta' + wm,\n    sep11: 'sep11.' + wp,\n    d: w + 'wikidata.org/wiki/$1',\n    minnan: 'zh-min-nan.' + wp,\n    nb: 'no.' + wp,\n    'zh-cfr': 'zh-min-nan.' + wp,\n    'zh-cn': 'zh.' + wp,\n    'zh-tw': 'zh.' + wp,\n    nan: 'zh-min-nan.' + wp,\n    vro: 'fiu-vro.' + wp,\n    cmn: 'zh.' + wp,\n    lzh: 'zh-classical.' + wp,\n    rup: 'roa-rup.' + wp,\n    gsw: 'als.' + wp,\n    'be-tarask': 'be-x-old.' + wp,\n    sgs: 'bat-smg.' + wp,\n    egl: 'eml.' + wp,\n    w: 'en.' + wp,\n    wikt: 'en.wiktionary.org/wiki/$1',\n    q: 'en.wikiquote.org/wiki/$1',\n    b: 'en.wikibooks.org/wiki/$1',\n    n: 'en.wikinews.org/wiki/$1',\n    s: 'en.wikisource.org/wiki/$1',\n    chapter: 'en' + wm,\n    v: 'en.wikiversity.org/wiki/$1',\n    voy: 'en.wikivoyage.org/wiki/$1'\n  };\n\n  //so we have to whitelist allowable interwiki links\n  //add language prefixes too..\n\n  Object.keys(languages).forEach(function (k) {\n    interwiki[k] = k + '.wikipedia.org/wiki/$1';\n  }); //this is predictably very complicated.\n  // https://meta.wikimedia.org/wiki/Help:Interwiki_linking\n\n  var parseInterwiki = function parseInterwiki(obj) {\n    var str = obj.page || '';\n\n    if (str.indexOf(':') !== -1) {\n      var m = str.match(/^(.*):(.*)/);\n\n      if (m === null) {\n        return obj;\n      }\n\n      var site = m[1] || '';\n      site = site.toLowerCase(); //only allow interwikis to these specific places\n\n      if (interwiki.hasOwnProperty(site) === false) {\n        return obj;\n      }\n\n      obj.wiki = site;\n      obj.page = m[2];\n    }\n\n    return obj;\n  };\n\n  var interwiki$1 = parseInterwiki;\n\n  var ignore_links = /^:?(category|catégorie|Kategorie|Categoría|Categoria|Categorie|Kategoria|تصنيف|image|file|image|fichier|datei|media):/i;\n  var external_link = /\\[(https?|news|ftp|mailto|gopher|irc)(:\\/\\/[^\\]\\| ]{4,1500})([\\| ].*?)?\\]/g;\n  var link_reg = /\\[\\[(.{0,160}?)\\]\\]([a-z]+)?(\\w{0,10})/gi; //allow dangling suffixes - \"[[flanders]]s\"\n\n  var external_links = function external_links(links, str) {\n    str.replace(external_link, function (raw, protocol, link, text) {\n      text = text || '';\n      links.push({\n        type: 'external',\n        site: protocol + link,\n        text: text.trim(),\n        raw: raw\n      });\n      return text;\n    });\n    return links;\n  };\n\n  var internal_links = function internal_links(links, str) {\n    //regular links\n    str.replace(link_reg, function (raw, s, suffix) {\n      var txt = null; //make a copy of original\n\n      var link = s;\n\n      if (s.match(/\\|/)) {\n        //replacement link [[link|text]]\n        s = s.replace(/\\[\\[(.{2,100}?)\\]\\](\\w{0,10})/g, '$1$2'); //remove ['s and keep suffix\n\n        link = s.replace(/(.{2,100})\\|.{0,200}/, '$1'); //replaced links\n\n        txt = s.replace(/.{2,100}?\\|/, ''); //handle funky case of [[toronto|]]\n\n        if (txt === null && link.match(/\\|$/)) {\n          link = link.replace(/\\|$/, '');\n          txt = link;\n        }\n      } //kill off non-wikipedia namespaces\n\n\n      if (link.match(ignore_links)) {\n        return s;\n      } //kill off just these just-anchor links [[#history]]\n      // if (link.match(/^#/i)) {\n      //   console.log(s)\n      //   return s\n      // }\n      //remove anchors from end [[toronto#history]]\n\n\n      var obj = {\n        page: link,\n        raw: raw\n      };\n      obj.page = obj.page.replace(/#(.*)/, function (a, b) {\n        obj.anchor = b;\n        return '';\n      }); //grab any fr:Paris parts\n\n      obj = interwiki$1(obj);\n\n      if (obj.wiki) {\n        obj.type = 'interwiki';\n      }\n\n      if (txt !== null && txt !== obj.page) {\n        obj.text = txt;\n      } //finally, support [[link]]'s apostrophe\n\n\n      if (suffix) {\n        obj.text = obj.text || obj.page;\n        obj.text += suffix.trim();\n      } //titlecase it, if necessary\n\n\n      if (obj.page && /^[A-Z]/.test(obj.page) === false) {\n        if (!obj.text) {\n          obj.text = obj.page;\n        }\n\n        obj.page = obj.page;\n      }\n\n      links.push(obj);\n      return s;\n    });\n    return links;\n  }; //grab an array of internal links in the text\n\n\n  var parse_links = function parse_links(str) {\n    var links = []; //first, parse external links\n\n    links = external_links(links, str); //internal links\n\n    links = internal_links(links, str);\n\n    if (links.length === 0) {\n      return undefined;\n    }\n\n    return links;\n  };\n\n  var parse = parse_links;\n\n  var REDIRECT_REGEX = new RegExp('^[ \\n\\t]*?#(' + i18n$1.redirects.join('|') + ') *?(\\\\[\\\\[.{2,180}?\\\\]\\\\])', 'i');\n\n  var isRedirect = function isRedirect(wiki) {\n    //too long to be a redirect?\n    if (!wiki || wiki.length > 500) {\n      return false;\n    }\n\n    return REDIRECT_REGEX.test(wiki);\n  };\n\n  var parse$1 = function parse$1(wiki) {\n    var m = wiki.match(REDIRECT_REGEX);\n\n    if (m && m[2]) {\n      var links = parse(m[2]) || [];\n      return links[0];\n    }\n\n    return {};\n  };\n\n  var redirects$1 = {\n    isRedirect: isRedirect,\n    parse: parse$1\n  };\n\n  //okay, i know you're not supposed to regex html, but...\n  //https://en.wikipedia.org/wiki/Help:HTML_in_wikitext\n  //these are things we throw-away\n  //these will mess-up if they're nested, but they're not usually.\n  var ignore = ['table', 'code', 'score', 'data', 'categorytree', 'charinsert', 'hiero', 'imagemap', 'inputbox', 'nowiki', 'poem', 'references', 'source', 'syntaxhighlight', 'timeline'];\n  var openTag = \"< ?(\".concat(ignore.join('|'), \") ?[^>]{0,200}?>\");\n  var closeTag = \"< ?/ ?(\".concat(ignore.join('|'), \") ?>\");\n  var anyChar = '\\\\s\\\\S'; //including newline\n\n  var noThanks = new RegExp(\"\".concat(openTag, \"[\").concat(anyChar, \"]+?\").concat(closeTag), 'ig');\n\n  var kill_xml = function kill_xml(wiki) {\n    //(<ref> tags are parsed in Section class) - luckily, refs can't be recursive.\n    //types of html/xml that we want to trash completely.\n    wiki = wiki.replace(noThanks, ' '); //some xml-like fragments we can also kill\n\n    wiki = wiki.replace(/ ?< ?(span|div|table|data) [a-zA-Z0-9=%\\.#:;'\" ]{2,100}\\/? ?> ?/g, ' '); //<ref name=\"asd\">\n    //only kill ref tags if they are selfclosing\n\n    wiki = wiki.replace(/ ?< ?(ref) [a-zA-Z0-9=\" ]{2,100}\\/ ?> ?/g, ' '); //<ref name=\"asd\"/>\n    //some formatting xml, we'll keep their insides though\n\n    wiki = wiki.replace(/ ?<[ \\/]?(p|sub|sup|span|nowiki|div|table|br|tr|td|th|pre|pre2|hr)[ \\/]?> ?/g, ' '); //<sub>, </sub>\n\n    wiki = wiki.replace(/ ?<[ \\/]?(abbr|bdi|bdo|blockquote|cite|del|dfn|em|i|ins|kbd|mark|q|s|small)[ \\/]?> ?/g, ' '); //<abbr>, </abbr>\n\n    wiki = wiki.replace(/ ?<[ \\/]?h[0-9][ \\/]?> ?/g, ' '); //<h2>, </h2>\n\n    wiki = wiki.replace(/ ?< ?br ?\\/> ?/g, '\\n'); //<br />\n\n    return wiki.trim();\n  };\n\n  var kill_xml_1 = kill_xml;\n\n  function preProcess(doc) {\n    var wiki = doc.wiki; //remove comments\n\n    wiki = wiki.replace(/<!--[\\s\\S]{0,2000}?-->/g, '');\n    wiki = wiki.replace(/__(NOTOC|NOEDITSECTION|FORCETOC|TOC)__/gi, ''); //signitures\n\n    wiki = wiki.replace(/~~{1,3}/g, ''); //windows newlines\n\n    wiki = wiki.replace(/\\r/g, ''); //japanese periods - '。'\n\n    wiki = wiki.replace(/\\u3002/g, '. '); //horizontal rule\n\n    wiki = wiki.replace(/----/g, ''); //formatting for templates-in-templates...\n\n    wiki = wiki.replace(/\\{\\{\\}\\}/g, ' – ');\n    wiki = wiki.replace(/\\{\\{\\\\\\}\\}/g, ' / '); //space\n\n    wiki = wiki.replace(/&nbsp;/g, ' '); //give it the inglorious send-off it deserves..\n\n    wiki = kill_xml_1(wiki); //({{template}},{{template}}) leaves empty parentheses\n\n    wiki = wiki.replace(/\\([,;: ]+?\\)/g, ''); //these templates just screw things up, too\n\n    wiki = wiki.replace(/{{(baseball|basketball) (primary|secondary) (style|color).*?\\}\\}/i, '');\n    doc.wiki = wiki;\n  }\n\n  var preProcess_1 = preProcess;\n\n  // dumpster-dive throws everything into mongodb  - github.com/spencermountain/dumpster-dive\n  // mongo has some opinions about what characters are allowed as keys and ids.\n  //https://stackoverflow.com/questions/12397118/mongodb-dot-in-key-name/30254815#30254815\n  var specialChar = /[\\\\\\.$]/;\n\n  var encodeStr = function encodeStr(str) {\n    if (typeof str !== 'string') {\n      str = '';\n    }\n\n    str = str.replace(/\\\\/g, '\\\\\\\\');\n    str = str.replace(/^\\$/, \"\\\\u0024\");\n    str = str.replace(/\\./g, \"\\\\u002e\");\n    return str;\n  };\n\n  var encodeObj = function encodeObj() {\n    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var keys = Object.keys(obj);\n\n    for (var i = 0; i < keys.length; i += 1) {\n      if (specialChar.test(keys[i]) === true) {\n        var str = encodeStr(keys[i]);\n\n        if (str !== keys[i]) {\n          obj[str] = obj[keys[i]];\n          delete obj[keys[i]];\n        }\n      }\n    }\n\n    return obj;\n  };\n\n  var encode = {\n    encodeObj: encodeObj\n  };\n\n  var defaults$4 = {\n    headers: true,\n    depth: true,\n    paragraphs: true,\n    images: true,\n    tables: true,\n    templates: true,\n    infoboxes: true,\n    lists: true,\n    references: true\n  }; //\n\n  var toJSON$1 = function toJSON(section, options) {\n    options = setDefaults_1(options, defaults$4);\n    var data = {};\n\n    if (options.headers === true) {\n      data.title = section.title();\n    }\n\n    if (options.depth === true) {\n      data.depth = section.depth;\n    } //these return objects\n\n\n    if (options.paragraphs === true) {\n      var paragraphs = section.paragraphs().map(function (p) {\n        return p.json(options);\n      });\n\n      if (paragraphs.length > 0) {\n        data.paragraphs = paragraphs;\n      }\n    } //image json data\n\n\n    if (options.images === true) {\n      var images = section.images().map(function (img) {\n        return img.json(options);\n      });\n\n      if (images.length > 0) {\n        data.images = images;\n      }\n    } //table json data\n\n\n    if (options.tables === true) {\n      var tables = section.tables().map(function (t) {\n        return t.json(options);\n      });\n\n      if (tables.length > 0) {\n        data.tables = tables;\n      }\n    } //template json data\n\n\n    if (options.templates === true) {\n      var templates = section.templates();\n\n      if (templates.length > 0) {\n        data.templates = templates; //encode them, for mongodb\n\n        if (options.encode === true) {\n          data.templates.forEach(function (t) {\n            return encode.encodeObj(t);\n          });\n        }\n      }\n    } //infobox json data\n\n\n    if (options.infoboxes === true) {\n      var infoboxes = section.infoboxes().map(function (i) {\n        return i.json(options);\n      });\n\n      if (infoboxes.length > 0) {\n        data.infoboxes = infoboxes;\n      }\n    } //list json data\n\n\n    if (options.lists === true) {\n      var lists = section.lists().map(function (list) {\n        return list.json(options);\n      });\n\n      if (lists.length > 0) {\n        data.lists = lists;\n      }\n    } //list references - default true\n\n\n    if (options.references === true || options.citations === true) {\n      var references = section.references().map(function (ref) {\n        return ref.json(options);\n      });\n\n      if (references.length > 0) {\n        data.references = references;\n      }\n    } //default off\n\n\n    if (options.sentences === true) {\n      data.sentences = section.sentences().map(function (s) {\n        return s.json(options);\n      });\n    }\n\n    return data;\n  };\n\n  var toJson$2 = toJSON$1;\n\n  var defaults$5 = {\n    tables: true,\n    references: true,\n    paragraphs: true,\n    templates: true,\n    infoboxes: true\n  }; //the stuff between headings - 'History' section for example\n\n  var Section = function Section(data) {\n    this.depth = data.depth;\n    this.doc = null;\n    this._title = data.title || '';\n    Object.defineProperty(this, 'doc', {\n      enumerable: false,\n      value: null\n    });\n    data.templates = data.templates || [];\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  var methods$2 = {\n    title: function title() {\n      return this._title || '';\n    },\n    index: function index() {\n      if (!this.doc) {\n        return null;\n      }\n\n      var index = this.doc.sections().indexOf(this);\n\n      if (index === -1) {\n        return null;\n      }\n\n      return index;\n    },\n    indentation: function indentation() {\n      return this.depth;\n    },\n    sentences: function sentences(n) {\n      var arr = this.paragraphs().reduce(function (list, p) {\n        return list.concat(p.sentences());\n      }, []);\n\n      if (typeof n === 'number') {\n        return arr[n];\n      }\n\n      return arr || [];\n    },\n    paragraphs: function paragraphs(n) {\n      var arr = this.data.paragraphs || [];\n\n      if (typeof n === 'number') {\n        return arr[n];\n      }\n\n      return arr || [];\n    },\n    paragraph: function paragraph(n) {\n      var arr = this.data.paragraphs || [];\n\n      if (typeof n === 'number') {\n        return arr[n];\n      }\n\n      return arr[0];\n    },\n    links: function links(n) {\n      var arr = [];\n      this.infoboxes().forEach(function (templ) {\n        templ.links(n).forEach(function (link) {\n          return arr.push(link);\n        });\n      });\n      this.sentences().forEach(function (s) {\n        s.links(n).forEach(function (link) {\n          return arr.push(link);\n        });\n      });\n      this.tables().forEach(function (t) {\n        t.links(n).forEach(function (link) {\n          return arr.push(link);\n        });\n      });\n      this.lists().forEach(function (list) {\n        list.links(n).forEach(function (link) {\n          return arr.push(link);\n        });\n      });\n\n      if (typeof n === 'number') {\n        return arr[n];\n      } else if (typeof n === 'string') {\n        //grab a link like .links('Fortnight')\n        n = n.charAt(0).toUpperCase() + n.substring(1); //titlecase it\n\n        var link = arr.find(function (o) {\n          return o.page() === n;\n        });\n        return link === undefined ? [] : [link];\n      }\n\n      return arr;\n    },\n    tables: function tables(clue) {\n      var arr = this.data.tables || [];\n\n      if (typeof clue === 'number') {\n        return arr[clue];\n      }\n\n      return arr;\n    },\n    templates: function templates(clue) {\n      var arr = this.data.templates || [];\n      arr = arr.map(function (t) {\n        return t.json();\n      });\n\n      if (typeof clue === 'number') {\n        return arr[clue];\n      }\n\n      if (typeof clue === 'string') {\n        clue = clue.toLowerCase();\n        return arr.filter(function (o) {\n          return o.template === clue || o.name === clue;\n        });\n      }\n\n      return arr;\n    },\n    infoboxes: function infoboxes(clue) {\n      var arr = this.data.infoboxes || [];\n\n      if (typeof clue === 'number') {\n        return arr[clue];\n      }\n\n      return arr;\n    },\n    coordinates: function coordinates(clue) {\n      var arr = [].concat(this.templates('coord'), this.templates('coor'));\n\n      if (typeof clue === 'number') {\n        if (!arr[clue]) {\n          return [];\n        }\n\n        return arr[clue];\n      }\n\n      return arr;\n    },\n    lists: function lists(clue) {\n      var arr = [];\n      this.paragraphs().forEach(function (p) {\n        arr = arr.concat(p.lists());\n      });\n\n      if (typeof clue === 'number') {\n        return arr[clue];\n      }\n\n      return arr;\n    },\n    interwiki: function interwiki(num) {\n      var arr = [];\n      this.paragraphs().forEach(function (p) {\n        arr = arr.concat(p.interwiki());\n      });\n\n      if (typeof num === 'number') {\n        return arr[num];\n      }\n\n      return arr || [];\n    },\n    images: function images(clue) {\n      var arr = [];\n      this.paragraphs().forEach(function (p) {\n        arr = arr.concat(p.images());\n      });\n\n      if (typeof clue === 'number') {\n        return arr[clue];\n      }\n\n      return arr || [];\n    },\n    references: function references(clue) {\n      var arr = this.data.references || [];\n\n      if (typeof clue === 'number') {\n        return arr[clue];\n      }\n\n      return arr;\n    },\n    //transformations\n    remove: function remove() {\n      if (!this.doc) {\n        return null;\n      }\n\n      var bads = {};\n      bads[this.title()] = true; //remove children too\n\n      this.children().forEach(function (sec) {\n        return bads[sec.title()] = true;\n      });\n      var arr = this.doc.data.sections;\n      arr = arr.filter(function (sec) {\n        return bads.hasOwnProperty(sec.title()) !== true;\n      });\n      this.doc.data.sections = arr;\n      return this.doc;\n    },\n    //move-around sections like in jquery\n    nextSibling: function nextSibling() {\n      if (!this.doc) {\n        return null;\n      }\n\n      var sections = this.doc.sections();\n      var index = this.index();\n\n      for (var i = index + 1; i < sections.length; i += 1) {\n        if (sections[i].depth < this.depth) {\n          return null;\n        }\n\n        if (sections[i].depth === this.depth) {\n          return sections[i];\n        }\n      }\n\n      return null;\n    },\n    lastSibling: function lastSibling() {\n      if (!this.doc) {\n        return null;\n      }\n\n      var sections = this.doc.sections();\n      var index = this.index();\n      return sections[index - 1] || null;\n    },\n    children: function children(n) {\n      if (!this.doc) {\n        return null;\n      }\n\n      var sections = this.doc.sections();\n      var index = this.index();\n      var children = []; //(immediately preceding sections with higher depth)\n\n      if (sections[index + 1] && sections[index + 1].depth > this.depth) {\n        for (var i = index + 1; i < sections.length; i += 1) {\n          if (sections[i].depth > this.depth) {\n            children.push(sections[i]);\n          } else {\n            break;\n          }\n        }\n      }\n\n      if (typeof n === 'string') {\n        n = n.toLowerCase();\n        return children.find(function (s) {\n          return s.title().toLowerCase() === n;\n        });\n      }\n\n      if (typeof n === 'number') {\n        return children[n];\n      }\n\n      return children;\n    },\n    parent: function parent() {\n      if (!this.doc) {\n        return null;\n      }\n\n      var sections = this.doc.sections();\n      var index = this.index();\n\n      for (var i = index; i >= 0; i -= 1) {\n        if (sections[i] && sections[i].depth < this.depth) {\n          return sections[i];\n        }\n      }\n\n      return null;\n    },\n    text: function text(options) {\n      options = setDefaults_1(options, defaults$5);\n      var pList = this.paragraphs();\n      pList = pList.map(function (p) {\n        return p.text(options);\n      });\n      return pList.join('\\n\\n');\n    },\n    json: function json(options) {\n      options = setDefaults_1(options, defaults$5);\n      return toJson$2(this, options);\n    }\n  }; //aliases\n\n  methods$2.next = methods$2.nextSibling;\n  methods$2.last = methods$2.lastSibling;\n  methods$2.previousSibling = methods$2.lastSibling;\n  methods$2.previous = methods$2.lastSibling;\n  methods$2.citations = methods$2.references;\n  methods$2.sections = methods$2.children;\n  Object.keys(methods$2).forEach(function (k) {\n    Section.prototype[k] = methods$2[k];\n  });\n  var Section_1 = Section;\n\n  var helpers = {\n    capitalise: function capitalise(str) {\n      if (str && typeof str === 'string') {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n\n      return '';\n    },\n    trim_whitespace: function trim_whitespace(str) {\n      if (str && typeof str === 'string') {\n        str = str.replace(/^\\s\\s*/, '');\n        str = str.replace(/\\s\\s*$/, '');\n        str = str.replace(/ {2}/, ' ');\n        str = str.replace(/\\s, /, ', ');\n        return str;\n      }\n\n      return '';\n    }\n  };\n\n  var defaults$6 = {\n    type: 'internal'\n  };\n\n  var Link = function Link(data) {\n    data = data || {};\n    data = Object.assign({}, defaults$6, data); // console.log(data)\n\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  var methods$3 = {\n    text: function text(str) {\n      if (str !== undefined) {\n        this.data.text = str;\n      }\n\n      return this.data.text;\n    },\n    json: function json() {\n      var obj = {\n        text: this.text(),\n        type: this.type()\n      };\n\n      if (obj.type === 'internal') {\n        obj.page = this.page();\n      } else if (obj.type === 'interwiki') {\n        obj.wiki = this.wiki();\n      } else {\n        obj.site = this.site();\n      }\n\n      var anchor = this.anchor();\n\n      if (anchor) {\n        obj.anchor = anchor;\n      }\n\n      return obj;\n    },\n    page: function page(str) {\n      if (str !== undefined) {\n        this.data.page = str;\n      }\n\n      return this.data.page;\n    },\n    anchor: function anchor(str) {\n      if (str !== undefined) {\n        this.data.anchor = str;\n      }\n\n      return this.data.anchor || '';\n    },\n    wiki: function wiki(str) {\n      if (str !== undefined) {\n        this.data.wiki = str;\n      }\n\n      return this.data.wiki;\n    },\n    type: function type(str) {\n      if (str !== undefined) {\n        this.data.type = str;\n      }\n\n      return this.data.type;\n    },\n    site: function site(str) {\n      if (str !== undefined) {\n        this.data.site = str;\n      }\n\n      return this.data.site;\n    },\n    // create a url for any type of link\n    href: function href() {\n      var type = this.type();\n\n      if (type === 'external') {\n        return this.site();\n      }\n\n      var page = this.page();\n      page = page.replace(/ /g, '_');\n      page = encodeURIComponent(page);\n      var url = '';\n\n      if (type === 'interwiki') {\n        var wiki = this.wiki();\n        url = 'https://en.wikipedia.org/wiki/$1';\n\n        if (interwiki.hasOwnProperty(wiki)) {\n          url = 'http://' + interwiki[this.wiki()];\n        }\n\n        url = url.replace(/\\$1/g, page);\n      } else {\n        //internal link\n        url = \"./\".concat(this.page());\n      } // add anchor on the end\n\n\n      if (this.anchor()) {\n        url += '#' + this.anchor();\n      }\n\n      return url;\n    }\n  };\n  Object.keys(methods$3).forEach(function (k) {\n    Link.prototype[k] = methods$3[k];\n  });\n  var Link_1 = Link;\n\n  // const cat_reg = new RegExp('\\\\[\\\\[:?(' + i18n.categories.join('|') + '):[^\\\\]\\\\]]{2,80}\\\\]\\\\]', 'gi')\n  //return only rendered text of wiki links\n\n  var removeLinks = function removeLinks(line) {\n    // [[File:with|Size]]\n    line = line.replace(/\\[\\[File:(.{2,80}?)\\|([^\\]]+?)\\]\\](\\w{0,5})/g, '$1');\n    return line;\n  };\n\n  var getLinks = function getLinks(data) {\n    var wiki = data.text;\n    var links = parse(wiki) || [];\n    data.links = links.map(function (link) {\n      wiki = wiki.replace(link.raw, link.text || link.page || '');\n      delete link.raw;\n      return new Link_1(link);\n    });\n    wiki = removeLinks(wiki);\n    data.text = wiki;\n  };\n\n  var link = getLinks;\n\n  //handle the bold/italics\n  var formatting = function formatting(obj) {\n    var bolds = [];\n    var italics = [];\n    var wiki = obj.text || ''; //bold and italics combined 5 's\n\n    wiki = wiki.replace(/'''''(.{0,200}?)'''''/g, function (a, b) {\n      bolds.push(b);\n      italics.push(b);\n      return b;\n    }); //''''four'''' → bold with quotes\n\n    wiki = wiki.replace(/''''(.{0,200}?)''''/g, function (a, b) {\n      bolds.push(\"'\".concat(b, \"'\"));\n      return \"'\".concat(b, \"'\");\n    }); //'''bold'''\n\n    wiki = wiki.replace(/'''(.{0,200}?)'''/g, function (a, b) {\n      bolds.push(b);\n      return b;\n    }); //''italic''\n\n    wiki = wiki.replace(/''(.{0,200}?)''/g, function (a, b) {\n      italics.push(b);\n      return b;\n    }); //pack it all up..\n\n    obj.text = wiki;\n\n    if (bolds.length > 0) {\n      obj.fmt = obj.fmt || {};\n      obj.fmt.bold = bolds;\n    }\n\n    if (italics.length > 0) {\n      obj.fmt = obj.fmt || {};\n      obj.fmt.italic = italics;\n    }\n\n    return obj;\n  };\n\n  var formatting_1 = formatting;\n\n  var isNumber = /^[0-9,.]+$/;\n  var defaults$7 = {\n    text: true,\n    links: true,\n    formatting: true,\n    dates: true,\n    numbers: true\n  };\n\n  var toJSON$2 = function toJSON(s, options) {\n    options = setDefaults_1(options, defaults$7);\n    var data = {};\n    var text = s.text();\n\n    if (options.text === true) {\n      data.text = text;\n    } //add number field\n\n\n    if (options.numbers === true && isNumber.test(text)) {\n      var num = Number(text.replace(/,/g, ''));\n\n      if (isNaN(num) === false) {\n        data.number = num;\n      }\n    }\n\n    if (options.links && s.links().length > 0) {\n      data.links = s.links().map(function (l) {\n        return l.json();\n      });\n    }\n\n    if (options.formatting && s.data.fmt) {\n      data.formatting = s.data.fmt;\n    }\n\n    if (options.dates && s.data.dates !== undefined) {\n      data.dates = s.data.dates;\n    }\n\n    return data;\n  };\n\n  var toJson$3 = toJSON$2;\n\n  var Sentence = function Sentence(data) {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  var methods$4 = {\n    links: function links(n) {\n      var arr = this.data.links || [];\n\n      if (typeof n === 'number') {\n        return arr[n];\n      } else if (typeof n === 'string') {\n        //grab a link like .links('Fortnight')\n        n = n.charAt(0).toUpperCase() + n.substring(1); //titlecase it\n\n        var link = arr.find(function (o) {\n          return o.page === n;\n        });\n        return link === undefined ? [] : [link];\n      }\n\n      return arr;\n    },\n    interwiki: function interwiki(n) {\n      var arr = this.links().filter(function (l) {\n        return l.wiki !== undefined;\n      });\n\n      if (typeof n === 'number') {\n        return arr[n];\n      }\n\n      return arr;\n    },\n    bolds: function bolds(n) {\n      var arr = [];\n\n      if (this.data && this.data.fmt && this.data.fmt.bold) {\n        arr = this.data.fmt.bold || [];\n      }\n\n      if (typeof n === 'number') {\n        return arr[n];\n      }\n\n      return arr;\n    },\n    italics: function italics(n) {\n      var arr = [];\n\n      if (this.data && this.data.fmt && this.data.fmt.italic) {\n        arr = this.data.fmt.italic || [];\n      }\n\n      if (typeof n === 'number') {\n        return arr[n];\n      }\n\n      return arr;\n    },\n    dates: function dates(n) {\n      var arr = [];\n\n      if (this.data && this.data.dates) {\n        arr = this.data.dates || [];\n      }\n\n      if (typeof n === 'number') {\n        return arr[n];\n      }\n\n      return arr;\n    },\n    text: function text(str) {\n      if (str !== undefined && typeof str === 'string') {\n        //set the text?\n        this.data.text = str;\n      }\n\n      return this.data.text || '';\n    },\n    json: function json(options) {\n      return toJson$3(this, options);\n    }\n  };\n  Object.keys(methods$4).forEach(function (k) {\n    Sentence.prototype[k] = methods$4[k];\n  });\n  Sentence.prototype.italic = Sentence.prototype.italics;\n  Sentence.prototype.bold = Sentence.prototype.bolds;\n  Sentence.prototype.plaintext = Sentence.prototype.text;\n  var Sentence_1 = Sentence;\n\n  //these are used for the sentence-splitter\n  var _abbreviations = ['ad', 'adj', 'adm', 'adv', 'al', 'alta', 'approx', 'apr', 'apt', 'arc', 'ariz', 'assn', 'asst', 'atty', 'aug', 'ave', 'ba', 'bc', 'bl', 'bldg', 'blvd', 'brig', 'bros', 'ca', 'cal', 'calif', 'capt', 'cca', 'cg', 'cl', 'cm', 'cmdr', 'co', 'col', 'colo', 'comdr', 'conn', 'corp', 'cpl', 'cres', 'ct', 'cyn', 'dak', 'dec', 'def', 'dept', 'det', 'dg', 'dist', 'dl', 'dm', 'dr', 'ea', 'eg', 'eng', 'esp', 'esq', 'est', 'etc', 'ex', 'exp', 'feb', 'fem', 'fig', 'fl oz', 'fl', 'fla', 'fm', 'fr', 'ft', 'fy', 'ga', 'gal', 'gb', 'gen', 'gov', 'hg', 'hon', 'hr', 'hrs', 'hwy', 'hz', 'ia', 'ida', 'ie', 'inc', 'inf', 'jan', 'jd', 'jr', 'jul', 'jun', 'kan', 'kans', 'kb', 'kg', 'km', 'kmph', 'lat', 'lb', 'lit', 'llb', 'lm', 'lng', 'lt', 'ltd', 'lx', 'ma', 'maj', 'mar', 'masc', 'mb', 'md', 'messrs', 'mg', 'mi', 'min', 'minn', 'misc', 'mister', 'ml', 'mlle', 'mm', 'mme', 'mph', 'mps', 'mr', 'mrs', 'ms', 'mstr', 'mt', 'neb', 'nebr', 'nee', 'no', 'nov', 'oct', 'okla', 'ont', 'op', 'ord', 'oz', 'pa', 'pd', 'penn', 'penna', 'phd', 'pl', 'pp', 'pref', 'prob', 'prof', 'pron', 'ps', 'psa', 'pseud', 'pt', 'pvt', 'qt', 'que', 'rb', 'rd', 'rep', 'reps', 'res', 'rev', 'sask', 'sec', 'sen', 'sens', 'sep', 'sept', 'sfc', 'sgt', 'sir', 'situ', 'sq ft', 'sq', 'sr', 'ss', 'st', 'supt', 'surg', 'tb', 'tbl', 'tbsp', 'tce', 'td', 'tel', 'temp', 'tenn', 'tex', 'tsp', 'univ', 'usafa', 'ut', 'va', 'vb', 'ver', 'vet', 'vitro', 'vivo', 'vol', 'vs', 'vt', 'wis', 'wisc', 'wr', 'wy', 'wyo', 'yb', 'µg'];\n\n  //@spencermountain MIT\n  //(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n  // Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n  // @spencermountain 2015 MIT\n\n  var abbreviations = _abbreviations.concat('[^]][^]]');\n  var abbrev_reg = new RegExp(\"(^| |')(\" + abbreviations.join('|') + \")[.!?] ?$\", 'i');\n  var acronym_reg = new RegExp(\"[ |.|'|[][A-Z].? *?$\", 'i');\n  var elipses_reg = new RegExp('\\\\.\\\\.\\\\.* +?$');\n  var hasWord = new RegExp('[a-zа-яぁ-ゟ][a-zа-яぁ-ゟ゠-ヿ]', 'iu'); // 3040-309F : hiragana\n  // 30A0-30FF : katakana\n  //turn a nested array into one array\n\n  var flatten = function flatten(arr) {\n    var all = [];\n    arr.forEach(function (a) {\n      all = all.concat(a);\n    });\n    return all;\n  };\n\n  var naiive_split = function naiive_split(text) {\n    //first, split by newline\n    var splits = text.split(/(\\n+)/);\n    splits = splits.filter(function (s) {\n      return s.match(/\\S/);\n    }); //split by period, question-mark, and exclamation-mark\n\n    splits = splits.map(function (str) {\n      return str.split(/(\\S.+?[.!?]\"?)(?=\\s+|$)/g); //\\u3002\n    });\n    return flatten(splits);\n  }; // if this looks like a period within a wikipedia link, return false\n\n\n  var isBalanced = function isBalanced(str) {\n    str = str || '';\n    var open = str.split(/\\[\\[/) || [];\n    var closed = str.split(/\\]\\]/) || [];\n\n    if (open.length > closed.length) {\n      return false;\n    } //make sure quotes are closed too\n\n\n    var quotes = str.match(/\"/g);\n\n    if (quotes && quotes.length % 2 !== 0 && str.length < 900) {\n      return false;\n    }\n\n    return true;\n  };\n\n  var sentence_parser = function sentence_parser(text) {\n    var sentences = []; //first do a greedy-split..\n\n    var chunks = []; //ensure it 'smells like' a sentence\n\n    if (!text || typeof text !== 'string' || text.trim().length === 0) {\n      return sentences;\n    } // This was the splitter regex updated to fix quoted punctuation marks.\n    // let splits = text.split(/(\\S.+?[.\\?!])(?=\\s+|$|\")/g);\n    // todo: look for side effects in this regex replacement:\n\n\n    var splits = naiive_split(text); //filter-out the grap ones\n\n    for (var i = 0; i < splits.length; i++) {\n      var s = splits[i];\n\n      if (!s || s === '') {\n        continue;\n      } //this is meaningful whitespace\n\n\n      if (!s.match(/\\S/)) {\n        //add it to the last one\n        if (chunks[chunks.length - 1]) {\n          chunks[chunks.length - 1] += s;\n          continue;\n        } else if (splits[i + 1]) {\n          //add it to the next one\n          splits[i + 1] = s + splits[i + 1];\n          continue;\n        }\n      }\n\n      chunks.push(s);\n    } //detection of non-sentence chunks\n\n\n    var isSentence = function isSentence(hmm) {\n      if (hmm.match(abbrev_reg) || hmm.match(acronym_reg) || hmm.match(elipses_reg)) {\n        return false;\n      } //too short? - no consecutive letters\n\n\n      if (hasWord.test(hmm) === false) {\n        return false;\n      }\n\n      if (!isBalanced(hmm)) {\n        return false;\n      }\n\n      return true;\n    }; //loop through these chunks, and join the non-sentence chunks back together..\n\n\n    for (var _i = 0; _i < chunks.length; _i++) {\n      //should this chunk be combined with the next one?\n      if (chunks[_i + 1] && !isSentence(chunks[_i])) {\n        chunks[_i + 1] = chunks[_i] + (chunks[_i + 1] || ''); //.replace(/ +/g, ' ');\n      } else if (chunks[_i] && chunks[_i].length > 0) {\n        //this chunk is a proper sentence..\n        sentences.push(chunks[_i]);\n        chunks[_i] = '';\n      }\n    } //if we never got a sentence, return the given text\n\n\n    if (sentences.length === 0) {\n      return [text];\n    }\n\n    return sentences;\n  };\n\n  var parse$2 = sentence_parser;\n\n  function postprocess(line) {\n    //remove empty parentheses (sometimes caused by removing templates)\n    line = line.replace(/\\([,;: ]*\\)/g, ''); //these semi-colons in parentheses are particularly troublesome\n\n    line = line.replace(/\\( *(; ?)+/g, '('); //dangling punctuation\n\n    line = helpers.trim_whitespace(line);\n    line = line.replace(/ +\\.$/, '.');\n    return line;\n  } // returns one sentence object\n\n\n  function fromText(str) {\n    var obj = {\n      text: str\n    }; //pull-out the [[links]]\n\n    link(obj);\n    obj.text = postprocess(obj.text); //pull-out the bolds and ''italics''\n\n    obj = formatting_1(obj); //pull-out things like {{start date|...}}\n\n    return new Sentence_1(obj);\n  } //used for consistency with other class-definitions\n\n\n  var byParagraph = function byParagraph(paragraph) {\n    // array of texts\n    var sentences = parse$2(paragraph.wiki); // sentence objects\n\n    sentences = sentences.map(fromText); //remove :indented first line, as it is often a disambiguation\n\n    if (sentences[0] && sentences[0].text() && sentences[0].text()[0] === ':') {\n      sentences = sentences.slice(1);\n    }\n\n    paragraph.sentences = sentences;\n  };\n\n  var _04Sentence = {\n    fromText: fromText,\n    byParagraph: byParagraph\n  };\n\n  //remove the top/bottom off the template\n  var strip = function strip(tmpl) {\n    tmpl = tmpl.replace(/^\\{\\{/, '');\n    tmpl = tmpl.replace(/\\}\\}$/, '');\n    return tmpl;\n  };\n\n  var _strip = strip;\n\n  //normalize template names\n  var fmtName = function fmtName(name) {\n    name = (name || '').trim();\n    name = name.toLowerCase();\n    name = name.replace(/_/g, ' ');\n    return name;\n  };\n\n  var _fmtName = fmtName;\n\n  //turn {{name|one|two|three}} into [name, one, two, three]\n  var pipeSplitter = function pipeSplitter(tmpl) {\n    //start with a naiive '|' split\n    var arr = tmpl.split(/\\n?\\|/); //we've split by '|', which is pretty lame\n    //look for broken-up links and fix them :/\n\n    arr.forEach(function (a, i) {\n      if (a === null) {\n        return;\n      } //has '[[' but no ']]'\n      //has equal number of openning and closing tags. handle nested case '[[[[' ']]'\n\n\n      if (/\\[\\[[^\\]]+$/.test(a) || /\\{\\{[^\\}]+$/.test(a) || a.split('{{').length !== a.split('}}').length || a.split('[[').length !== a.split(']]').length) {\n        arr[i + 1] = arr[i] + '|' + arr[i + 1];\n        arr[i] = null;\n      }\n    }); //cleanup any mistakes we've made\n\n    arr = arr.filter(function (a) {\n      return a !== null;\n    });\n    arr = arr.map(function (a) {\n      return (a || '').trim();\n    }); //remove empty fields, only at the end:\n\n    for (var i = arr.length - 1; i >= 0; i -= 1) {\n      if (arr[i] === '') {\n        arr.pop();\n      }\n\n      break;\n    }\n\n    return arr;\n  };\n\n  var _01PipeSplitter = pipeSplitter;\n\n  // every value in {{tmpl|a|b|c}} needs a name\n  // here we come up with names for them\n  var hasKey = /^[ '-\\)\\x2D\\.0-9_a-z\\xC0-\\xFF\\u0153\\u017F\\u1E9E\\u212A\\u212B]+=/i; //templates with these properties are asking for trouble\n\n  var reserved = {\n    template: true,\n    list: true,\n    prototype: true\n  }; //turn 'key=val' into {key:key, val:val}\n\n  var parseKey = function parseKey(str) {\n    var parts = str.split('=');\n    var key = parts[0] || '';\n    key = key.toLowerCase().trim();\n    var val = parts.slice(1).join('='); //don't let it be called 'template'..\n\n    if (reserved.hasOwnProperty(key)) {\n      key = '_' + key;\n    }\n\n    return {\n      key: key,\n      val: val.trim()\n    };\n  }; //turn [a, b=v, c] into {'1':a, b:v, '2':c}\n\n\n  var keyMaker = function keyMaker(arr, order) {\n    var o = 0;\n    return arr.reduce(function (h, str) {\n      str = (str || '').trim(); //support named keys - 'foo=bar'\n\n      if (hasKey.test(str) === true) {\n        var res = parseKey(str);\n\n        if (res.key) {\n          h[res.key] = res.val;\n          return h;\n        }\n      } //try a key from given 'order' names\n\n\n      if (order && order[o]) {\n        var key = order[o]; //here goes!\n\n        h[key] = str;\n      } else {\n        h.list = h.list || [];\n        h.list.push(str);\n      }\n\n      o += 1;\n      return h;\n    }, {});\n  };\n\n  var _02KeyMaker = keyMaker;\n\n  var whoCares = {\n    classname: true,\n    style: true,\n    align: true,\n    margin: true,\n    left: true,\n    \"break\": true,\n    boxsize: true,\n    framestyle: true,\n    item_style: true,\n    collapsible: true,\n    list_style_type: true,\n    'list-style-type': true,\n    colwidth: true\n  }; //remove wiki-cruft & some styling info from templates\n\n  var cleanup = function cleanup(obj) {\n    Object.keys(obj).forEach(function (k) {\n      if (whoCares[k.toLowerCase()] === true) {\n        delete obj[k];\n      } //remove empty values, too\n\n\n      if (obj[k] === null || obj[k] === '') {\n        delete obj[k];\n      }\n    });\n    return obj;\n  };\n\n  var _03Cleanup = cleanup;\n\n  var parseSentence = _04Sentence.fromText; // most templates just want plaintext...\n\n  var makeFormat = function makeFormat(str, fmt) {\n    var s = parseSentence(str); //support various output formats\n\n    if (fmt === 'json') {\n      return s.json();\n    } else if (fmt === 'raw') {\n      return s;\n    } //default to flat text\n\n\n    return s.text();\n  }; //\n\n\n  var parser = function parser(tmpl, order, fmt) {\n    order = order || []; //renomove {{}}'s\n\n    tmpl = _strip(tmpl || '');\n    var arr = _01PipeSplitter(tmpl); //get template name\n\n    var name = arr.shift(); //name each value\n\n    var obj = _02KeyMaker(arr, order); //remove wiki-junk\n\n    obj = _03Cleanup(obj); //is this a infobox/reference?\n    // let known = isKnown(obj);\n    //using '|1=content' is an escaping-thing..\n\n    if (obj['1'] && order[0] && obj.hasOwnProperty(order[0]) === false) {\n      //move it over..\n      obj[order[0]] = obj['1'];\n      delete obj['1'];\n    }\n\n    Object.keys(obj).forEach(function (k) {\n      if (k === 'list') {\n        obj[k] = obj[k].map(function (v) {\n          return makeFormat(v, fmt);\n        });\n        return;\n      }\n\n      obj[k] = makeFormat(obj[k], fmt);\n    }); //add the template name\n\n    if (name) {\n      obj.template = _fmtName(name);\n    }\n\n    return obj;\n  };\n\n  var parse$3 = parser;\n\n  //also called 'citations'\n  var Reference = function Reference(data) {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  var methods$5 = {\n    title: function title() {\n      var data = this.data;\n      return data.title || data.encyclopedia || data.author || '';\n    },\n    links: function links(n) {\n      var arr = [];\n\n      if (typeof n === 'number') {\n        return arr[n];\n      } //grab a specific link..\n\n\n      if (typeof n === 'number') {\n        return arr[n];\n      } else if (typeof n === 'string') {\n        //grab a link like .links('Fortnight')\n        n = n.charAt(0).toUpperCase() + n.substring(1); //titlecase it\n\n        var link = arr.find(function (o) {\n          return o.page() === n;\n        });\n        return link === undefined ? [] : [link];\n      }\n\n      return arr || [];\n    },\n    text: function text() {\n      return ''; //nah, skip these.\n    },\n    json: function json() {\n      return this.data;\n    }\n  };\n  Object.keys(methods$5).forEach(function (k) {\n    Reference.prototype[k] = methods$5[k];\n  });\n  var Reference_1 = Reference;\n\n  var parseSentence$1 = _04Sentence.fromText; //structured Cite templates - <ref>{{Cite..</ref>\n\n  var hasCitation = function hasCitation(str) {\n    return /^ *?\\{\\{ *?(cite|citation)/i.test(str) && /\\}\\} *?$/.test(str) && /citation needed/i.test(str) === false;\n  };\n\n  var parseCitation = function parseCitation(tmpl) {\n    var obj = parse$3(tmpl);\n    obj.type = obj.template.replace(/cite /, '');\n    obj.template = 'citation';\n    return obj;\n  }; //handle unstructured ones - <ref>some text</ref>\n\n\n  var parseInline = function parseInline(str) {\n    var obj = parseSentence$1(str) || {};\n    return {\n      template: 'citation',\n      type: 'inline',\n      data: {},\n      inline: obj\n    };\n  }; // parse <ref></ref> xml tags\n\n\n  var parseRefs = function parseRefs(section) {\n    var references = [];\n    var wiki = section.wiki;\n    wiki = wiki.replace(/ ?<ref>([\\s\\S]{0,1800}?)<\\/ref> ?/gi, function (a, tmpl) {\n      if (hasCitation(tmpl)) {\n        var obj = parseCitation(tmpl);\n\n        if (obj) {\n          references.push(obj);\n        }\n\n        wiki = wiki.replace(tmpl, '');\n      } else {\n        references.push(parseInline(tmpl));\n      }\n\n      return ' ';\n    }); // <ref name=\"\"/>\n\n    wiki = wiki.replace(/ ?<ref [^>]{0,200}?\\/> ?/gi, ' '); // <ref name=\"\"></ref>\n\n    wiki = wiki.replace(/ ?<ref [^>]{0,200}?>([\\s\\S]{0,1800}?)<\\/ref> ?/gi, function (a, tmpl) {\n      if (hasCitation(tmpl)) {\n        var obj = parseCitation(tmpl);\n\n        if (obj) {\n          references.push(obj);\n        }\n\n        wiki = wiki.replace(tmpl, '');\n      } else {\n        references.push(parseInline(tmpl));\n      }\n\n      return ' ';\n    }); //now that we're done with xml, do a generic + dangerous xml-tag removal\n\n    wiki = wiki.replace(/ ?<[ \\/]?[a-z0-9]{1,8}[a-z0-9=\" ]{2,20}[ \\/]?> ?/g, ' '); //<samp name=\"asd\">\n\n    section.references = references.map(function (r) {\n      return new Reference_1(r);\n    });\n    section.wiki = wiki;\n  };\n\n  var reference = parseRefs;\n\n  var parseSentence$2 = _04Sentence.fromText;\n  var heading_reg = /^(={1,5})(.{1,200}?)={1,5}$/; //interpret depth, title of headings like '==See also=='\n\n  var parseHeading = function parseHeading(section, str) {\n    var m = str.match(heading_reg);\n\n    if (!m) {\n      section.title = '';\n      section.depth = 0;\n      return section;\n    }\n\n    var title = m[2] || '';\n    title = parseSentence$2(title).text(); //amazingly, you can see inline {{templates}} in this text, too\n    //... let's not think about that now.\n\n    title = title.replace(/\\{\\{.+?\\}\\}/, ''); //same for references (i know..)\n\n    var obj = {\n      wiki: title\n    };\n    reference(obj);\n    title = obj.wiki; //trim leading/trailing whitespace\n\n    title = helpers.trim_whitespace(title);\n    var depth = 0;\n\n    if (m[1]) {\n      depth = m[1].length - 2;\n    }\n\n    section.title = title;\n    section.depth = depth;\n    return section;\n  };\n\n  var heading = parseHeading;\n\n  //remove top-bottoms\n  var cleanup$1 = function cleanup(lines) {\n    lines = lines.filter(function (line) {\n      //a '|+' row is a 'table caption', remove it.\n      return line && /^\\|\\+/.test(line) !== true;\n    });\n\n    if (/^{\\|/.test(lines[0]) === true) {\n      lines.shift();\n    }\n\n    if (/^\\|}/.test(lines[lines.length - 1]) === true) {\n      lines.pop();\n    }\n\n    if (/^\\|-/.test(lines[0]) === true) {\n      lines.shift();\n    }\n\n    return lines;\n  }; //turn newline seperated into '|-' seperated\n\n\n  var findRows = function findRows(lines) {\n    var rows = [];\n    var row = [];\n    lines = cleanup$1(lines);\n\n    for (var i = 0; i < lines.length; i += 1) {\n      var line = lines[i]; //'|-' is a row-seperator\n\n      if (/^\\|-/.test(line) === true) {\n        //okay, we're done the row\n        if (row.length > 0) {\n          rows.push(row);\n          row = [];\n        }\n      } else {\n        //look for '||' inline row-splitter\n        line = line.split(/(?:\\|\\||!!)/); //support newline -> '||'\n\n        if (!line[0] && line[1]) {\n          line.shift();\n        }\n\n        line.forEach(function (l) {\n          l = l.replace(/^\\| */, '');\n          l = l.trim();\n          row.push(l);\n        });\n      }\n    } //finish the last one\n\n\n    if (row.length > 0) {\n      rows.push(row);\n    }\n\n    return rows;\n  };\n\n  var _findRows = findRows;\n\n  var getRowSpan = /.*rowspan *?= *?[\"']?([0-9]+)[\"']?[ \\|]*/;\n  var getColSpan = /.*colspan *?= *?[\"']?([0-9]+)[\"']?[ \\|]*/; //colspans stretch ←left/right→\n\n  var doColSpan = function doColSpan(rows) {\n    rows.forEach(function (row) {\n      row.forEach(function (str, c) {\n        var m = str.match(getColSpan);\n\n        if (m !== null) {\n          var num = parseInt(m[1], 10); //...maybe if num is so big, and centered, remove it?\n          // if (num > 3) {\n          //   rows[r] = []\n          //   return\n          // }\n          //splice-in n empty columns right here\n\n          row[c] = str.replace(getColSpan, '');\n\n          for (var i = 1; i < num; i += 1) {\n            row.splice(c + 1, 0, '');\n          }\n        }\n      });\n    });\n    rows = rows.filter(function (r) {\n      return r.length > 0;\n    });\n    return rows;\n  }; //colspans stretch up/down\n\n\n  var doRowSpan = function doRowSpan(rows) {\n    rows.forEach(function (row, r) {\n      row.forEach(function (str, c) {\n        var m = str.match(getRowSpan);\n\n        if (m !== null) {\n          var num = parseInt(m[1], 10); //copy this cell down n rows\n\n          str = str.replace(getRowSpan, '');\n          row[c] = str;\n\n          for (var i = r + 1; i < r + num; i += 1) {\n            if (!rows[i]) {\n              break;\n            }\n\n            rows[i].splice(c, 0, str);\n          }\n        }\n      });\n    });\n    return rows;\n  }; //\n\n\n  var handleSpans = function handleSpans(rows) {\n    rows = doColSpan(rows);\n    rows = doRowSpan(rows);\n    return rows;\n  };\n\n  var _spans = handleSpans;\n\n  var parseSentence$3 = _04Sentence.fromText;\n  var isHeading = /^!/; //common ones\n\n  var headings = {\n    name: true,\n    age: true,\n    born: true,\n    date: true,\n    year: true,\n    city: true,\n    country: true,\n    population: true,\n    count: true,\n    number: true\n  }; //additional table-cruft to remove before parseLine method\n\n  var cleanText = function cleanText(str) {\n    str = parseSentence$3(str).text(); //anything before a single-pipe is styling, so remove it\n\n    if (str.match(/\\|/)) {\n      str = str.replace(/.+\\| ?/, ''); //class=\"unsortable\"|title\n    }\n\n    str = str.replace(/style=['\"].*?[\"']/, ''); //'!' is used as a highlighed-column\n\n    str = str.replace(/^!/, '');\n    str = str.trim();\n    return str;\n  };\n\n  var skipSpanRow = function skipSpanRow(row) {\n    var len = row.length;\n    var hasTxt = row.filter(function (str) {\n      return str;\n    }).length; //does it have 3 empty spaces?\n\n    if (len - hasTxt > 3) {\n      return true;\n    }\n\n    return false;\n  }; //remove non-header span rows\n\n\n  var removeMidSpans = function removeMidSpans(rows) {\n    rows = rows.filter(function (row) {\n      if (row.length === 1 && row[0] && isHeading.test(row[0]) && /rowspan/i.test(row[0]) === false) {\n        return false;\n      }\n\n      return true;\n    });\n    return rows;\n  }; //'!' starts a header-row\n\n\n  var findHeaders = function findHeaders() {\n    var rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var headers = []; // is the first-row just a ton of colspan?\n\n    if (skipSpanRow(rows[0])) {\n      rows.shift();\n    }\n\n    var first = rows[0];\n\n    if (first && first[0] && first[1] && (/^!/.test(first[0]) || /^!/.test(first[1]))) {\n      headers = first.map(function (h) {\n        h = h.replace(/^\\! */, '');\n        h = cleanText(h);\n        return h;\n      });\n      rows.shift();\n    } //try the second row, too (overwrite first-row, if it exists)\n\n\n    first = rows[0];\n\n    if (first && first[0] && first[1] && /^!/.test(first[0]) && /^!/.test(first[1])) {\n      first.forEach(function (h, i) {\n        h = h.replace(/^\\! */, '');\n        h = cleanText(h);\n\n        if (Boolean(h) === true) {\n          headers[i] = h;\n        }\n      });\n      rows.shift();\n    }\n\n    return headers;\n  }; //turn headers, array into an object\n\n\n  var parseRow = function parseRow(arr, headers) {\n    var row = {};\n    arr.forEach(function (str, i) {\n      var h = headers[i] || 'col' + (i + 1);\n      var s = parseSentence$3(str);\n      s.text(cleanText(s.text()));\n      row[h] = s;\n    });\n    return row;\n  }; //should we use the first row as a the headers?\n\n\n  var firstRowHeader = function firstRowHeader(rows) {\n    if (rows.length <= 3) {\n      return [];\n    }\n\n    var headers = rows[0].slice(0);\n    headers = headers.map(function (h) {\n      h = h.replace(/^\\! */, '');\n      h = parseSentence$3(h).text();\n      h = cleanText(h);\n      h = h.toLowerCase();\n      return h;\n    });\n\n    for (var i = 0; i < headers.length; i += 1) {\n      if (headings.hasOwnProperty(headers[i])) {\n        rows.shift();\n        return headers;\n      }\n    }\n\n    return [];\n  }; //turn a {|...table string into an array of arrays\n\n\n  var parseTable = function parseTable(wiki) {\n    var lines = wiki.replace(/\\r/g, '').replace(/\\n(\\s*[^|!{\\s])/g, ' $1') //remove unecessary newlines\n    .split(/\\n/).map(function (l) {\n      return l.trim();\n    });\n    var rows = _findRows(lines); //remove non-header span rows\n\n    rows = removeMidSpans(rows); //support colspan, rowspan...\n\n    rows = _spans(rows); //grab the header rows\n\n    var headers = findHeaders(rows);\n\n    if (!headers || headers.length <= 1) {\n      headers = firstRowHeader(rows);\n      var want = rows[rows.length - 1] || []; //try the second row\n\n      if (headers.length <= 1 && want.length > 2) {\n        headers = firstRowHeader(rows.slice(1));\n\n        if (headers.length > 0) {\n          rows = rows.slice(2); //remove them\n        }\n      }\n    } //index each column by it's header\n\n\n    var table = rows.map(function (arr) {\n      return parseRow(arr, headers);\n    });\n    return table;\n  };\n\n  var parse$4 = parseTable;\n\n  var toJson$4 = function toJson(tables, options) {\n    return tables.map(function (table) {\n      var row = {};\n      Object.keys(table).forEach(function (k) {\n        row[k] = table[k].json(); //(they're sentence objects)\n      }); //encode them, for mongodb\n\n      if (options.encode === true) {\n        row = encode.encodeObj(row);\n      }\n\n      return row;\n    });\n  };\n\n  var toJson_1$1 = toJson$4;\n\n  var defaults$8 = {};\n\n  var Table = function Table(data) {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  var methods$6 = {\n    links: function links(n) {\n      var links = [];\n      this.data.forEach(function (r) {\n        Object.keys(r).forEach(function (k) {\n          links = links.concat(r[k].links());\n        });\n      }); //grab a specific link..\n\n      if (typeof n === 'number') {\n        return links[n];\n      } else if (typeof n === 'string') {\n        //grab a link like .links('Fortnight')\n        n = n.charAt(0).toUpperCase() + n.substring(1); //titlecase it\n\n        var link = links.find(function (o) {\n          return o.page() === n;\n        });\n        return link === undefined ? [] : [link];\n      }\n\n      return links;\n    },\n    keyValue: function keyValue(options) {\n      var rows = this.json(options);\n      rows.forEach(function (row) {\n        Object.keys(row).forEach(function (k) {\n          row[k] = row[k].text;\n        });\n      });\n      return rows;\n    },\n    json: function json(options) {\n      options = setDefaults_1(options, defaults$8);\n      return toJson_1$1(this.data, options);\n    },\n    text: function text() {\n      return '';\n    }\n  };\n  methods$6.keyvalue = methods$6.keyValue;\n  methods$6.keyval = methods$6.keyValue;\n  Object.keys(methods$6).forEach(function (k) {\n    Table.prototype[k] = methods$6[k];\n  });\n  var Table_1 = Table;\n\n  var openReg = /^\\s*{\\|/;\n  var closeReg = /^\\s*\\|}/; //tables can be recursive, so looky-here.\n\n  var findTables = function findTables(section) {\n    var list = [];\n    var wiki = section.wiki;\n    var lines = wiki.split('\\n');\n    var stack = [];\n\n    for (var i = 0; i < lines.length; i += 1) {\n      //start a table\n      if (openReg.test(lines[i]) === true) {\n        stack.push(lines[i]);\n        continue;\n      } //close a table\n\n\n      if (closeReg.test(lines[i]) === true) {\n        stack[stack.length - 1] += '\\n' + lines[i];\n\n        var _table = stack.pop();\n\n        list.push(_table);\n        continue;\n      } //keep-going on one\n\n\n      if (stack.length > 0) {\n        stack[stack.length - 1] += '\\n' + lines[i];\n      }\n    } //work-em together for a Table class\n\n\n    var tables = [];\n    list.forEach(function (str) {\n      if (str) {\n        //also reremove a newline at the end of the table (awkward)\n        wiki = wiki.replace(str + '\\n', '');\n        wiki = wiki.replace(str, '');\n        var data = parse$4(str);\n\n        if (data && data.length > 0) {\n          tables.push(new Table_1(data));\n        }\n      }\n    });\n\n    if (tables.length > 0) {\n      section.tables = tables;\n    }\n\n    section.wiki = wiki;\n  };\n\n  var table = findTables;\n\n  var defaults$9 = {\n    sentences: true\n  };\n\n  var toJson$5 = function toJson(p, options) {\n    options = setDefaults_1(options, defaults$9);\n    var data = {};\n\n    if (options.sentences === true) {\n      data.sentences = p.sentences().map(function (s) {\n        return s.json(options);\n      });\n    }\n\n    return data;\n  };\n\n  var toJson_1$2 = toJson$5;\n\n  var defaults$a = {\n    sentences: true,\n    lists: true,\n    images: true\n  };\n\n  var Paragraph = function Paragraph(data) {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  var methods$7 = {\n    sentences: function sentences(num) {\n      if (typeof num === 'number') {\n        return this.data.sentences[num];\n      }\n\n      return this.data.sentences || [];\n    },\n    references: function references(num) {\n      if (typeof num === 'number') {\n        return this.data.references[num];\n      }\n\n      return this.data.references;\n    },\n    lists: function lists(num) {\n      if (typeof num === 'number') {\n        return this.data.lists[num];\n      }\n\n      return this.data.lists;\n    },\n    images: function images(num) {\n      if (typeof num === 'number') {\n        return this.data.images[num];\n      }\n\n      return this.data.images || [];\n    },\n    links: function links(n) {\n      var arr = [];\n      this.sentences().forEach(function (s) {\n        arr = arr.concat(s.links(n));\n      });\n\n      if (typeof n === 'number') {\n        return arr[n];\n      } else if (typeof n === 'string') {\n        //grab a specific link like .links('Fortnight')\n        n = n.charAt(0).toUpperCase() + n.substring(1); //titlecase it\n\n        var link = arr.find(function (o) {\n          return o.page() === n;\n        });\n        return link === undefined ? [] : [link];\n      }\n\n      return arr || [];\n    },\n    interwiki: function interwiki(num) {\n      var arr = [];\n      this.sentences().forEach(function (s) {\n        arr = arr.concat(s.interwiki());\n      });\n\n      if (typeof num === 'number') {\n        return arr[num];\n      }\n\n      return arr || [];\n    },\n    text: function text(options) {\n      options = setDefaults_1(options, defaults$a);\n      var str = this.sentences().map(function (s) {\n        return s.text(options);\n      }).join(' ');\n      this.lists().forEach(function (list) {\n        str += '\\n' + list.text();\n      });\n      return str;\n    },\n    json: function json(options) {\n      options = setDefaults_1(options, defaults$a);\n      return toJson_1$2(this, options);\n    }\n  };\n  methods$7.citations = methods$7.references;\n  Object.keys(methods$7).forEach(function (k) {\n    Paragraph.prototype[k] = methods$7[k];\n  });\n  var Paragraph_1 = Paragraph;\n\n  //find all the pairs of '[[...[[..]]...]]' in the text\n  //used to properly root out recursive template calls, [[.. [[...]] ]]\n  //basically just adds open tags, and subtracts closing tags\n  var opener = '[';\n  var closer = ']';\n\n  function nested_find(text) {\n    var out = [];\n    var last = [];\n    var chars = text.split('');\n    var open = 0;\n\n    for (var i = 0; i < chars.length; i++) {\n      var c = text[i]; //increment open tag\n\n      if (c === opener) {\n        open += 1;\n      } //decrement close tag\n      else if (c === closer) {\n          open -= 1;\n\n          if (open < 0) {\n            open = 0;\n          }\n        } else if (last.length === 0) {\n          // If we're not inside of a pair of delimiters, we can discard the current letter.\n          // The return of this function is only used to extract images.\n          continue;\n        }\n\n      last.push(c);\n\n      if (open === 0 && last.length > 0) {\n        //first, fix botched parse\n        var open_count = 0;\n        var close_count = 0;\n\n        for (var j = 0; j < last.length; j++) {\n          if (last[j] === opener) {\n            open_count++;\n          } else if (last[j] === closer) {\n            close_count++;\n          }\n        } //is it botched?\n\n\n        if (open_count > close_count) {\n          last.push(closer);\n        } //looks good, keep it\n\n\n        out.push(last.join(''));\n        last = [];\n      }\n    }\n\n    return out;\n  }\n\n  var nested_find_1 = nested_find;\n\n  var parseSentence$4 = _04Sentence.fromText; //regexes:\n\n  var isFile = new RegExp('(' + i18n$1.images.join('|') + '):', 'i');\n  var fileNames = \"(\".concat(i18n$1.images.join('|'), \")\");\n  var file_reg = new RegExp(fileNames + ':(.+?)[\\\\||\\\\]]', 'iu'); //style directives for Wikipedia:Extended_image_syntax\n\n  var imgLayouts = {\n    thumb: true,\n    thumbnail: true,\n    border: true,\n    right: true,\n    left: true,\n    center: true,\n    top: true,\n    bottom: true,\n    none: true,\n    upright: true,\n    baseline: true,\n    middle: true,\n    sub: true,\n    \"super\": true\n  }; //images are usually [[image:my_pic.jpg]]\n\n  var oneImage = function oneImage(img) {\n    var m = img.match(file_reg);\n\n    if (m === null || !m[2]) {\n      return null;\n    }\n\n    var file = \"\".concat(m[1], \":\").concat(m[2] || '');\n    file = file.trim(); //titlecase it\n\n    var title = file.charAt(0).toUpperCase() + file.substring(1); //spaces to underscores\n\n    title = title.replace(/ /g, '_');\n\n    if (title) {\n      var obj = {\n        file: file\n      }; //try to grab other metadata, too\n\n      img = img.replace(/^\\[\\[/, '');\n      img = img.replace(/\\]\\]$/, ''); //https://en.wikipedia.org/wiki/Wikipedia:Extended_image_syntax\n      // - [[File:Name|Type|Border|Location|Alignment|Size|link=Link|alt=Alt|lang=Langtag|Caption]]\n\n      var imgData = parse$3(img);\n      var arr = imgData.list || []; //parse-out alt text, if explicitly given\n\n      if (imgData.alt) {\n        obj.alt = imgData.alt;\n      } //remove 'thumb' and things\n\n\n      arr = arr.filter(function (str) {\n        return imgLayouts.hasOwnProperty(str) === false;\n      });\n\n      if (arr[arr.length - 1]) {\n        obj.caption = parseSentence$4(arr[arr.length - 1]);\n      }\n\n      return new Image_1(obj, img);\n    }\n\n    return null;\n  };\n\n  var parseImages = function parseImages(paragraph) {\n    var wiki = paragraph.wiki; //parse+remove scary '[[ [[]] ]]' stuff\n\n    var matches = nested_find_1(wiki);\n    matches.forEach(function (s) {\n      if (isFile.test(s) === true) {\n        paragraph.images = paragraph.images || [];\n        var img = oneImage(s);\n\n        if (img) {\n          paragraph.images.push(img);\n        }\n\n        wiki = wiki.replace(s, '');\n      }\n    });\n    paragraph.wiki = wiki;\n  };\n\n  var image = parseImages;\n\n  var defaults$b = {};\n\n  var toText = function toText(list, options) {\n    return list.map(function (s) {\n      var str = s.text(options);\n      return ' * ' + str;\n    }).join('\\n');\n  };\n\n  var List = function List(data) {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  var methods$8 = {\n    lines: function lines() {\n      return this.data;\n    },\n    links: function links(n) {\n      var links = [];\n      this.lines().forEach(function (s) {\n        links = links.concat(s.links());\n      });\n\n      if (typeof n === 'number') {\n        return links[n];\n      } else if (typeof n === 'string') {\n        //grab a link like .links('Fortnight')\n        n = n.charAt(0).toUpperCase() + n.substring(1); //titlecase it\n\n        var link = links.find(function (o) {\n          return o.page() === n;\n        });\n        return link === undefined ? [] : [link];\n      }\n\n      return links;\n    },\n    json: function json(options) {\n      options = setDefaults_1(options, defaults$b);\n      return this.lines().map(function (s) {\n        return s.json(options);\n      });\n    },\n    text: function text() {\n      return toText(this.data);\n    }\n  };\n  Object.keys(methods$8).forEach(function (k) {\n    List.prototype[k] = methods$8[k];\n  });\n  var List_1 = List;\n\n  var parseSentence$5 = _04Sentence.fromText;\n  var list_reg = /^[#\\*:;\\|]+/;\n  var bullet_reg = /^\\*+[^:,\\|]{4}/;\n  var number_reg = /^ ?\\#[^:,\\|]{4}/;\n  var has_word = /[a-z_0-9\\]\\}]/i; // does it start with a bullet point or something?\n\n  var isList = function isList(line) {\n    return list_reg.test(line) || bullet_reg.test(line) || number_reg.test(line);\n  }; //make bullets/numbers into human-readable *'s\n\n\n  var cleanList = function cleanList(list) {\n    var number = 1;\n    list = list.filter(function (l) {\n      return l;\n    });\n\n    for (var i = 0; i < list.length; i++) {\n      var line = list[i]; //add # numberings formatting\n\n      if (line.match(number_reg)) {\n        line = line.replace(/^ ?#*/, number + ') ');\n        line = line + '\\n';\n        number += 1;\n      } else if (line.match(list_reg)) {\n        number = 1;\n        line = line.replace(list_reg, '');\n      }\n\n      list[i] = parseSentence$5(line);\n    }\n\n    return list;\n  };\n\n  var grabList = function grabList(lines, i) {\n    var sub = [];\n\n    for (var o = i; o < lines.length; o++) {\n      if (isList(lines[o])) {\n        sub.push(lines[o]);\n      } else {\n        break;\n      }\n    }\n\n    sub = sub.filter(function (a) {\n      return a && has_word.test(a);\n    });\n    sub = cleanList(sub);\n    return sub;\n  };\n\n  var parseList = function parseList(paragraph) {\n    var wiki = paragraph.wiki;\n    var lines = wiki.split(/\\n/g); // lines = lines.filter(l => has_word.test(l));\n\n    var lists = [];\n    var theRest = [];\n\n    for (var i = 0; i < lines.length; i++) {\n      if (isList(lines[i]) && lines[i + 1] && isList(lines[i + 1])) {\n        var sub = grabList(lines, i);\n\n        if (sub.length > 0) {\n          lists.push(sub);\n          i += sub.length - 1;\n        }\n      } else {\n        theRest.push(lines[i]);\n      }\n    }\n\n    paragraph.lists = lists.map(function (l) {\n      return new List_1(l);\n    });\n    paragraph.wiki = theRest.join('\\n');\n  };\n\n  var list = parseList;\n\n  var parseSentences = _04Sentence.byParagraph;\n  var twoNewLines = /\\r?\\n\\r?\\n/;\n  var parse$5 = {\n    image: image,\n    list: list\n  };\n\n  var parseParagraphs = function parseParagraphs(section) {\n    var wiki = section.wiki;\n    var paragraphs = wiki.split(twoNewLines); //don't create empty paragraphs\n\n    paragraphs = paragraphs.filter(function (p) {\n      return p && p.trim().length > 0;\n    });\n    paragraphs = paragraphs.map(function (str) {\n      var paragraph = {\n        wiki: str,\n        lists: [],\n        sentences: [],\n        images: []\n      }; //parse the lists\n\n      parse$5.list(paragraph); // parse images\n\n      parse$5.image(paragraph); //parse the sentences\n\n      parseSentences(paragraph);\n      return new Paragraph_1(paragraph);\n    });\n    section.wiki = wiki;\n    section.paragraphs = paragraphs;\n  };\n\n  var _03Paragraph = parseParagraphs;\n\n  var toJson$6 = function toJson(infobox, options) {\n    var json = Object.keys(infobox.data).reduce(function (h, k) {\n      if (infobox.data[k]) {\n        h[k] = infobox.data[k].json();\n      }\n\n      return h;\n    }, {}); //support mongo-encoding keys\n\n    if (options.encode === true) {\n      json = encode.encodeObj(json);\n    }\n\n    return json;\n  };\n\n  var toJson_1$3 = toJson$6;\n\n  var normalize = function normalize(str) {\n    str = str.toLowerCase();\n    str = str.replace(/[-_]/g, ' ');\n    return str.trim();\n  }; //a formal key-value data table about a topic\n\n\n  var Infobox = function Infobox(obj) {\n    this._type = obj.type;\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: obj.data\n    });\n  };\n\n  var methods$9 = {\n    type: function type() {\n      return this._type;\n    },\n    links: function links(n) {\n      var _this = this;\n\n      var arr = [];\n      Object.keys(this.data).forEach(function (k) {\n        _this.data[k].links().forEach(function (l) {\n          return arr.push(l);\n        });\n      });\n\n      if (typeof n === 'number') {\n        return arr[n];\n      } else if (typeof n === 'string') {\n        //grab a link like .links('Fortnight')\n        n = n.charAt(0).toUpperCase() + n.substring(1); //titlecase it\n\n        var link = arr.find(function (o) {\n          return o.page() === n;\n        });\n        return link === undefined ? [] : [link];\n      }\n\n      return arr;\n    },\n    image: function image() {\n      var s = this.get('image') || this.get('image2') || this.get('logo');\n\n      if (!s) {\n        return null;\n      }\n\n      var obj = s.json();\n      obj.file = obj.text;\n      obj.text = '';\n      return new Image_1(obj);\n    },\n    get: function get() {\n      var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      key = normalize(key);\n      var keys = Object.keys(this.data);\n\n      for (var i = 0; i < keys.length; i += 1) {\n        var tmp = normalize(keys[i]);\n\n        if (key === tmp) {\n          return this.data[keys[i]];\n        }\n      }\n\n      return null;\n    },\n    text: function text() {\n      return '';\n    },\n    json: function json(options) {\n      options = options || {};\n      return toJson_1$3(this, options);\n    },\n    keyValue: function keyValue() {\n      var _this2 = this;\n\n      return Object.keys(this.data).reduce(function (h, k) {\n        if (_this2.data[k]) {\n          h[k] = _this2.data[k].text();\n        }\n\n        return h;\n      }, {});\n    }\n  }; //aliases\n\n  Object.keys(methods$9).forEach(function (k) {\n    Infobox.prototype[k] = methods$9[k];\n  });\n  Infobox.prototype.data = Infobox.prototype.keyValue;\n  Infobox.prototype.template = Infobox.prototype.type;\n  Infobox.prototype.images = Infobox.prototype.image;\n  var Infobox_1 = Infobox;\n\n  var open = '{';\n  var close = '}'; //grab all first-level recursions of '{{...}}'\n\n  var findFlat = function findFlat(wiki) {\n    var depth = 0;\n    var list = [];\n    var carry = [];\n\n    for (var i = wiki.indexOf(open); i !== -1 && i < wiki.length; depth > 0 ? i++ : i = wiki.indexOf(open, i + 1)) {\n      var c = wiki[i]; //open it\n\n      if (c === open) {\n        depth += 1;\n      } //close it\n\n\n      if (depth > 0) {\n        if (c === close) {\n          depth -= 1;\n\n          if (depth === 0) {\n            carry.push(c);\n            var tmpl = carry.join('');\n            carry = []; //last check\n\n            if (/\\{\\{/.test(tmpl) && /\\}\\}/.test(tmpl)) {\n              list.push(tmpl);\n            }\n\n            continue;\n          }\n        } //require two '{{' to open it\n\n\n        if (depth === 1 && c !== open && c !== close) {\n          depth = 0;\n          carry = [];\n          continue;\n        }\n\n        carry.push(c);\n      }\n    }\n\n    return list;\n  };\n\n  var flat = findFlat;\n\n  //templates are usually '{{name|stuff}}'\n\n  var getName = function getName(tmpl) {\n    var name = null; //{{name|foo}}\n\n    if (/^\\{\\{[^\\n]+\\|/.test(tmpl)) {\n      name = (tmpl.match(/^\\{\\{(.+?)\\|/) || [])[1];\n    } else if (tmpl.indexOf('\\n') !== -1) {\n      // {{name \\n...\n      name = (tmpl.match(/^\\{\\{(.+?)\\n/) || [])[1];\n    } else {\n      //{{name here}}\n      name = (tmpl.match(/^\\{\\{(.+?)\\}\\}$/) || [])[1];\n    }\n\n    if (name) {\n      name = name.replace(/:.*/, '');\n      name = _fmtName(name);\n    }\n\n    return name || null;\n  };\n\n  var _getName = getName;\n\n  var hasTemplate = /\\{\\{/;\n\n  var parseTemplate = function parseTemplate(tmpl) {\n    return {\n      body: tmpl,\n      name: _getName(tmpl),\n      children: []\n    };\n  };\n\n  var doEach = function doEach(obj) {\n    // peel-off top-level\n    var wiki = obj.body.substr(2);\n    wiki = wiki.replace(/\\}\\}$/, ''); // get our child templates\n\n    obj.children = flat(wiki);\n    obj.children = obj.children.map(parseTemplate);\n\n    if (obj.children.length === 0) {\n      return obj;\n    } // recurse through children\n\n\n    obj.children.forEach(function (ch) {\n      var inside = ch.body.substr(2);\n\n      if (hasTemplate.test(inside)) {\n        return doEach(ch); //keep going\n      }\n\n      return null;\n    });\n    return obj;\n  }; // return a nested structure of all templates\n\n\n  var findTemplates = function findTemplates(wiki) {\n    var list = flat(wiki);\n    list = list.map(parseTemplate);\n    list = list.map(doEach);\n    return list;\n  };\n\n  var find = findTemplates;\n\n  //we explicitly ignore these, because they sometimes have resolve some data\n  var list$1 = [//https://en.wikipedia.org/wiki/category:templates_with_no_visible_output\n  'anchor', 'defaultsort', 'use list-defined references', 'void', //https://en.wikipedia.org/wiki/Category:Protection_templates\n  'pp', 'pp-move-indef', 'pp-semi-indef', 'pp-vandalism', //https://en.wikipedia.org/wiki/Template:R\n  'r', //out-of-scope still - https://en.wikipedia.org/wiki/Template:Tag\n  '#tag', //https://en.wikipedia.org/wiki/Template:Navboxes\n  'navboxes', 'reflist', 'ref-list', 'div col', // 'authority control',\n  //https://en.wikipedia.org/wiki/Template:Citation_needed\n  // 'better source',\n  // 'citation needed',\n  // 'clarify',\n  // 'cite quote',\n  // 'dead link',\n  // 'by whom',\n  // 'dubious',\n  // 'when',\n  // 'who',\n  // 'quantify',\n  // 'refimprove',\n  // 'weasel inline',\n  //https://en.wikipedia.org/wiki/Template:End\n  'pope list end', 'shipwreck list end', 'starbox end', 'end box', 'end', 's-end'];\n  var ignore$1 = list$1.reduce(function (h, str) {\n    h[str] = true;\n    return h;\n  }, {});\n  var _ignore = ignore$1;\n\n  var i18nReg = new RegExp('^(subst.)?(' + i18n$1.infoboxes.join('|') + ')[: \\n]', 'i'); //some looser ones\n\n  var startReg = /^infobox /i;\n  var endReg = / infobox$/i;\n  var yearIn = /$Year in [A-Z]/i; //some known ones from\n  // https://en.wikipedia.org/wiki/Wikipedia:List_of_infoboxes\n  // and https://en.wikipedia.org/wiki/Category:Infobox_templates\n\n  var known = {\n    'gnf protein box': true,\n    'automatic taxobox': true,\n    'chembox ': true,\n    editnotice: true,\n    geobox: true,\n    hybridbox: true,\n    ichnobox: true,\n    infraspeciesbox: true,\n    mycomorphbox: true,\n    oobox: true,\n    'paraphyletic group': true,\n    speciesbox: true,\n    subspeciesbox: true,\n    'starbox short': true,\n    taxobox: true,\n    nhlteamseason: true,\n    'asian games bid': true,\n    'canadian federal election results': true,\n    'dc thomson comic strip': true,\n    'daytona 24 races': true,\n    edencharacter: true,\n    'moldova national football team results': true,\n    samurai: true,\n    protein: true,\n    'sheet authority': true,\n    'order-of-approx': true,\n    'bacterial labs': true,\n    'medical resources': true,\n    ordination: true,\n    'hockey team coach': true,\n    'hockey team gm': true,\n    'hockey team player': true,\n    'hockey team start': true,\n    mlbbioret: true\n  }; //\n\n  var isInfobox = function isInfobox(name) {\n    // known\n    if (known.hasOwnProperty(name) === true) {\n      return true;\n    }\n\n    if (i18nReg.test(name)) {\n      return true;\n    }\n\n    if (startReg.test(name) || endReg.test(name)) {\n      return true;\n    } //these are also infoboxes: 'Year in Belarus'\n\n\n    if (yearIn.test(name)) {\n      return true;\n    }\n\n    return false;\n  }; //turns template data into good inforbox data\n\n\n  var fmtInfobox = function fmtInfobox() {\n    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var m = obj.template.match(i18nReg);\n    var type = obj.template;\n\n    if (m && m[0]) {\n      type = type.replace(m[0], '');\n    }\n\n    type = type.trim();\n    var infobox = {\n      template: 'infobox',\n      type: type,\n      data: obj\n    };\n    delete infobox.data.template; // already have this.\n\n    delete infobox.data.list; //just in case!\n\n    return infobox;\n  };\n\n  var _infobox = {\n    isInfobox: isInfobox,\n    format: fmtInfobox\n  };\n\n  var _months = [undefined, //1-based months.. :/\n  'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  var monthName = _months.reduce(function (h, str, i) {\n    if (i === 0) {\n      return h;\n    }\n\n    h[str.toLowerCase()] = i;\n    return h;\n  }, {}); //parse year|month|date numbers\n\n  var ymd = function ymd(arr) {\n    var obj = {};\n    var units = ['year', 'month', 'date', 'hour', 'minute', 'second']; //parse each unit in sequence..\n\n    for (var i = 0; i < units.length; i += 1) {\n      //skip it\n      if (!arr[i] && arr[1] !== 0) {\n        continue;\n      }\n\n      var num = parseInt(arr[i], 10);\n\n      if (isNaN(num) === false) {\n        obj[units[i]] = num; //we good.\n      } else if (units[i] === 'month' && monthName.hasOwnProperty(arr[i])) {\n        //try for month-name, like 'january\n        var month = monthName[arr[i]];\n        obj[units[i]] = month;\n      } else {\n        //we dead. so skip this unit\n        delete obj[units[i]];\n      }\n    } //try for timezone,too ftw\n\n\n    var last = arr[arr.length - 1] || '';\n    last = String(last);\n\n    if (last.toLowerCase() === 'z') {\n      obj.tz = 'UTC';\n    } else if (/[+-][0-9]+:[0-9]/.test(last)) {\n      obj.tz = arr[6];\n    }\n\n    return obj;\n  }; //zero-pad a number\n\n\n  var pad = function pad(num) {\n    if (num < 10) {\n      return '0' + num;\n    }\n\n    return String(num);\n  };\n\n  var toText$1 = function toText(date) {\n    //eg '1995'\n    var str = String(date.year || '');\n\n    if (date.month !== undefined && _months.hasOwnProperty(date.month) === true) {\n      if (date.date === undefined) {\n        //January 1995\n        str = \"\".concat(_months[date.month], \" \").concat(date.year);\n      } else {\n        //January 5, 1995\n        str = \"\".concat(_months[date.month], \" \").concat(date.date, \", \").concat(date.year); //add times, if available\n\n        if (date.hour !== undefined && date.minute !== undefined) {\n          var time = \"\".concat(pad(date.hour), \":\").concat(pad(date.minute));\n\n          if (date.second !== undefined) {\n            time = time + ':' + pad(date.second);\n          }\n\n          str = time + ', ' + str; //add timezone, if there, at the end in brackets\n        }\n\n        if (date.tz) {\n          str += \" (\".concat(date.tz, \")\");\n        }\n      }\n    }\n\n    return str;\n  };\n\n  var _format = {\n    toText: toText$1,\n    ymd: ymd\n  }; // console.log(toText(ymd([2018, 3, 28])));\n\n  var misc = {\n    reign: function reign(tmpl) {\n      var order = ['start', 'end'];\n      var obj = parse$3(tmpl, order);\n      return \"(r. \".concat(obj.start, \" \\u2013 \").concat(obj.end, \")\");\n    },\n    circa: function circa(tmpl) {\n      var obj = parse$3(tmpl, ['year']);\n      return \"c.\\u2009\".concat(obj.year);\n    },\n    //we can't do timezones, so fake this one a little bit\n    //https://en.wikipedia.org/wiki/Template:Time\n    time: function time() {\n      var d = new Date();\n      var obj = _format.ymd([d.getFullYear(), d.getMonth(), d.getDate()]);\n      return _format.toText(obj);\n    },\n    monthname: 0,\n    //https://en.wikipedia.org/wiki/Template:OldStyleDate\n    oldstyledate: function oldstyledate(tmpl) {\n      var order = ['date', 'year'];\n      var obj = parse$3(tmpl, order);\n      var str = obj.date;\n\n      if (obj.year) {\n        str += ' ' + obj.year;\n      }\n\n      return str;\n    }\n  };\n  var misc_1 = misc;\n\n  //this is allowed to be rough\n  var day = 1000 * 60 * 60 * 24;\n  var month = day * 30;\n  var year = day * 365;\n\n  var getEpoch = function getEpoch(obj) {\n    return new Date(\"\".concat(obj.year, \"-\").concat(obj.month || 0, \"-\").concat(obj.date || 1)).getTime();\n  }; //very rough!\n\n\n  var delta = function delta(from, to) {\n    from = getEpoch(from);\n    to = getEpoch(to);\n    var diff = to - from;\n    var obj = {}; //get years\n\n    var years = Math.floor(diff / year, 10);\n\n    if (years > 0) {\n      obj.years = years;\n      diff -= obj.years * year;\n    } //get months\n\n\n    var months = Math.floor(diff / month, 10);\n\n    if (months > 0) {\n      obj.months = months;\n      diff -= obj.months * month;\n    } //get days\n\n\n    var days = Math.floor(diff / day, 10);\n\n    if (days > 0) {\n      obj.days = days; // diff -= (obj.days * day);\n    }\n\n    return obj;\n  };\n\n  var _delta = delta;\n\n  var ymd$1 = _format.ymd;\n  var toText$2 = _format.toText; //wrap it up as a template\n\n  var template = function template(date) {\n    return {\n      template: 'date',\n      data: date\n    };\n  };\n\n  var getBoth = function getBoth(tmpl) {\n    tmpl = _strip(tmpl);\n    var arr = tmpl.split('|');\n    var from = ymd$1(arr.slice(1, 4));\n    var to = arr.slice(4, 7); //assume now, if 'to' is empty\n\n    if (to.length === 0) {\n      var d = new Date();\n      to = [d.getFullYear(), d.getMonth(), d.getDate()];\n    }\n\n    to = ymd$1(to);\n    return {\n      from: from,\n      to: to\n    };\n  };\n\n  var parsers = {\n    //generic {{date|year|month|date}} template\n    date: function date(tmpl, list) {\n      var order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'timezone'];\n      var obj = parse$3(tmpl, order);\n      var data = ymd$1([obj.year, obj.month, obj.date || obj.day]);\n      obj.text = toText$2(data); //make the replacement string\n\n      if (obj.timezone) {\n        if (obj.timezone === 'Z') {\n          obj.timezone = 'UTC';\n        }\n\n        obj.text += \" (\".concat(obj.timezone, \")\");\n      }\n\n      if (obj.hour && obj.minute) {\n        if (obj.second) {\n          obj.text = \"\".concat(obj.hour, \":\").concat(obj.minute, \":\").concat(obj.second, \", \") + obj.text;\n        } else {\n          obj.text = \"\".concat(obj.hour, \":\").concat(obj.minute, \", \") + obj.text;\n        }\n      }\n\n      if (obj.text) {\n        list.push(template(obj));\n      }\n\n      return obj.text;\n    },\n    //support parsing of 'February 10, 1992'\n    natural_date: function natural_date(tmpl, list) {\n      var order = ['text'];\n      var obj = parse$3(tmpl, order);\n      var str = obj.text || ''; // - just a year\n\n      var date = {};\n\n      if (/^[0-9]{4}$/.test(str)) {\n        date.year = parseInt(str, 10);\n      } else {\n        //parse the date, using the js date object (for now?)\n        var txt = str.replace(/[a-z]+\\/[a-z]+/i, '');\n        txt = txt.replace(/[0-9]+:[0-9]+(am|pm)?/i, '');\n        var d = new Date(txt);\n\n        if (isNaN(d.getTime()) === false) {\n          date.year = d.getFullYear();\n          date.month = d.getMonth() + 1;\n          date.date = d.getDate();\n        }\n      }\n\n      list.push(template(date));\n      return str.trim();\n    },\n    //just grab the first value, and assume it's a year\n    one_year: function one_year(tmpl, list) {\n      var order = ['year'];\n      var obj = parse$3(tmpl, order);\n      var year = Number(obj.year);\n      list.push(template({\n        year: year\n      }));\n      return String(year);\n    },\n    //assume 'y|m|d' | 'y|m|d' // {{BirthDeathAge|B|1976|6|6|1990|8|8}}\n    two_dates: function two_dates(tmpl, list) {\n      var order = ['b', 'birth_year', 'birth_month', 'birth_date', 'death_year', 'death_month', 'death_date'];\n      var obj = parse$3(tmpl, order); //'b' means show birth-date, otherwise show death-date\n\n      if (obj.b && obj.b.toLowerCase() === 'b') {\n        var _date = ymd$1([obj.birth_year, obj.birth_month, obj.birth_date]);\n\n        list.push(template(_date));\n        return toText$2(_date);\n      }\n\n      var date = ymd$1([obj.death_year, obj.death_month, obj.death_date]);\n      list.push(template(date));\n      return toText$2(date);\n    },\n    age: function age(tmpl) {\n      var d = getBoth(tmpl);\n      var diff = _delta(d.from, d.to);\n      return diff.years || 0;\n    },\n    'diff-y': function diffY(tmpl) {\n      var d = getBoth(tmpl);\n      var diff = _delta(d.from, d.to);\n\n      if (diff.years === 1) {\n        return diff.years + ' year';\n      }\n\n      return (diff.years || 0) + ' years';\n    },\n    'diff-ym': function diffYm(tmpl) {\n      var d = getBoth(tmpl);\n      var diff = _delta(d.from, d.to);\n      var arr = [];\n\n      if (diff.years === 1) {\n        arr.push(diff.years + ' year');\n      } else if (diff.years && diff.years !== 0) {\n        arr.push(diff.years + ' years');\n      }\n\n      if (diff.months === 1) {\n        arr.push('1 month');\n      } else if (diff.months && diff.months !== 0) {\n        arr.push(diff.months + ' months');\n      }\n\n      return arr.join(', ');\n    },\n    'diff-ymd': function diffYmd(tmpl) {\n      var d = getBoth(tmpl);\n      var diff = _delta(d.from, d.to);\n      var arr = [];\n\n      if (diff.years === 1) {\n        arr.push(diff.years + ' year');\n      } else if (diff.years && diff.years !== 0) {\n        arr.push(diff.years + ' years');\n      }\n\n      if (diff.months === 1) {\n        arr.push('1 month');\n      } else if (diff.months && diff.months !== 0) {\n        arr.push(diff.months + ' months');\n      }\n\n      if (diff.days === 1) {\n        arr.push('1 day');\n      } else if (diff.days && diff.days !== 0) {\n        arr.push(diff.days + ' days');\n      }\n\n      return arr.join(', ');\n    },\n    'diff-yd': function diffYd(tmpl) {\n      var d = getBoth(tmpl);\n      var diff = _delta(d.from, d.to);\n      var arr = [];\n\n      if (diff.years === 1) {\n        arr.push(diff.years + ' year');\n      } else if (diff.years && diff.years !== 0) {\n        arr.push(diff.years + ' years');\n      } //ergh...\n\n\n      diff.days += (diff.months || 0) * 30;\n\n      if (diff.days === 1) {\n        arr.push('1 day');\n      } else if (diff.days && diff.days !== 0) {\n        arr.push(diff.days + ' days');\n      }\n\n      return arr.join(', ');\n    },\n    'diff-d': function diffD(tmpl) {\n      var d = getBoth(tmpl);\n      var diff = _delta(d.from, d.to);\n      var arr = []; //ergh...\n\n      diff.days += (diff.years || 0) * 365;\n      diff.days += (diff.months || 0) * 30;\n\n      if (diff.days === 1) {\n        arr.push('1 day');\n      } else if (diff.days && diff.days !== 0) {\n        arr.push(diff.days + ' days');\n      }\n\n      return arr.join(', ');\n    }\n  };\n  var parsers_1 = parsers;\n\n  //not all too fancy - used in {{timesince}}\n  var timeSince = function timeSince(str) {\n    var d = new Date(str);\n\n    if (isNaN(d.getTime())) {\n      return '';\n    }\n\n    var now = new Date();\n    var delta = now.getTime() - d.getTime();\n    var predicate = 'ago';\n\n    if (delta < 0) {\n      predicate = 'from now';\n      delta = Math.abs(delta);\n    } //figure out units\n\n\n    var hours = delta / 1000 / 60 / 60;\n    var days = hours / 24;\n\n    if (days < 365) {\n      return parseInt(days, 10) + ' days ' + predicate;\n    }\n\n    var years = days / 365;\n    return parseInt(years, 10) + ' years ' + predicate;\n  };\n\n  var _timeSince = timeSince;\n\n  var date = parsers_1.date;\n  var natural_date = parsers_1.natural_date;\n  var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']; //date- templates we support\n\n  var dateTmpl = Object.assign({}, misc_1, {\n    currentday: function currentday() {\n      var d = new Date();\n      return String(d.getDate());\n    },\n    currentdayname: function currentdayname() {\n      var d = new Date();\n      return days[d.getDay()];\n    },\n    currentmonth: function currentmonth() {\n      var d = new Date();\n      return months[d.getMonth()];\n    },\n    currentyear: function currentyear() {\n      var d = new Date();\n      return String(d.getFullYear());\n    },\n    monthyear: function monthyear() {\n      var d = new Date();\n      return months[d.getMonth()] + ' ' + d.getFullYear();\n    },\n    'monthyear-1': function monthyear1() {\n      var d = new Date();\n      d.setMonth(d.getMonth() - 1);\n      return months[d.getMonth()] + ' ' + d.getFullYear();\n    },\n    'monthyear+1': function monthyear1() {\n      var d = new Date();\n      d.setMonth(d.getMonth() + 1);\n      return months[d.getMonth()] + ' ' + d.getFullYear();\n    },\n    //Explictly-set dates - https://en.wikipedia.org/wiki/Template:Date\n    date: 0,\n    'time ago': function timeAgo(tmpl) {\n      var order = ['date', 'fmt'];\n      var time = parse$3(tmpl, order).date;\n      return _timeSince(time);\n    },\n    //https://en.wikipedia.org/wiki/Template:Birth_date_and_age\n    'birth date and age': function birthDateAndAge(tmpl, list) {\n      var order = ['year', 'month', 'day'];\n      var obj = parse$3(tmpl, order); //support 'one property' version\n\n      if (obj.year && /[a-z]/i.test(obj.year)) {\n        return natural_date(tmpl, list);\n      }\n\n      list.push(obj);\n      obj = _format.ymd([obj.year, obj.month, obj.day]);\n      return _format.toText(obj);\n    },\n    'birth year and age': function birthYearAndAge(tmpl, list) {\n      var order = ['birth_year', 'birth_month'];\n      var obj = parse$3(tmpl, order); //support 'one property' version\n\n      if (obj.death_year && /[a-z]/i.test(obj.death_year)) {\n        return natural_date(tmpl, list);\n      }\n\n      list.push(obj);\n      var age = new Date().getFullYear() - parseInt(obj.birth_year, 10);\n      obj = _format.ymd([obj.birth_year, obj.birth_month]);\n      var str = _format.toText(obj);\n\n      if (age) {\n        str += \" (age \".concat(age, \")\");\n      }\n\n      return str;\n    },\n    'death year and age': function deathYearAndAge(tmpl, list) {\n      var order = ['death_year', 'birth_year', 'death_month'];\n      var obj = parse$3(tmpl, order); //support 'one property' version\n\n      if (obj.death_year && /[a-z]/i.test(obj.death_year)) {\n        return natural_date(tmpl, list);\n      }\n\n      list.push(obj);\n      obj = _format.ymd([obj.death_year, obj.death_month]);\n      return _format.toText(obj);\n    },\n    //https://en.wikipedia.org/wiki/Template:Birth_date_and_age2\n    'birth date and age2': function birthDateAndAge2(tmpl, list) {\n      var order = ['at_year', 'at_month', 'at_day', 'birth_year', 'birth_month', 'birth_day'];\n      var obj = parse$3(tmpl, order);\n      list.push(obj);\n      obj = _format.ymd([obj.birth_year, obj.birth_month, obj.birth_day]);\n      return _format.toText(obj);\n    },\n    //https://en.wikipedia.org/wiki/Template:Birth_based_on_age_as_of_date\n    'birth based on age as of date': function birthBasedOnAgeAsOfDate(tmpl, list) {\n      var order = ['age', 'year', 'month', 'day'];\n      var obj = parse$3(tmpl, order);\n      list.push(obj);\n      var age = parseInt(obj.age, 10);\n      var year = parseInt(obj.year, 10);\n      var born = year - age;\n\n      if (born && age) {\n        return \"\".concat(born, \" (age \").concat(obj.age, \")\");\n      }\n\n      return \"(age \".concat(obj.age, \")\");\n    },\n    //https://en.wikipedia.org/wiki/Template:Death_date_and_given_age\n    'death date and given age': function deathDateAndGivenAge(tmpl, list) {\n      var order = ['year', 'month', 'day', 'age'];\n      var obj = parse$3(tmpl, order);\n      list.push(obj);\n      obj = _format.ymd([obj.year, obj.month, obj.day]);\n      var str = _format.toText(obj);\n\n      if (obj.age) {\n        str += \" (age \".concat(obj.age, \")\");\n      }\n\n      return str;\n    },\n    //sortable dates -\n    dts: function dts(tmpl) {\n      //remove formatting stuff, ewww\n      tmpl = tmpl.replace(/\\|format=[ymd]+/i, '');\n      tmpl = tmpl.replace(/\\|abbr=(on|off)/i, '');\n      var order = ['year', 'month', 'date', 'bc'];\n      var obj = parse$3(tmpl, order);\n\n      if (obj.date && obj.month && obj.year) {\n        //render 'june 5 2018'\n        if (/[a-z]/.test(obj.month) === true) {\n          return [obj.month, obj.date, obj.year].join(' ');\n        }\n\n        return [obj.year, obj.month, obj.date].join('-');\n      }\n\n      if (obj.month && obj.year) {\n        return [obj.year, obj.month].join('-');\n      }\n\n      if (obj.year) {\n        if (obj.year < 0) {\n          obj.year = Math.abs(obj.year) + ' BC';\n        }\n\n        return obj.year;\n      }\n\n      return '';\n    },\n    //date/age/time templates\n    start: date,\n    end: date,\n    birth: date,\n    death: date,\n    'start date': date,\n    'end date': date,\n    'birth date': date,\n    'death date': date,\n    'start date and age': date,\n    'end date and age': date,\n    //this is insane (hyphen ones are different)\n    'start-date': natural_date,\n    'end-date': natural_date,\n    'birth-date': natural_date,\n    'death-date': natural_date,\n    'birth-date and age': natural_date,\n    'birth-date and given age': natural_date,\n    'death-date and age': natural_date,\n    'death-date and given age': natural_date,\n    birthdeathage: parsers_1.two_dates,\n    dob: date,\n    // 'birth date and age2': date,\n    age: parsers_1.age,\n    'age nts': parsers_1.age,\n    'age in years': parsers_1['diff-y'],\n    'age in years and months': parsers_1['diff-ym'],\n    'age in years, months and days': parsers_1['diff-ymd'],\n    'age in years and days': parsers_1['diff-yd'],\n    'age in days': parsers_1['diff-d'] // 'age in years, months, weeks and days': true,\n    // 'age as of date': true,\n\n  }); //aliases\n\n  dateTmpl.localday = dateTmpl.currentday;\n  dateTmpl.localdayname = dateTmpl.currentdayname;\n  dateTmpl.localmonth = dateTmpl.currentmonth;\n  dateTmpl.localyear = dateTmpl.currentyear;\n  dateTmpl.currentmonthname = dateTmpl.currentmonth;\n  dateTmpl.currentmonthabbrev = dateTmpl.currentmonth;\n  dateTmpl['death date and age'] = dateTmpl['birth date and age'];\n  dateTmpl.bda = dateTmpl['birth date and age'];\n  dateTmpl['birth date based on age at death'] = dateTmpl['birth based on age as of date'];\n  var dates = dateTmpl;\n\n  var templates = {\n    //a convulated way to make a xml tag - https://en.wikipedia.org/wiki/Template:Tag\n    tag: function tag(tmpl) {\n      var obj = parse$3(tmpl, ['tag', 'open']);\n      var ignore = {\n        span: true,\n        div: true,\n        p: true\n      }; //pair, empty, close, single\n\n      if (!obj.open || obj.open === 'pair') {\n        //just skip generating spans and things..\n        if (ignore[obj.tag]) {\n          return obj.content || '';\n        }\n\n        return \"<\".concat(obj.tag, \" \").concat(obj.attribs || '', \">\").concat(obj.content || '', \"</\").concat(obj.tag, \">\");\n      }\n\n      return '';\n    },\n    //dumb inflector - https://en.wikipedia.org/wiki/Template:Plural\n    plural: function plural(tmpl) {\n      tmpl = tmpl.replace(/plural:/, 'plural|');\n      var order = ['num', 'word'];\n      var obj = parse$3(tmpl, order);\n      var num = Number(obj.num);\n      var word = obj.word;\n\n      if (num !== 1) {\n        if (/.y$/.test(word)) {\n          word = word.replace(/y$/, 'ies');\n        } else {\n          word += 's';\n        }\n      }\n\n      return num + ' ' + word;\n    },\n    // https://en.wikipedia.org/wiki/Template:First_word\n    'first word': function firstWord(tmpl) {\n      var obj = parse$3(tmpl, ['text']);\n      var str = obj.text;\n\n      if (obj.sep) {\n        return str.split(obj.sep)[0];\n      }\n\n      return str.split(' ')[0];\n    },\n    trunc: function trunc(tmpl) {\n      var order = ['str', 'len'];\n      var obj = parse$3(tmpl, order);\n      return obj.str.substr(0, obj.len);\n    },\n    'str mid': function strMid(tmpl) {\n      var order = ['str', 'start', 'end'];\n      var obj = parse$3(tmpl, order);\n      var start = parseInt(obj.start, 10) - 1;\n      var end = parseInt(obj.end, 10);\n      return obj.str.substr(start, end);\n    },\n    //grab the first, second or third pipe\n    p1: 0,\n    p2: 1,\n    p3: 2,\n    //formatting things - https://en.wikipedia.org/wiki/Template:Nobold\n    braces: function braces(tmpl) {\n      var obj = parse$3(tmpl, ['text']);\n      var attrs = '';\n\n      if (obj.list) {\n        attrs = '|' + obj.list.join('|');\n      }\n\n      return '{{' + (obj.text || '') + attrs + '}}';\n    },\n    nobold: 0,\n    noitalic: 0,\n    nocaps: 0,\n    syntaxhighlight: function syntaxhighlight(tmpl, list) {\n      var obj = parse$3(tmpl);\n      list.push(obj);\n      return obj.code || '';\n    },\n    samp: function samp(tmpl, list) {\n      var obj = parse$3(tmpl, ['1']);\n      list.push(obj);\n      return obj['1'] || '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Visible_anchor\n    vanchor: 0,\n    //https://en.wikipedia.org/wiki/Template:Resize\n    resize: 1,\n    //https://en.wikipedia.org/wiki/Template:Ra\n    ra: function ra(tmpl) {\n      var obj = parse$3(tmpl, ['hours', 'minutes', 'seconds']);\n      return [obj.hours || 0, obj.minutes || 0, obj.seconds || 0].join(':');\n    },\n    //https://en.wikipedia.org/wiki/Template:Deg2HMS\n    deg2hms: function deg2hms(tmpl) {\n      //this template should do the conversion\n      var obj = parse$3(tmpl, ['degrees']);\n      return (obj.degrees || '') + '°';\n    },\n    hms2deg: function hms2deg(tmpl) {\n      //this template should do the conversion too\n      var obj = parse$3(tmpl, ['hours', 'minutes', 'seconds']);\n      return [obj.hours || 0, obj.minutes || 0, obj.seconds || 0].join(':');\n    },\n    decdeg: function decdeg(tmpl) {\n      //this template should do the conversion too\n      var obj = parse$3(tmpl, ['deg', 'min', 'sec', 'hem', 'rnd']);\n      return (obj.deg || obj.degrees) + '°';\n    },\n    rnd: 0,\n    //https://en.wikipedia.org/wiki/Template:DEC\n    dec: function dec(tmpl) {\n      var obj = parse$3(tmpl, ['degrees', 'minutes', 'seconds']);\n      var str = (obj.degrees || 0) + '°';\n\n      if (obj.minutes) {\n        str += obj.minutes + \"\\u2032\";\n      }\n\n      if (obj.seconds) {\n        str += obj.seconds + '″';\n      }\n\n      return str;\n    },\n    //https://en.wikipedia.org/wiki/Template:Val\n    val: function val(tmpl) {\n      var obj = parse$3(tmpl, ['number', 'uncertainty']);\n      var num = obj.number;\n\n      if (num && Number(num)) {\n        num = Number(num).toLocaleString();\n      }\n\n      var str = num || ''; //prefix/suffix\n\n      if (obj.p) {\n        str = obj.p + str;\n      }\n\n      if (obj.s) {\n        str = obj.s + str;\n      } //add units, too\n\n\n      if (obj.u || obj.ul || obj.upl) {\n        str = str + ' ' + (obj.u || obj.ul || obj.upl);\n      }\n\n      return str;\n    }\n  }; //aliases\n\n  templates['rndfrac'] = templates.rnd;\n  templates['rndnear'] = templates.rnd;\n  templates['unité'] = templates.val; //templates that we simply grab their insides as plaintext\n\n  var inline = ['nowrap', 'nobr', 'big', 'cquote', 'pull quote', 'small', 'smaller', 'midsize', 'larger', 'big', 'kbd', 'bigger', 'large', 'mono', 'strongbad', 'stronggood', 'huge', 'xt', 'xt2', '!xt', 'xtn', 'xtd', 'dc', 'dcr', 'mxt', '!mxt', 'mxtn', 'mxtd', 'bxt', '!bxt', 'bxtn', 'bxtd', 'delink', //https://en.wikipedia.org/wiki/Template:Delink\n  //half-supported\n  'pre', 'var', 'mvar', 'pre2', 'code'];\n  inline.forEach(function (k) {\n    templates[k] = function (tmpl) {\n      return parse$3(tmpl, ['text']).text || '';\n    };\n  });\n  var format = templates;\n\n  var tmpls = {\n    //a strange, newline-based list - https://en.wikipedia.org/wiki/Template:Plainlist\n    plainlist: function plainlist(tmpl) {\n      tmpl = _strip(tmpl); //remove the title\n\n      var arr = tmpl.split('|');\n      arr = arr.slice(1);\n      tmpl = arr.join('|'); //split on newline\n\n      arr = tmpl.split(/\\n ?\\* ?/);\n      arr = arr.filter(function (s) {\n        return s;\n      });\n      return arr.join('\\n\\n');\n    },\n    //show/hide: https://en.wikipedia.org/wiki/Template:Collapsible_list\n    'collapsible list': function collapsibleList(tmpl, list) {\n      var obj = parse$3(tmpl);\n      list.push(obj);\n      var str = '';\n\n      if (obj.title) {\n        str += \"'''\".concat(obj.title, \"'''\") + '\\n\\n';\n      }\n\n      if (!obj.list) {\n        obj.list = [];\n\n        for (var i = 1; i < 10; i += 1) {\n          if (obj[i]) {\n            obj.list.push(obj[i]);\n            delete obj[i];\n          }\n        }\n      }\n\n      obj.list = obj.list.filter(function (s) {\n        return s;\n      });\n      str += obj.list.join('\\n\\n');\n      return str;\n    },\n    // https://en.wikipedia.org/wiki/Template:Ordered_list\n    'ordered list': function orderedList(tmpl, list) {\n      var obj = parse$3(tmpl);\n      list.push(obj);\n      obj.list = obj.list || [];\n      var lines = obj.list.map(function (str, i) {\n        return \"\".concat(i + 1, \". \").concat(str);\n      });\n      return lines.join('\\n\\n');\n    },\n    hlist: function hlist(tmpl) {\n      var obj = parse$3(tmpl);\n      obj.list = obj.list || [];\n      return obj.list.join(' · ');\n    },\n    pagelist: function pagelist(tmpl) {\n      var arr = parse$3(tmpl).list || [];\n      return arr.join(', ');\n    },\n    //actually rendering these links removes the text.\n    //https://en.wikipedia.org/wiki/Template:Catlist\n    catlist: function catlist(tmpl) {\n      var arr = parse$3(tmpl).list || [];\n      return arr.join(', ');\n    },\n    //https://en.wikipedia.org/wiki/Template:Br_separated_entries\n    'br separated entries': function brSeparatedEntries(tmpl) {\n      var arr = parse$3(tmpl).list || [];\n      return arr.join('\\n\\n');\n    },\n    'comma separated entries': function commaSeparatedEntries(tmpl) {\n      var arr = parse$3(tmpl).list || [];\n      return arr.join(', ');\n    },\n    //https://en.wikipedia.org/wiki/Template:Bare_anchored_list\n    'anchored list': function anchoredList(tmpl) {\n      var arr = parse$3(tmpl).list || [];\n      arr = arr.map(function (str, i) {\n        return \"\".concat(i + 1, \". \").concat(str);\n      });\n      return arr.join('\\n\\n');\n    },\n    'bulleted list': function bulletedList(tmpl) {\n      var arr = parse$3(tmpl).list || [];\n      arr = arr.filter(function (f) {\n        return f;\n      });\n      arr = arr.map(function (str) {\n        return '• ' + str;\n      });\n      return arr.join('\\n\\n');\n    },\n    //https://en.wikipedia.org/wiki/Template:Columns-list\n    'columns-list': function columnsList(tmpl, list) {\n      var arr = parse$3(tmpl).list || [];\n      var str = arr[0] || '';\n      var lines = str.split(/\\n/);\n      lines = lines.filter(function (f) {\n        return f;\n      });\n      lines = lines.map(function (s) {\n        return s.replace(/\\*/, '');\n      });\n      list.push({\n        template: 'columns-list',\n        list: lines\n      });\n      lines = lines.map(function (s) {\n        return '• ' + s;\n      });\n      return lines.join('\\n\\n');\n    } // 'pagelist':(tmpl)=>{},\n\n  }; //aliases\n\n  tmpls.flatlist = tmpls.plainlist;\n  tmpls.ublist = tmpls.plainlist;\n  tmpls['unbulleted list'] = tmpls['collapsible list'];\n  tmpls['ubl'] = tmpls['collapsible list'];\n  tmpls['bare anchored list'] = tmpls['anchored list'];\n  tmpls['plain list'] = tmpls['plainlist'];\n  tmpls.cmn = tmpls['columns-list'];\n  tmpls.collist = tmpls['columns-list'];\n  tmpls['col-list'] = tmpls['columns-list'];\n  tmpls.columnslist = tmpls['columns-list'];\n  var lists = tmpls;\n\n  var inline$1 = {\n    //https://en.wikipedia.org/wiki/Template:Convert#Ranges_of_values\n    convert: function convert(tmpl) {\n      var order = ['num', 'two', 'three', 'four'];\n      var obj = parse$3(tmpl, order); //todo: support plural units\n\n      if (obj.two === '-' || obj.two === 'to' || obj.two === 'and') {\n        if (obj.four) {\n          return \"\".concat(obj.num, \" \").concat(obj.two, \" \").concat(obj.three, \" \").concat(obj.four);\n        }\n\n        return \"\".concat(obj.num, \" \").concat(obj.two, \" \").concat(obj.three);\n      }\n\n      return \"\".concat(obj.num, \" \").concat(obj.two);\n    },\n    //https://en.wikipedia.org/wiki/Template:Term\n    term: function term(tmpl) {\n      var obj = parse$3(tmpl, ['term']);\n      return \"\".concat(obj.term, \":\");\n    },\n    defn: 0,\n    //https://en.wikipedia.org/wiki/Template:Linum\n    lino: 0,\n    linum: function linum(tmpl) {\n      var obj = parse$3(tmpl, ['num', 'text']);\n      return \"\".concat(obj.num, \". \").concat(obj.text);\n    },\n    //https://en.wikipedia.org/wiki/Template:Interlanguage_link\n    ill: function ill(tmpl) {\n      var order = ['text', 'lan1', 'text1', 'lan2', 'text2'];\n      var obj = parse$3(tmpl, order);\n      return obj.text;\n    },\n    //https://en.wikipedia.org/wiki/Template:Frac\n    frac: function frac(tmpl) {\n      var order = ['a', 'b', 'c'];\n      var obj = parse$3(tmpl, order);\n\n      if (obj.c) {\n        return \"\".concat(obj.a, \" \").concat(obj.b, \"/\").concat(obj.c);\n      }\n\n      if (obj.b) {\n        return \"\".concat(obj.a, \"/\").concat(obj.b);\n      }\n\n      return \"1/\".concat(obj.b);\n    },\n    //https://en.wikipedia.org/wiki/Template:Height - {{height|ft=6|in=1}}\n    height: function height(tmpl, list) {\n      var obj = parse$3(tmpl);\n      list.push(obj);\n      var result = [];\n      var units = ['m', 'cm', 'ft', 'in']; //order matters\n\n      units.forEach(function (unit) {\n        if (obj.hasOwnProperty(unit) === true) {\n          result.push(obj[unit] + unit);\n        }\n      });\n      return result.join(' ');\n    },\n    'block indent': function blockIndent(tmpl) {\n      var obj = parse$3(tmpl);\n\n      if (obj['1']) {\n        return '\\n' + obj['1'] + '\\n';\n      }\n\n      return '';\n    },\n    quote: function quote(tmpl, list) {\n      var order = ['text', 'author'];\n      var obj = parse$3(tmpl, order);\n      list.push(obj); //create plaintext version\n\n      if (obj.text) {\n        var str = \"\\\"\".concat(obj.text, \"\\\"\");\n\n        if (obj.author) {\n          str += '\\n\\n';\n          str += \"    - \".concat(obj.author);\n        }\n\n        return str + '\\n';\n      }\n\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Lbs\n    lbs: function lbs(tmpl) {\n      var obj = parse$3(tmpl, ['text']);\n      return \"[[\".concat(obj.text, \" Lifeboat Station|\").concat(obj.text, \"]]\");\n    },\n    //Foo-class\n    lbc: function lbc(tmpl) {\n      var obj = parse$3(tmpl, ['text']);\n      return \"[[\".concat(obj.text, \"-class lifeboat|\").concat(obj.text, \"-class]]\");\n    },\n    lbb: function lbb(tmpl) {\n      var obj = parse$3(tmpl, ['text']);\n      return \"[[\".concat(obj.text, \"-class lifeboat|\").concat(obj.text, \"]]\");\n    },\n    // https://en.wikipedia.org/wiki/Template:Own\n    own: function own(tmpl) {\n      var obj = parse$3(tmpl, ['author']);\n      var str = 'Own work';\n\n      if (obj.author) {\n        str += ' by ' + obj.author;\n      }\n\n      return str;\n    },\n    //https://en.wikipedia.org/wiki/Template:Sic\n    sic: function sic(tmpl, list) {\n      var obj = parse$3(tmpl, ['one', 'two', 'three']);\n      var word = (obj.one || '') + (obj.two || ''); //support '[sic?]'\n\n      if (obj.one === '?') {\n        word = (obj.two || '') + (obj.three || '');\n      }\n\n      list.push({\n        template: 'sic',\n        word: word\n      });\n\n      if (obj.nolink === 'y') {\n        return word;\n      }\n\n      return \"\".concat(word, \" [sic]\");\n    },\n    //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n    formatnum: function formatnum(tmpl) {\n      tmpl = tmpl.replace(/:/, '|');\n      var obj = parse$3(tmpl, ['number']);\n      var str = obj.number || '';\n      str = str.replace(/,/g, '');\n      var num = Number(str);\n      return num.toLocaleString() || '';\n    },\n    //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n    '#dateformat': function dateformat(tmpl) {\n      tmpl = tmpl.replace(/:/, '|');\n      var obj = parse$3(tmpl, ['date', 'format']);\n      return obj.date;\n    },\n    //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n    lc: function lc(tmpl) {\n      tmpl = tmpl.replace(/:/, '|');\n      var obj = parse$3(tmpl, ['text']);\n      return (obj.text || '').toLowerCase();\n    },\n    lcfirst: function lcfirst(tmpl) {\n      tmpl = tmpl.replace(/:/, '|');\n      var obj = parse$3(tmpl, ['text']);\n      var text = obj.text;\n\n      if (!text) {\n        return '';\n      }\n\n      return text[0].toLowerCase() + text.substr(1);\n    },\n    //https://www.mediawiki.org/wiki/Help:Magic_words#Formatting\n    uc: function uc(tmpl) {\n      tmpl = tmpl.replace(/:/, '|');\n      var obj = parse$3(tmpl, ['text']);\n      return (obj.text || '').toUpperCase();\n    },\n    ucfirst: function ucfirst(tmpl) {\n      tmpl = tmpl.replace(/:/, '|');\n      var obj = parse$3(tmpl, ['text']);\n      var text = obj.text;\n\n      if (!text) {\n        return '';\n      }\n\n      return text[0].toUpperCase() + text.substr(1);\n    },\n    padleft: function padleft(tmpl) {\n      tmpl = tmpl.replace(/:/, '|');\n      var obj = parse$3(tmpl, ['text', 'num']);\n      var text = obj.text || '';\n      return text.padStart(obj.num, obj.str || '0');\n    },\n    padright: function padright(tmpl) {\n      tmpl = tmpl.replace(/:/, '|');\n      var obj = parse$3(tmpl, ['text', 'num']);\n      var text = obj.text || '';\n      return text.padEnd(obj.num, obj.str || '0');\n    },\n    //abbreviation/meaning\n    //https://en.wikipedia.org/wiki/Template:Abbr\n    abbr: function abbr(tmpl) {\n      var obj = parse$3(tmpl, ['abbr', 'meaning', 'ipa']);\n      return obj.abbr;\n    },\n    //https://en.wikipedia.org/wiki/Template:Abbrlink\n    abbrlink: function abbrlink(tmpl) {\n      var obj = parse$3(tmpl, ['abbr', 'page']);\n\n      if (obj.page) {\n        return \"[[\".concat(obj.page, \"|\").concat(obj.abbr, \"]]\");\n      }\n\n      return \"[[\".concat(obj.abbr, \"]]\");\n    },\n    //https://en.wikipedia.org/wiki/Template:Hover_title\n    //technically 'h:title'\n    h: 1,\n    //https://en.wikipedia.org/wiki/Template:Finedetail\n    finedetail: 0,\n    //https://en.wikipedia.org/wiki/Template:Sort\n    sort: 1\n  }; //aliases\n\n  inline$1['str left'] = inline$1.trunc;\n  inline$1['str crop'] = inline$1.trunc;\n  inline$1['tooltip'] = inline$1.abbr;\n  inline$1['abbrv'] = inline$1.abbr;\n  inline$1['define'] = inline$1.abbr;\n  inline$1['cvt'] = inline$1.convert;\n  var misc$1 = inline$1;\n\n  var formatting$1 = Object.assign({}, format, lists, misc$1);\n\n  //converts DMS (decimal-minute-second) geo format to lat/lng format.\n  //major thank you to https://github.com/gmaclennan/parse-dms\n  //and https://github.com/WSDOT-GIS/dms-js 👏\n  //accepts an array of descending Degree, Minute, Second values, with a hemisphere at the end\n  //must have N/S/E/W as last thing\n  function parseDms(arr) {\n    var hemisphere = arr.pop();\n    var degrees = Number(arr[0] || 0);\n    var minutes = Number(arr[1] || 0);\n    var seconds = Number(arr[2] || 0);\n\n    if (typeof hemisphere !== 'string' || isNaN(degrees)) {\n      return null;\n    }\n\n    var sign = 1;\n\n    if (/[SW]/i.test(hemisphere)) {\n      sign = -1;\n    }\n\n    var decDeg = sign * (degrees + minutes / 60 + seconds / 3600);\n    return decDeg;\n  }\n\n  var dmsFormat = parseDms; // console.log(parseDms([57, 18, 22, 'N']));\n\n  var round = function round(num) {\n    if (typeof num !== 'number') {\n      return num;\n    }\n\n    var places = 100000;\n    return Math.round(num * places) / places;\n  }; //these hemispheres mean negative decimals\n\n\n  var negative = {\n    s: true,\n    w: true\n  };\n\n  var findLatLng = function findLatLng(arr) {\n    var types = arr.map(function (s) {\n      return _typeof(s);\n    }).join('|'); //support {{lat|lng}}\n\n    if (arr.length === 2 && types === 'number|number') {\n      return {\n        lat: arr[0],\n        lon: arr[1]\n      };\n    } //support {{dd|N/S|dd|E/W}}\n\n\n    if (arr.length === 4 && types === 'number|string|number|string') {\n      if (negative[arr[1].toLowerCase()]) {\n        arr[0] *= -1;\n      }\n\n      if (arr[3].toLowerCase() === 'w') {\n        arr[2] *= -1;\n      }\n\n      return {\n        lat: arr[0],\n        lon: arr[2]\n      };\n    } //support {{dd|mm|N/S|dd|mm|E/W}}\n\n\n    if (arr.length === 6) {\n      return {\n        lat: dmsFormat(arr.slice(0, 3)),\n        lon: dmsFormat(arr.slice(3))\n      };\n    } //support {{dd|mm|ss|N/S|dd|mm|ss|E/W}}\n\n\n    if (arr.length === 8) {\n      return {\n        lat: dmsFormat(arr.slice(0, 4)),\n        lon: dmsFormat(arr.slice(4))\n      };\n    }\n\n    return {};\n  };\n\n  var parseParams = function parseParams(obj) {\n    obj.list = obj.list || [];\n    obj.list = obj.list.map(function (str) {\n      var num = Number(str);\n\n      if (!isNaN(num)) {\n        return num;\n      } //these are weird\n\n\n      var split = str.split(/:/);\n\n      if (split.length > 1) {\n        obj.props = obj.props || {};\n        obj.props[split[0]] = split.slice(1).join(':');\n        return null;\n      }\n\n      return str;\n    });\n    obj.list = obj.list.filter(function (s) {\n      return s !== null;\n    });\n    return obj;\n  };\n\n  var parseCoor = function parseCoor(tmpl) {\n    var obj = parse$3(tmpl);\n    obj = parseParams(obj);\n    var tmp = findLatLng(obj.list);\n    obj.lat = round(tmp.lat);\n    obj.lon = round(tmp.lon);\n    obj.template = 'coord';\n    delete obj.list;\n    return obj;\n  };\n\n  var coor = parseCoor; // {{Coor title dms|dd|mm|ss|N/S|dd|mm|ss|E/W|template parameters}}\n\n  var templates$1 = {\n    coord: function coord(tmpl, list) {\n      var obj = coor(tmpl);\n      list.push(obj); //display inline, by default\n\n      if (!obj.display || obj.display.indexOf('inline') !== -1) {\n        return \"\".concat(obj.lat || '', \"\\xB0N, \").concat(obj.lon || '', \"\\xB0W\");\n      }\n\n      return '';\n    },\n    //https://en.wikivoyage.org/wiki/Template:Geo\n    geo: ['lat', 'lon', 'zoom']\n  }; // {{coord|latitude|longitude|coordinate parameters|template parameters}}\n  // {{coord|dd|N/S|dd|E/W|coordinate parameters|template parameters}}\n  // {{coord|dd|mm|N/S|dd|mm|E/W|coordinate parameters|template parameters}}\n  // {{coord|dd|mm|ss|N/S|dd|mm|ss|E/W|coordinate parameters|template parameters}}\n\n  templates$1['coor'] = templates$1.coord; // these are from the nl wiki\n\n  templates$1['coor title dms'] = templates$1.coord;\n  templates$1['coor title dec'] = templates$1.coord;\n  templates$1['coor dms'] = templates$1.coord;\n  templates$1['coor dm'] = templates$1.coord;\n  templates$1['coor dec'] = templates$1.coord;\n  var geo = templates$1;\n\n  var templates$2 = {\n    /* mostly wiktionary*/\n    etyl: 1,\n    mention: 1,\n    link: 1,\n    'la-verb-form': 0,\n    'la-ipa': 0,\n    //https://en.wikipedia.org/wiki/Template:Sortname\n    sortname: function sortname(tmpl) {\n      var order = ['first', 'last', 'target', 'sort'];\n      var obj = parse$3(tmpl, order);\n      var name = \"\".concat(obj.first || '', \" \").concat(obj.last || '');\n      name = name.trim();\n\n      if (obj.nolink) {\n        return obj.target || name;\n      }\n\n      if (obj.dab) {\n        name += \" (\".concat(obj.dab, \")\");\n\n        if (obj.target) {\n          obj.target += \" (\".concat(obj.dab, \")\");\n        }\n      }\n\n      if (obj.target) {\n        return \"[[\".concat(obj.target, \"|\").concat(name, \"]]\");\n      }\n\n      return \"[[\".concat(name, \"]]\");\n    }\n  }; //these are insane\n  // https://en.wikipedia.org/wiki/Template:Tl\n\n  var links = ['lts', 't', 'tfd links', 'tiw', 'tltt', 'tetl', 'tsetl', 'ti', 'tic', 'tiw', 'tlt', 'ttl', 'twlh', 'tl2', 'tlu', 'demo', 'hatnote', 'xpd', 'para', 'elc', 'xtag', 'mli', 'mlix', '#invoke', 'url' //https://en.wikipedia.org/wiki/Template:URL\n  ]; //keyValues\n\n  links.forEach(function (k) {\n    templates$2[k] = function (tmpl) {\n      var order = ['first', 'second'];\n      var obj = parse$3(tmpl, order);\n      return obj.second || obj.first;\n    };\n  }); //aliases\n\n  templates$2.m = templates$2.mention;\n  templates$2['m-self'] = templates$2.mention;\n  templates$2.l = templates$2.link;\n  templates$2.ll = templates$2.link;\n  templates$2['l-self'] = templates$2.link;\n  var links_1 = templates$2;\n\n  var sisterProjects = {\n    wikt: 'wiktionary',\n    commons: 'commons',\n    c: 'commons',\n    commonscat: 'commonscat',\n    n: 'wikinews',\n    q: 'wikiquote',\n    s: 'wikisource',\n    a: 'wikiauthor',\n    b: 'wikibooks',\n    voy: 'wikivoyage',\n    v: 'wikiversity',\n    d: 'wikidata',\n    species: 'wikispecies',\n    m: 'meta',\n    mw: 'mediawiki'\n  };\n  var parsers$1 = {\n    //https://en.wikipedia.org/wiki/Template:About\n    about: function about(tmpl, list) {\n      var obj = parse$3(tmpl); // obj.pos = r.title //not working\n\n      list.push(obj);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Main\n    main: function main(tmpl, list) {\n      var obj = parse$3(tmpl); // obj.pos = r.title //not working\n\n      list.push(obj);\n      return '';\n    },\n    'wide image': ['file', 'width', 'caption'],\n    //https://en.wikipedia.org/wiki/Template:Redirect\n    redirect: function redirect(tmpl, list) {\n      var data = parse$3(tmpl, ['redirect']);\n      var lines = data.list || [];\n      var links = [];\n\n      for (var i = 0; i < lines.length; i += 2) {\n        links.push({\n          page: lines[i + 1],\n          desc: lines[i]\n        });\n      }\n\n      var obj = {\n        template: 'redirect',\n        redirect: data.redirect,\n        links: links\n      };\n      list.push(obj);\n      return '';\n    },\n    //this one sucks - https://en.wikipedia.org/wiki/Template:GNIS\n    'cite gnis': function citeGnis(tmpl, list) {\n      var order = ['id', 'name', 'type'];\n      var obj = parse$3(tmpl, order);\n      obj.type = 'gnis';\n      obj.template = 'citation';\n      list.push(obj);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Sfn\n    sfn: function sfn(tmpl, list, alias) {\n      var order = ['author', 'year', 'location'];\n      var obj = parse$3(tmpl, order);\n\n      if (alias) {\n        obj.name = obj.template;\n        obj.teplate = alias;\n      }\n\n      list.push(obj);\n      return '';\n    },\n    audio: ['file', 'text', 'type'],\n    rp: ['page'],\n    'spoken wikipedia': function spokenWikipedia(tmpl, list) {\n      var order = ['file', 'date'];\n      var obj = parse$3(tmpl, order);\n      obj.template = 'audio';\n      list.push(obj);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Sister_project_links\n    'sister project links': function sisterProjectLinks(tmpl, list) {\n      var data = parse$3(tmpl); //rename 'wd' to 'wikidata'\n\n      var links = {};\n      Object.keys(sisterProjects).forEach(function (k) {\n        if (data.hasOwnProperty(k) === true) {\n          links[sisterProjects[k]] = data[k]; //.text();\n        }\n      });\n      var obj = {\n        template: 'sister project links',\n        links: links\n      };\n      list.push(obj);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Subject_bar\n    'subject bar': function subjectBar(tmpl, list) {\n      var data = parse$3(tmpl);\n      Object.keys(data).forEach(function (k) {\n        //rename 'voy' to 'wikivoyage'\n        if (sisterProjects.hasOwnProperty(k)) {\n          data[sisterProjects[k]] = data[k];\n          delete data[k];\n        }\n      });\n      var obj = {\n        template: 'subject bar',\n        links: data\n      };\n      list.push(obj);\n      return '';\n    },\n    'short description': ['description'],\n    'coord missing': ['region'],\n    //amazingly, this one does not obey any known patterns\n    //https://en.wikipedia.org/wiki/Template:Gallery\n    gallery: function gallery(tmpl, list) {\n      var obj = parse$3(tmpl);\n      var images = (obj.list || []).filter(function (line) {\n        return /^ *File ?:/.test(line);\n      });\n      images = images.map(function (file) {\n        var img = {\n          file: file\n        };\n        return new Image_1(img).json();\n      });\n      obj = {\n        template: 'gallery',\n        images: images\n      };\n      list.push(obj);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:See_also\n    'see also': function seeAlso(tmpl, list) {\n      var data = parse$3(tmpl); // data.pos = r.title //not working\n\n      list.push(data);\n      return '';\n    },\n    unreferenced: ['date']\n  }; //aliases\n\n  parsers$1['cite'] = parsers$1.citation;\n  parsers$1['sfnref'] = parsers$1.sfn;\n  parsers$1['harvid'] = parsers$1.sfn;\n  parsers$1['harvnb'] = parsers$1.sfn;\n  parsers$1['unreferenced section'] = parsers$1.unreferenced;\n  parsers$1['redir'] = parsers$1.redirect;\n  parsers$1['sisterlinks'] = parsers$1['sister project links'];\n  parsers$1['main article'] = parsers$1['main'];\n  var page = parsers$1;\n\n  var titlecase = function titlecase(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n  }; //https://en.wikipedia.org/wiki/Template:Yes\n\n\n  var templates$3 = {};\n  var cells = ['rh', 'rh2', 'yes', 'no', 'maybe', 'eliminated', 'lost', 'safe', 'active', 'site active', 'coming soon', 'good', 'won', 'nom', 'sho', 'longlisted', 'tba', 'success', 'operational', 'failure', 'partial', 'regional', 'maybecheck', 'partial success', 'partial failure', 'okay', 'yes-no', 'some', 'nonpartisan', 'pending', 'unofficial', 'unofficial2', 'usually', 'rarely', 'sometimes', 'any', 'varies', 'black', 'non-album single', 'unreleased', 'unknown', 'perhaps', 'depends', 'included', 'dropped', 'terminated', 'beta', 'table-experimental', 'free', 'proprietary', 'nonfree', 'needs', 'nightly', 'release-candidate', 'planned', 'scheduled', 'incorrect', 'no result', 'cmain', 'calso starring', 'crecurring', 'cguest', 'not yet', 'optional'];\n  cells.forEach(function (str) {\n    templates$3[str] = function (tmpl) {\n      var data = parse$3(tmpl, ['text']);\n      return data.text || titlecase(data.template);\n    };\n  }); //these ones have a text result\n\n  var moreCells = [['active fire', 'Active'], ['site active', 'Active'], ['site inactive', 'Inactive'], ['yes2', ''], ['no2', ''], ['ya', '✅'], ['na', '❌'], ['nom', 'Nominated'], ['sho', 'Shortlisted'], ['tba', 'TBA'], ['maybecheck', '✔️'], ['okay', 'Neutral'], ['n/a', 'N/A'], ['sdash', '—'], ['dunno', '?'], ['draw', ''], ['cnone', ''], ['nocontest', '']];\n  moreCells.forEach(function (a) {\n    templates$3[a[0]] = function (tmpl) {\n      var data = parse$3(tmpl, ['text']);\n      return data.text || a[1];\n    };\n  }); //this one's a little different\n\n  templates$3.won = function (tmpl) {\n    var data = parse$3(tmpl, ['text']);\n    return data.place || data.text || titlecase(data.template);\n  };\n\n  var tableCell = templates$3;\n\n  var wikipedia = Object.assign({}, links_1, page, tableCell);\n\n  var zeroPad = function zeroPad(num) {\n    num = String(num);\n\n    if (num.length === 1) {\n      num = '0' + num;\n    }\n\n    return num;\n  };\n\n  var parseTeam = function parseTeam(obj, round, team) {\n    if (obj[\"rd\".concat(round, \"-team\").concat(zeroPad(team))]) {\n      team = zeroPad(team);\n    }\n\n    var score = obj[\"rd\".concat(round, \"-score\").concat(team)];\n    var num = Number(score);\n\n    if (isNaN(num) === false) {\n      score = num;\n    }\n\n    return {\n      team: obj[\"rd\".concat(round, \"-team\").concat(team)],\n      score: score,\n      seed: obj[\"rd\".concat(round, \"-seed\").concat(team)]\n    };\n  }; //these are weird.\n\n\n  var playoffBracket = function playoffBracket(tmpl) {\n    var rounds = [];\n    var obj = parse$3(tmpl); //try some rounds\n\n    for (var i = 1; i < 7; i += 1) {\n      var round = [];\n\n      for (var t = 1; t < 16; t += 2) {\n        var key = \"rd\".concat(i, \"-team\");\n\n        if (obj[key + t] || obj[key + zeroPad(t)]) {\n          var one = parseTeam(obj, i, t);\n          var two = parseTeam(obj, i, t + 1);\n          round.push([one, two]);\n        } else {\n          break;\n        }\n      }\n\n      if (round.length > 0) {\n        rounds.push(round);\n      }\n    }\n\n    return {\n      template: 'playoffbracket',\n      rounds: rounds\n    };\n  };\n\n  var all = {\n    //playoff brackets\n    '4teambracket': function teambracket(tmpl, list) {\n      var obj = playoffBracket(tmpl);\n      list.push(obj);\n      return '';\n    }\n  }; //a bunch of aliases for these ones:\n  // https://en.wikipedia.org/wiki/Category:Tournament_bracket_templates\n\n  var brackets = ['2teambracket', '4team2elimbracket', '8teambracket', '16teambracket', '32teambracket', 'cwsbracket', 'nhlbracket', 'nhlbracket-reseed', '4teambracket-nhl', '4teambracket-ncaa', '4teambracket-mma', '4teambracket-mlb', '8teambracket-nhl', '8teambracket-mlb', '8teambracket-ncaa', '8teambracket-afc', '8teambracket-afl', '8teambracket-tennis3', '8teambracket-tennis5', '16teambracket-nhl', '16teambracket-nhl divisional', '16teambracket-nhl-reseed', '16teambracket-nba', '16teambracket-swtc', '16teambracket-afc', '16teambracket-tennis3', '16teambracket-tennis5'];\n  brackets.forEach(function (key) {\n    all[key] = all['4teambracket'];\n  });\n  var brackets_1 = all;\n\n  var codes = {\n    '£': 'GB£',\n    // https://en.wikipedia.org/wiki/Template:GBP\n    '¥': '¥',\n    // https://en.wikipedia.org/wiki/Template:JPY\n    '৳': '৳',\n    // https://en.wikipedia.org/wiki/Template:BDT\n    '₩': '₩',\n    // https://en.wikipedia.org/wiki/Template:SK_won\n    '€': '€',\n    // https://en.wikipedia.org/wiki/Template:€\n    '₱': '₱',\n    // https://en.wikipedia.org/wiki/Template:Philippine_peso\n    '₹': '₹',\n    // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n    '₽': '₽',\n    // https://en.wikipedia.org/wiki/Template:RUB\n    'cn¥': 'CN¥',\n    // https://en.wikipedia.org/wiki/Template:CNY\n    'gb£': 'GB£',\n    // https://en.wikipedia.org/wiki/Template:GBP\n    'india rs': '₹',\n    // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n    'indian rupee symbol': '₹',\n    // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n    'indian rupee': '₹',\n    // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n    'indian rupees': '₹',\n    // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n    'philippine peso': '₱',\n    // https://en.wikipedia.org/wiki/Template:Philippine_peso\n    'russian ruble': '₽',\n    // https://en.wikipedia.org/wiki/Template:Russian_ruble\n    'SK won': '₩',\n    // https://en.wikipedia.org/wiki/Template:SK_won\n    'turkish lira': 'TRY',\n    //https://en.wikipedia.org/wiki/Template:Turkish_lira\n    a$: 'A$',\n    // https://en.wikipedia.org/wiki/Template:AUD\n    au$: 'A$',\n    //https://en.wikipedia.org/wiki/Template:AUD\n    aud: 'A$',\n    //https://en.wikipedia.org/wiki/Template:AUD\n    bdt: 'BDT',\n    //https://en.wikipedia.org/wiki/Template:BDT\n    brl: 'BRL',\n    //https://en.wikipedia.org/wiki/Template:BRL\n    ca$: 'CA$',\n    // https://en.wikipedia.org/wiki/Template:CAD\n    cad: 'CA$',\n    // https://en.wikipedia.org/wiki/Template:CAD\n    chf: 'CHF',\n    // https://en.wikipedia.org/wiki/Template:CHF\n    cny: 'CN¥',\n    // https://en.wikipedia.org/wiki/Template:CNY\n    czk: 'czk',\n    // https://en.wikipedia.org/wiki/Template:CZK\n    dkk: 'dkk',\n    // https://en.wikipedia.org/wiki/Template:DKK\n    dkk2: 'dkk',\n    // https://en.wikipedia.org/wiki/Template:DKK\n    euro: '€',\n    // https://en.wikipedia.org/wiki/Template:€\n    gbp: 'GB£',\n    // https://en.wikipedia.org/wiki/Template:GBP\n    hk$: 'HK$',\n    // https://en.wikipedia.org/wiki/Template:HKD\n    hkd: 'HK$',\n    // https://en.wikipedia.org/wiki/Template:HKD\n    ils: 'ILS',\n    // https://en.wikipedia.org/wiki/Template:ILS\n    inr: '₹',\n    // https://en.wikipedia.org/wiki/Template:Indian_Rupee\n    jpy: '¥',\n    // https://en.wikipedia.org/wiki/Template:JPY\n    myr: 'MYR',\n    // https://en.wikipedia.org/wiki/Template:MYR\n    nis: 'ILS',\n    // https://en.wikipedia.org/wiki/Template:ILS\n    nok: 'NOK',\n    //https://en.wikipedia.org/wiki/Template:NOK\n    nok2: 'NOK',\n    //https://en.wikipedia.org/wiki/Template:NOK\n    nz$: 'NZ$',\n    //https://en.wikipedia.org/wiki/Template:NZD\n    nzd: 'NZ$',\n    //https://en.wikipedia.org/wiki/Template:NZD\n    peso: 'peso',\n    //https://en.wikipedia.org/wiki/Template:Peso\n    pkr: '₨',\n    // https://en.wikipedia.org/wiki/Template:Pakistani_Rupee\n    r$: 'BRL',\n    //https://en.wikipedia.org/wiki/Template:BRL\n    rmb: 'CN¥',\n    // https://en.wikipedia.org/wiki/Template:CNY\n    rub: '₽',\n    // https://en.wikipedia.org/wiki/Template:RUB\n    ruble: '₽',\n    // https://en.wikipedia.org/wiki/Template:Ruble\n    rupee: '₹',\n    // https://en.wikipedia.org/wiki/Template:Rupee\n    s$: 'sgd',\n    // https://en.wikipedia.org/wiki/Template:SGD\n    sek: 'SEK',\n    // https://en.wikipedia.org/wiki/Template:SEK\n    sek2: 'SEK',\n    // https://en.wikipedia.org/wiki/Template:SEK\n    sfr: 'CHF',\n    // https://en.wikipedia.org/wiki/Template:CHF\n    sgd: 'sgd',\n    // https://en.wikipedia.org/wiki/Template:SGD\n    shekel: 'ILS',\n    // https://en.wikipedia.org/wiki/Template:ILS\n    sheqel: 'ILS',\n    // https://en.wikipedia.org/wiki/Template:ILS\n    ttd: 'TTD',\n    //https://en.wikipedia.org/wiki/Template:TTD\n    us$: 'US$',\n    // https://en.wikipedia.org/wiki/Template:US$\n    usd: 'US$',\n    // https://en.wikipedia.org/wiki/Template:US$\n    yen: '¥',\n    // https://en.wikipedia.org/wiki/Template:JPY\n    zar: 'R' //https://en.wikipedia.org/wiki/Template:ZAR\n\n  };\n\n  var parseCurrency = function parseCurrency(tmpl, list) {\n    var o = parse$3(tmpl, ['amount', 'code']);\n    list.push(o);\n    var code = o.template || '';\n\n    if (code === 'currency') {\n      code = o.code;\n\n      if (!code) {\n        o.code = code = 'usd'; //Special case when currency template has no code argument\n      }\n    } else if (code === '' || code === 'monnaie' || code === 'unité' || code === 'nombre' || code === 'nb') {\n      code = o.code;\n    }\n\n    code = (code || '').toLowerCase();\n\n    switch (code) {\n      case 'us':\n        o.code = code = 'usd';\n        break;\n\n      case 'uk':\n        o.code = code = 'gbp';\n        break;\n    }\n\n    var out = codes[code] || '';\n    var str = \"\".concat(out).concat(o.amount || ''); //support unknown currencies after the number - like '5 BTC'\n\n    if (o.code && !codes[o.code.toLowerCase()]) {\n      str += ' ' + o.code;\n    }\n\n    return str;\n  };\n\n  var inrConvert = function inrConvert(tmpl, list) {\n    var o = parse$3(tmpl, ['rupee_value', 'currency_formatting']);\n    list.push(o);\n    var formatting = o.currency_formatting;\n\n    if (formatting) {\n      var multiplier = 1;\n\n      switch (formatting) {\n        case 'k':\n          multiplier = 1000;\n          break;\n\n        case 'm':\n          multiplier = 1000000;\n          break;\n\n        case 'b':\n          multiplier = 1000000000;\n          break;\n\n        case 't':\n          multiplier = 1000000000000;\n          break;\n\n        case 'l':\n          multiplier = 100000;\n          break;\n\n        case 'c':\n          multiplier = 10000000;\n          break;\n\n        case 'lc':\n          multiplier = 1000000000000;\n          break;\n      }\n\n      o.rupee_value = o.rupee_value * multiplier;\n    }\n\n    var str = \"inr \".concat(o.rupee_value || '');\n    return str;\n  };\n\n  var currencies = {\n    //this one is generic https://en.wikipedia.org/wiki/Template:Currency\n    currency: parseCurrency,\n    monnaie: parseCurrency,\n    unité: parseCurrency,\n    nombre: parseCurrency,\n    nb: parseCurrency,\n    iso4217: parseCurrency,\n    inrconvert: inrConvert\n  }; //the others fit the same pattern..\n\n  Object.keys(codes).forEach(function (k) {\n    currencies[k] = parseCurrency;\n  });\n  var currency = currencies;\n\n  var templates$4 = {\n    //https://en.wikipedia.org/wiki/Template:Election_box\n    'election box begin': function electionBoxBegin(tmpl, list) {\n      var data = parse$3(tmpl);\n      list.push(data);\n      return '';\n    },\n    'election box candidate': function electionBoxCandidate(tmpl, list) {\n      var data = parse$3(tmpl);\n      list.push(data);\n      return '';\n    },\n    'election box hold with party link': function electionBoxHoldWithPartyLink(tmpl, list) {\n      var data = parse$3(tmpl);\n      list.push(data);\n      return '';\n    },\n    'election box gain with party link': function electionBoxGainWithPartyLink(tmpl, list) {\n      var data = parse$3(tmpl);\n      list.push(data);\n      return '';\n    }\n  }; //aliases\n\n  templates$4['election box begin no change'] = templates$4['election box begin'];\n  templates$4['election box begin no party'] = templates$4['election box begin'];\n  templates$4['election box begin no party no change'] = templates$4['election box begin'];\n  templates$4['election box inline begin'] = templates$4['election box begin'];\n  templates$4['election box inline begin no change'] = templates$4['election box begin'];\n  templates$4['election box candidate for alliance'] = templates$4['election box candidate'];\n  templates$4['election box candidate minor party'] = templates$4['election box candidate'];\n  templates$4['election box candidate no party link no change'] = templates$4['election box candidate'];\n  templates$4['election box candidate with party link'] = templates$4['election box candidate'];\n  templates$4['election box candidate with party link coalition 1918'] = templates$4['election box candidate'];\n  templates$4['election box candidate with party link no change'] = templates$4['election box candidate'];\n  templates$4['election box inline candidate'] = templates$4['election box candidate'];\n  templates$4['election box inline candidate no change'] = templates$4['election box candidate'];\n  templates$4['election box inline candidate with party link'] = templates$4['election box candidate'];\n  templates$4['election box inline candidate with party link no change'] = templates$4['election box candidate'];\n  templates$4['election box inline incumbent'] = templates$4['election box candidate'];\n  var elections = templates$4;\n\n  var flags = [['🇦🇩', 'and', 'andorra'], ['🇦🇪', 'are', 'united arab emirates'], ['🇦🇫', 'afg', 'afghanistan'], ['🇦🇬', 'atg', 'antigua and barbuda'], ['🇦🇮', 'aia', 'anguilla'], ['🇦🇱', 'alb', 'albania'], ['🇦🇲', 'arm', 'armenia'], ['🇦🇴', 'ago', 'angola'], ['🇦🇶', 'ata', 'antarctica'], ['🇦🇷', 'arg', 'argentina'], ['🇦🇸', 'asm', 'american samoa'], ['🇦🇹', 'aut', 'austria'], ['🇦🇺', 'aus', 'australia'], ['🇦🇼', 'abw', 'aruba'], ['🇦🇽', 'ala', 'åland islands'], ['🇦🇿', 'aze', 'azerbaijan'], ['🇧🇦', 'bih', 'bosnia and herzegovina'], ['🇧🇧', 'brb', 'barbados'], ['🇧🇩', 'bgd', 'bangladesh'], ['🇧🇪', 'bel', 'belgium'], ['🇧🇫', 'bfa', 'burkina faso'], ['🇧🇬', 'bgr', 'bulgaria'], ['🇧🇬', 'bul', //dupe\n  'bulgaria'], ['🇧🇭', 'bhr', 'bahrain'], ['🇧🇮', 'bdi', 'burundi'], ['🇧🇯', 'ben', 'benin'], ['🇧🇱', 'blm', 'saint barthélemy'], ['🇧🇲', 'bmu', 'bermuda'], ['🇧🇳', 'brn', 'brunei darussalam'], ['🇧🇴', 'bol', 'bolivia'], ['🇧🇶', 'bes', 'bonaire, sint eustatius and saba'], ['🇧🇷', 'bra', 'brazil'], ['🇧🇸', 'bhs', 'bahamas'], ['🇧🇹', 'btn', 'bhutan'], ['🇧🇻', 'bvt', 'bouvet island'], ['🇧🇼', 'bwa', 'botswana'], ['🇧🇾', 'blr', 'belarus'], ['🇧🇿', 'blz', 'belize'], ['🇨🇦', 'can', 'canada'], ['🇨🇨', 'cck', 'cocos (keeling) islands'], ['🇨🇩', 'cod', 'congo'], ['🇨🇫', 'caf', 'central african republic'], ['🇨🇬', 'cog', 'congo'], ['🇨🇭', 'che', 'switzerland'], ['🇨🇮', 'civ', \"côte d'ivoire\"], ['🇨🇰', 'cok', 'cook islands'], ['🇨🇱', 'chl', 'chile'], ['🇨🇲', 'cmr', 'cameroon'], ['🇨🇳', 'chn', 'china'], ['🇨🇴', 'col', 'colombia'], ['🇨🇷', 'cri', 'costa rica'], ['🇨🇺', 'cub', 'cuba'], ['🇨🇻', 'cpv', 'cape verde'], ['🇨🇼', 'cuw', 'curaçao'], ['🇨🇽', 'cxr', 'christmas island'], ['🇨🇾', 'cyp', 'cyprus'], ['🇨🇿', 'cze', 'czech republic'], ['🇩🇪', 'deu', 'germany'], ['🇩🇪', 'ger', //alias\n  'germany'], ['🇩🇯', 'dji', 'djibouti'], ['🇩🇰', 'dnk', 'denmark'], ['🇩🇲', 'dma', 'dominica'], ['🇩🇴', 'dom', 'dominican republic'], ['🇩🇿', 'dza', 'algeria'], ['🇪🇨', 'ecu', 'ecuador'], ['🇪🇪', 'est', 'estonia'], ['🇪🇬', 'egy', 'egypt'], ['🇪🇭', 'esh', 'western sahara'], ['🇪🇷', 'eri', 'eritrea'], ['🇪🇸', 'esp', 'spain'], ['🇪🇹', 'eth', 'ethiopia'], ['🇫🇮', 'fin', 'finland'], ['🇫🇯', 'fji', 'fiji'], ['🇫🇰', 'flk', 'falkland islands (malvinas)'], ['🇫🇲', 'fsm', 'micronesia'], ['🇫🇴', 'fro', 'faroe islands'], ['🇫🇷', 'fra', 'france'], ['🇬🇦', 'gab', 'gabon'], ['🇬🇧', 'gbr', 'united kingdom'], ['🇬🇩', 'grd', 'grenada'], // ['🇬🇪', 'geo', 'georgia'],\n  ['🇬🇫', 'guf', 'french guiana'], ['🇬🇬', 'ggy', 'guernsey'], ['🇬🇭', 'gha', 'ghana'], ['🇬🇮', 'gib', 'gibraltar'], ['🇬🇱', 'grl', 'greenland'], ['🇬🇲', 'gmb', 'gambia'], ['🇬🇳', 'gin', 'guinea'], ['🇬🇵', 'glp', 'guadeloupe'], ['🇬🇶', 'gnq', 'equatorial guinea'], ['🇬🇷', 'grc', 'greece'], ['🇬🇸', 'sgs', 'south georgia'], ['🇬🇹', 'gtm', 'guatemala'], ['🇬🇺', 'gum', 'guam'], ['🇬🇼', 'gnb', 'guinea-bissau'], ['🇬🇾', 'guy', 'guyana'], ['🇭🇰', 'hkg', 'hong kong'], ['🇭🇲', 'hmd', 'heard island and mcdonald islands'], ['🇭🇳', 'hnd', 'honduras'], ['🇭🇷', 'hrv', 'croatia'], ['🇭🇹', 'hti', 'haiti'], ['🇭🇺', 'hun', 'hungary'], ['🇮🇩', 'idn', 'indonesia'], ['🇮🇪', 'irl', 'ireland'], ['🇮🇱', 'isr', 'israel'], ['🇮🇲', 'imn', 'isle of man'], ['🇮🇳', 'ind', 'india'], ['🇮🇴', 'iot', 'british indian ocean territory'], ['🇮🇶', 'irq', 'iraq'], ['🇮🇷', 'irn', 'iran'], ['🇮🇸', 'isl', 'iceland'], ['🇮🇹', 'ita', 'italy'], ['🇯🇪', 'jey', 'jersey'], ['🇯🇲', 'jam', 'jamaica'], ['🇯🇴', 'jor', 'jordan'], ['🇯🇵', 'jpn', 'japan'], ['🇰🇪', 'ken', 'kenya'], ['🇰🇬', 'kgz', 'kyrgyzstan'], ['🇰🇭', 'khm', 'cambodia'], ['🇰🇮', 'kir', 'kiribati'], ['🇰🇲', 'com', 'comoros'], ['🇰🇳', 'kna', 'saint kitts and nevis'], ['🇰🇵', 'prk', 'north korea'], ['🇰🇷', 'kor', 'south korea'], ['🇰🇼', 'kwt', 'kuwait'], ['🇰🇾', 'cym', 'cayman islands'], ['🇰🇿', 'kaz', 'kazakhstan'], ['🇱🇦', 'lao', \"lao people's democratic republic\"], ['🇱🇧', 'lbn', 'lebanon'], ['🇱🇨', 'lca', 'saint lucia'], ['🇱🇮', 'lie', 'liechtenstein'], ['🇱🇰', 'lka', 'sri lanka'], ['🇱🇷', 'lbr', 'liberia'], ['🇱🇸', 'lso', 'lesotho'], ['🇱🇹', 'ltu', 'lithuania'], ['🇱🇺', 'lux', 'luxembourg'], ['🇱🇻', 'lva', 'latvia'], ['🇱🇾', 'lby', 'libya'], ['🇲🇦', 'mar', 'morocco'], ['🇲🇨', 'mco', 'monaco'], ['🇲🇩', 'mda', 'moldova'], ['🇲🇪', 'mne', 'montenegro'], ['🇲🇫', 'maf', 'saint martin (french part)'], ['🇲🇬', 'mdg', 'madagascar'], ['🇲🇭', 'mhl', 'marshall islands'], ['🇲🇰', 'mkd', 'macedonia'], ['🇲🇱', 'mli', 'mali'], ['🇲🇲', 'mmr', 'myanmar'], ['🇲🇳', 'mng', 'mongolia'], ['🇲🇴', 'mac', 'macao'], ['🇲🇵', 'mnp', 'northern mariana islands'], ['🇲🇶', 'mtq', 'martinique'], ['🇲🇷', 'mrt', 'mauritania'], ['🇲🇸', 'msr', 'montserrat'], ['🇲🇹', 'mlt', 'malta'], ['🇲🇺', 'mus', 'mauritius'], ['🇲🇻', 'mdv', 'maldives'], ['🇲🇼', 'mwi', 'malawi'], ['🇲🇽', 'mex', 'mexico'], ['🇲🇾', 'mys', 'malaysia'], ['🇲🇿', 'moz', 'mozambique'], ['🇳🇦', 'nam', 'namibia'], ['🇳🇨', 'ncl', 'new caledonia'], ['🇳🇪', 'ner', 'niger'], ['🇳🇫', 'nfk', 'norfolk island'], ['🇳🇬', 'nga', 'nigeria'], ['🇳🇮', 'nic', 'nicaragua'], ['🇳🇱', 'nld', 'netherlands'], ['🇳🇴', 'nor', 'norway'], ['🇳🇵', 'npl', 'nepal'], ['🇳🇷', 'nru', 'nauru'], ['🇳🇺', 'niu', 'niue'], ['🇳🇿', 'nzl', 'new zealand'], ['🇴🇲', 'omn', 'oman'], ['🇵🇦', 'pan', 'panama'], ['🇵🇪', 'per', 'peru'], ['🇵🇫', 'pyf', 'french polynesia'], ['🇵🇬', 'png', 'papua new guinea'], ['🇵🇭', 'phl', 'philippines'], ['🇵🇰', 'pak', 'pakistan'], ['🇵🇱', 'pol', 'poland'], ['🇵🇲', 'spm', 'saint pierre and miquelon'], ['🇵🇳', 'pcn', 'pitcairn'], ['🇵🇷', 'pri', 'puerto rico'], ['🇵🇸', 'pse', 'palestinian territory'], ['🇵🇹', 'prt', 'portugal'], ['🇵🇼', 'plw', 'palau'], ['🇵🇾', 'pry', 'paraguay'], ['🇶🇦', 'qat', 'qatar'], ['🇷🇪', 'reu', 'réunion'], ['🇷🇴', 'rou', 'romania'], ['🇷🇸', 'srb', 'serbia'], ['🇷🇺', 'rus', 'russia'], ['🇷🇼', 'rwa', 'rwanda'], ['🇸🇦', 'sau', 'saudi arabia'], ['🇸🇧', 'slb', 'solomon islands'], ['🇸🇨', 'syc', 'seychelles'], ['🇸🇩', 'sdn', 'sudan'], ['🇸🇪', 'swe', 'sweden'], ['🇸🇬', 'sgp', 'singapore'], ['🇸🇭', 'shn', 'saint helena, ascension and tristan da cunha'], ['🇸🇮', 'svn', 'slovenia'], ['🇸🇯', 'sjm', 'svalbard and jan mayen'], ['🇸🇰', 'svk', 'slovakia'], ['🇸🇱', 'sle', 'sierra leone'], ['🇸🇲', 'smr', 'san marino'], ['🇸🇳', 'sen', 'senegal'], ['🇸🇴', 'som', 'somalia'], ['🇸🇷', 'sur', 'suriname'], ['🇸🇸', 'ssd', 'south sudan'], ['🇸🇹', 'stp', 'sao tome and principe'], ['🇸🇻', 'slv', 'el salvador'], ['🇸🇽', 'sxm', 'sint maarten (dutch part)'], ['🇸🇾', 'syr', 'syrian arab republic'], ['🇸🇿', 'swz', 'swaziland'], ['🇹🇨', 'tca', 'turks and caicos islands'], ['🇹🇩', 'tcd', 'chad'], ['🇹🇫', 'atf', 'french southern territories'], ['🇹🇬', 'tgo', 'togo'], ['🇹🇭', 'tha', 'thailand'], ['🇹🇯', 'tjk', 'tajikistan'], ['🇹🇰', 'tkl', 'tokelau'], ['🇹🇱', 'tls', 'timor-leste'], ['🇹🇲', 'tkm', 'turkmenistan'], ['🇹🇳', 'tun', 'tunisia'], ['🇹🇴', 'ton', 'tonga'], ['🇹🇷', 'tur', 'turkey'], ['🇹🇹', 'tto', 'trinidad and tobago'], ['🇹🇻', 'tuv', 'tuvalu'], ['🇹🇼', 'twn', 'taiwan'], ['🇹🇿', 'tza', 'tanzania'], ['🇺🇦', 'ukr', 'ukraine'], ['🇺🇬', 'uga', 'uganda'], ['🇺🇲', 'umi', 'united states minor outlying islands'], ['🇺🇸', 'usa', 'united states'], ['🇺🇸', 'us', //alias\n  'united states'], ['🇺🇾', 'ury', 'uruguay'], ['🇺🇿', 'uzb', 'uzbekistan'], ['🇻🇦', 'vat', 'vatican city'], ['🇻🇨', 'vct', 'saint vincent and the grenadines'], ['🇻🇪', 'ven', 'venezuela'], ['🇻🇬', 'vgb', 'virgin islands, british'], ['🇻🇮', 'vir', 'virgin islands, u.s.'], ['🇻🇳', 'vnm', 'viet nam'], ['🇻🇺', 'vut', 'vanuatu'], ['', 'win', 'west indies'], ['🇼🇫', 'wlf', 'wallis and futuna'], ['🇼🇸', 'wsm', 'samoa'], ['🇾🇪', 'yem', 'yemen'], ['🇾🇹', 'myt', 'mayotte'], ['🇿🇦', 'zaf', 'south africa'], ['🇿🇲', 'zmb', 'zambia'], ['🇿🇼 ', 'zwe', 'zimbabwe'], //others (later unicode versions)\n  ['🇺🇳', 'un', 'united nations'], ['🏴󠁧󠁢󠁥󠁮󠁧󠁿󠁧󠁢󠁥󠁮󠁧󠁿', 'eng', 'england'], ['🏴󠁧󠁢󠁳󠁣󠁴󠁿', 'sct', 'scotland'], ['🏴󠁧󠁢󠁷󠁬󠁳󠁿', 'wal', 'wales'], ['🇪🇺', 'eu', 'european union']];\n\n  var templates$5 = {\n    //https://en.wikipedia.org/wiki/Template:Flag\n    // {{flag|USA}} →  USA\n    flag: function flag(tmpl) {\n      var order = ['flag', 'variant'];\n      var obj = parse$3(tmpl, order);\n      var name = obj.flag || '';\n      obj.flag = (obj.flag || '').toLowerCase();\n      var found = flags.find(function (a) {\n        return obj.flag === a[1] || obj.flag === a[2];\n      }) || [];\n      var flag = found[0] || '';\n      return \"\".concat(flag, \" [[\").concat(found[2], \"|\").concat(name, \"]]\");\n    },\n    // {{flagcountry|USA}} →  United States\n    flagcountry: function flagcountry(tmpl) {\n      var order = ['flag', 'variant'];\n      var obj = parse$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      var found = flags.find(function (a) {\n        return obj.flag === a[1] || obj.flag === a[2];\n      }) || [];\n      var flag = found[0] || '';\n      return \"\".concat(flag, \" [[\").concat(found[2], \"]]\");\n    },\n    // (unlinked flag-country)\n    flagcu: function flagcu(tmpl) {\n      var order = ['flag', 'variant'];\n      var obj = parse$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      var found = flags.find(function (a) {\n        return obj.flag === a[1] || obj.flag === a[2];\n      }) || [];\n      var flag = found[0] || '';\n      return \"\".concat(flag, \" \").concat(found[2]);\n    },\n    //https://en.wikipedia.org/wiki/Template:Flagicon\n    // {{flagicon|USA}} → United States\n    flagicon: function flagicon(tmpl) {\n      var order = ['flag', 'variant'];\n      var obj = parse$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      var found = flags.find(function (a) {\n        return obj.flag === a[1] || obj.flag === a[2];\n      });\n\n      if (!found) {\n        return '';\n      }\n\n      return \"[[\".concat(found[2], \"|\").concat(found[0], \"]]\");\n    },\n    //unlinked flagicon\n    flagdeco: function flagdeco(tmpl) {\n      var order = ['flag', 'variant'];\n      var obj = parse$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      var found = flags.find(function (a) {\n        return obj.flag === a[1] || obj.flag === a[2];\n      }) || [];\n      return found[0] || '';\n    },\n    //same, but a soccer team\n    fb: function fb(tmpl) {\n      var order = ['flag', 'variant'];\n      var obj = parse$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      var found = flags.find(function (a) {\n        return obj.flag === a[1] || obj.flag === a[2];\n      });\n\n      if (!found) {\n        return '';\n      }\n\n      return \"\".concat(found[0], \" [[\").concat(found[2], \" national football team|\").concat(found[2], \"]]\");\n    },\n    fbicon: function fbicon(tmpl) {\n      var order = ['flag', 'variant'];\n      var obj = parse$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      var found = flags.find(function (a) {\n        return obj.flag === a[1] || obj.flag === a[2];\n      });\n\n      if (!found) {\n        return '';\n      }\n\n      return \" [[\".concat(found[2], \" national football team|\").concat(found[0], \"]]\");\n    },\n    flagathlete: function flagathlete(tmpl) {\n      var order = ['name', 'flag', 'variant'];\n      var obj = parse$3(tmpl, order);\n      obj.flag = (obj.flag || '').toLowerCase();\n      var found = flags.find(function (a) {\n        return obj.flag === a[1] || obj.flag === a[2];\n      });\n\n      if (!found) {\n        return \"[[\".concat(obj.name || '', \"]]\");\n      }\n\n      return \"\".concat(found[0], \" [[\").concat(obj.name || '', \"]] (\").concat(found[1].toUpperCase(), \")\");\n    }\n  }; //support {{can}}\n\n  flags.forEach(function (a) {\n    templates$5[a[1]] = function () {\n      return a[0];\n    };\n  }); //cricket\n\n  templates$5['cr'] = templates$5.flagcountry;\n  templates$5['cr-rt'] = templates$5.flagcountry;\n  templates$5['cricon'] = templates$5.flagicon;\n  var flags_1 = templates$5;\n\n  var getLang = function getLang(name) {\n    //grab the language from the template name - 'ipa-de'\n    var lang = name.match(/ipac?-(.+)/);\n\n    if (lang !== null) {\n      if (languages.hasOwnProperty(lang[1]) === true) {\n        return languages[lang[1]].english_title;\n      }\n\n      return lang[1];\n    }\n\n    return null;\n  }; // pronounciation info\n\n\n  var templates$6 = {\n    // https://en.wikipedia.org/wiki/Template:IPA\n    ipa: function ipa(tmpl, list) {\n      var obj = parse$3(tmpl, ['transcription', 'lang', 'audio']);\n      obj.lang = getLang(obj.template);\n      obj.template = 'ipa';\n      list.push(obj);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:IPAc-en\n    ipac: function ipac(tmpl, list) {\n      var obj = parse$3(tmpl);\n      obj.transcription = (obj.list || []).join(',');\n      delete obj.list;\n      obj.lang = getLang(obj.template);\n      obj.template = 'ipac';\n      list.push(obj);\n      return '';\n    },\n    transl: function transl(tmpl, list) {\n      var obj = parse$3(tmpl, ['lang', 'text', 'text2']); // support 3-param\n\n      if (obj.text2) {\n        obj.iso = obj.text;\n        obj.text = obj.text2;\n        delete obj.text2;\n      }\n\n      list.push(obj);\n      return obj.text || '';\n    }\n  }; // - other languages -\n  // Polish, {{IPAc-pl}}\t{{IPAc-pl|'|sz|cz|e|ć|i|n}} → [ˈʂt͡ʂɛt͡ɕin]\n  // Portuguese, {{IPAc-pt}}\t{{IPAc-pt|p|o|<|r|t|u|'|g|a|l|lang=pt}} and {{IPAc-pt|b|r|a|'|s|i|l|lang=br}} → [puɾtuˈɣaɫ] and [bɾaˈsiw]\n\n  Object.keys(languages).forEach(function (lang) {\n    templates$6['ipa-' + lang] = templates$6.ipa;\n    templates$6['ipac-' + lang] = templates$6.ipac;\n  });\n  var ipa = templates$6;\n\n  var templates$7 = {\n    lang: 1,\n    //this one has a million variants\n    'lang-de': 0,\n    'rtl-lang': 1,\n    //german keyboard letterscn\n    taste: 0,\n    //https://en.wikipedia.org/wiki/Template:Nihongo\n    nihongo: function nihongo(tmpl, list) {\n      var obj = parse$3(tmpl, ['english', 'kanji', 'romaji', 'extra']);\n      list.push(obj);\n      var str = obj.english || obj.romaji || '';\n\n      if (obj.kanji) {\n        str += \" (\".concat(obj.kanji, \")\");\n      }\n\n      return str;\n    }\n  }; //https://en.wikipedia.org/wiki/Category:Lang-x_templates\n\n  Object.keys(languages).forEach(function (k) {\n    templates$7['lang-' + k] = templates$7['lang-de'];\n  });\n  templates$7['nihongo2'] = templates$7.nihongo;\n  templates$7['nihongo3'] = templates$7.nihongo;\n  templates$7['nihongo-s'] = templates$7.nihongo;\n  templates$7['nihongo foot'] = templates$7.nihongo;\n  var languages_1 = templates$7;\n\n  //simply num/denom * 100\n\n  var _percentage = function percentage(obj) {\n    if (!obj.numerator && !obj.denominator) {\n      return null;\n    }\n\n    var perc = Number(obj.numerator) / Number(obj.denominator);\n    perc *= 100;\n    var dec = Number(obj.decimals);\n\n    if (isNaN(dec)) {\n      dec = 1;\n    }\n\n    perc = perc.toFixed(dec);\n    return Number(perc);\n  };\n\n  var templates$8 = {\n    // https://en.wikipedia.org/wiki/Template:Math\n    math: function math(tmpl, list) {\n      var obj = parse$3(tmpl, ['formula']);\n      list.push(obj);\n      return '\\n\\n' + (obj.formula || '') + '\\n\\n';\n    },\n    //fraction - https://en.wikipedia.org/wiki/Template:Sfrac\n    frac: function frac(tmpl, list) {\n      var order = ['a', 'b', 'c'];\n      var obj = parse$3(tmpl, order);\n      var data = {\n        template: 'sfrac'\n      };\n\n      if (obj.c) {\n        data.integer = obj.a;\n        data.numerator = obj.b;\n        data.denominator = obj.c;\n      } else if (obj.b) {\n        data.numerator = obj.a;\n        data.denominator = obj.b;\n      } else {\n        data.numerator = 1;\n        data.denominator = obj.a;\n      }\n\n      list.push(data);\n\n      if (data.integer) {\n        return \"\".concat(data.integer, \" \").concat(data.numerator, \"\\u2044\").concat(data.denominator);\n      }\n\n      return \"\".concat(data.numerator, \"\\u2044\").concat(data.denominator);\n    },\n    //https://en.wikipedia.org/wiki/Template:Radic\n    radic: function radic(tmpl) {\n      var order = ['after', 'before'];\n      var obj = parse$3(tmpl, order);\n      return \"\".concat(obj.before || '', \"\\u221A\").concat(obj.after || '');\n    },\n    //{{percentage | numerator | denominator | decimals to round to (zero or greater) }}\n    percentage: function percentage(tmpl) {\n      var obj = parse$3(tmpl, ['numerator', 'denominator', 'decimals']);\n\n      var num = _percentage(obj);\n\n      if (num === null) {\n        return '';\n      }\n\n      return num + '%';\n    },\n    // {{Percent-done|done=N|total=N|digits=N}}\n    'percent-done': function percentDone(tmpl) {\n      var obj = parse$3(tmpl, ['done', 'total', 'digits']);\n\n      var num = _percentage({\n        numerator: obj.done,\n        denominator: obj.total,\n        decimals: obj.digits\n      });\n\n      if (num === null) {\n        return '';\n      }\n\n      return \"\".concat(obj.done, \" (\").concat(num, \"%) done\");\n    },\n    'winning percentage': function winningPercentage(tmpl, list) {\n      var obj = parse$3(tmpl, ['wins', 'losses', 'ties']);\n      list.push(obj);\n      var wins = Number(obj.wins);\n      var losses = Number(obj.losses);\n      var ties = Number(obj.ties) || 0;\n      var games = wins + losses + ties;\n\n      if (obj.ignore_ties === 'y') {\n        ties = 0;\n      }\n\n      if (ties) {\n        wins += ties / 2;\n      }\n\n      var num = _percentage({\n        numerator: wins,\n        denominator: games,\n        decimals: 1\n      });\n\n      if (num === null) {\n        return '';\n      }\n\n      return \".\".concat(num * 10);\n    },\n    winlosspct: function winlosspct(tmpl, list) {\n      var obj = parse$3(tmpl, ['wins', 'losses']);\n      list.push(obj);\n      var wins = Number(obj.wins);\n      var losses = Number(obj.losses);\n\n      var num = _percentage({\n        numerator: wins,\n        denominator: wins + losses,\n        decimals: 1\n      });\n\n      if (num === null) {\n        return '';\n      }\n\n      num = \".\".concat(num * 10);\n      return \"\".concat(wins || 0, \" || \").concat(losses || 0, \" || \").concat(num || '-');\n    }\n  }; //aliases\n\n  templates$8['sfrac'] = templates$8.frac;\n  templates$8['sqrt'] = templates$8.radic;\n  templates$8['pct'] = templates$8.percentage;\n  templates$8['percent'] = templates$8.percentage;\n  templates$8['winpct'] = templates$8['winning percentage'];\n  templates$8['winperc'] = templates$8['winning percentage'];\n  var math = templates$8;\n\n  var generic = function generic(tmpl, list, alias) {\n    var obj = parse$3(tmpl);\n\n    if (alias) {\n      obj.name = obj.template;\n      obj.template = alias;\n    }\n\n    list.push(obj);\n    return '';\n  };\n\n  var misc$2 = {\n    //i18n templates\n    persondata: generic,\n    taxobox: generic,\n    citation: generic,\n    portal: generic,\n    reflist: generic,\n    'cite book': generic,\n    'cite journal': generic,\n    'cite web': generic,\n    'commons cat': generic,\n    // https://en.wikipedia.org/wiki/Template:Portuguese_name\n    'portuguese name': ['first', 'second', 'suffix'],\n    uss: ['ship', 'id'],\n    isbn: function isbn(tmpl, list) {\n      var order = ['id', 'id2', 'id3'];\n      var obj = parse$3(tmpl, order);\n      list.push(obj);\n      return 'ISBN: ' + (obj.id || '');\n    },\n    //https://en.wikipedia.org/wiki/Template:Marriage\n    //this one creates a template, and an inline response\n    marriage: function marriage(tmpl, list) {\n      var data = parse$3(tmpl, ['spouse', 'from', 'to', 'end']);\n      list.push(data);\n      var str = \"\".concat(data.spouse || '');\n\n      if (data.from) {\n        if (data.to) {\n          str += \" (m. \".concat(data.from, \"-\").concat(data.to, \")\");\n        } else {\n          str += \" (m. \".concat(data.from, \")\");\n        }\n      }\n\n      return str;\n    },\n    //https://en.wikipedia.org/wiki/Template:Based_on\n    'based on': function basedOn(tmpl, list) {\n      var obj = parse$3(tmpl, ['title', 'author']);\n      list.push(obj);\n      return \"\".concat(obj.title, \" by \").concat(obj.author || '');\n    },\n    //https://en.wikipedia.org/wiki/Template:Video_game_release\n    'video game release': function videoGameRelease(tmpl, list) {\n      var order = ['region', 'date', 'region2', 'date2', 'region3', 'date3', 'region4', 'date4'];\n      var obj = parse$3(tmpl, order);\n      var template = {\n        template: 'video game release',\n        releases: []\n      };\n\n      for (var i = 0; i < order.length; i += 2) {\n        if (obj[order[i]]) {\n          template.releases.push({\n            region: obj[order[i]],\n            date: obj[order[i + 1]]\n          });\n        }\n      }\n\n      list.push(template);\n      var str = template.releases.map(function (o) {\n        return \"\".concat(o.region, \": \").concat(o.date || '');\n      }).join('\\n\\n');\n      return '\\n' + str + '\\n';\n    },\n    //barrels of oil https://en.wikipedia.org/wiki/Template:Bbl_to_t\n    'bbl to t': function bblToT(tmpl, list) {\n      var obj = parse$3(tmpl, ['barrels']);\n      list.push(obj);\n\n      if (obj.barrels === '0') {\n        return obj.barrels + ' barrel';\n      }\n\n      return obj.barrels + ' barrels';\n    },\n    //https://en.wikipedia.org/wiki/Template:Historical_populations\n    'historical populations': function historicalPopulations(tmpl, list) {\n      var data = parse$3(tmpl);\n      data.list = data.list || [];\n      var years = [];\n\n      for (var i = 0; i < data.list.length; i += 2) {\n        var num = data.list[i + 1];\n        years.push({\n          year: data.list[i],\n          val: Number(num) || num\n        });\n      }\n\n      data.data = years;\n      delete data.list;\n      list.push(data);\n      return '';\n    }\n  };\n  var misc_1$1 = misc$2;\n\n  // okay, these just hurts my feelings\n  // https://www.mediawiki.org/wiki/Help:Magic_words#Other\n  var punctuation = [// https://en.wikipedia.org/wiki/Template:%C2%B7\n  ['·', '·'], ['·', '·'], ['dot', '·'], ['middot', '·'], ['•', ' • '], //yup, oxford comma template\n  [',', ','], ['1/2', '1⁄2'], ['1/3', '1⁄3'], ['2/3', '2⁄3'], ['1/4', '1⁄4'], ['3/4', '3⁄4'], ['–', '–'], ['ndash', '–'], ['en dash', '–'], ['spaced ndash', ' – '], ['—', '—'], ['mdash', '—'], ['em dash', '—'], ['number sign', '#'], ['ibeam', 'I'], ['&', '&'], [';', ';'], ['ampersand', '&'], ['snds', ' – '], ['snd', ' – '], // these '{{^}}' things are nuts, and used as some ilicit spacing thing.\n  ['^', ' '], ['!', '|'], ['\\\\', ' /'], ['`', '`'], ['=', '='], ['bracket', '['], ['[', '['], ['*', '*'], ['asterisk', '*'], ['long dash', '———'], ['clear', '\\n\\n'], ['h.', 'ḥ']];\n  var templates$9 = {};\n  punctuation.forEach(function (a) {\n    templates$9[a[0]] = a[1];\n  });\n  var punctuation_1 = templates$9;\n\n  var templates$a = {\n    //https://en.wikipedia.org/wiki/Template:Taxon_info\n    'taxon info': ['taxon', 'item'],\n    //minor planet - https://en.wikipedia.org/wiki/Template:MPC\n    mpc: function mpc(tmpl, list) {\n      var obj = parse$3(tmpl, ['number', 'text']);\n      list.push(obj);\n      return \"[https://minorplanetcenter.net/db_search/show_object?object_id=P/2011+NO1 \".concat(obj.text || obj.number, \"]\");\n    },\n    //https://en.wikipedia.org/wiki/Template:Chem2\n    chem2: function chem2(tmpl, list) {\n      var obj = parse$3(tmpl, ['equation']);\n      list.push(obj);\n      return obj.equation;\n    },\n    //https://en.wikipedia.org/wiki/Template:Sky\n    sky: function sky(tmpl, list) {\n      var obj = parse$3(tmpl, ['asc_hours', 'asc_minutes', 'asc_seconds', 'dec_sign', 'dec_degrees', 'dec_minutes', 'dec_seconds', 'distance']);\n      var template = {\n        template: 'sky',\n        ascension: {\n          hours: obj.asc_hours,\n          minutes: obj.asc_minutes,\n          seconds: obj.asc_seconds\n        },\n        declination: {\n          sign: obj.dec_sign,\n          degrees: obj.dec_degrees,\n          minutes: obj.dec_minutes,\n          seconds: obj.dec_seconds\n        },\n        distance: obj.distance\n      };\n      list.push(template);\n      return '';\n    },\n\n    /*\n    {{Medical cases chart/Row\n    |1          = valid date\n    |2          = expression for deaths\n    |3          = expression for recoveries\n    |4          = expression for total cases (3rd classification)\n    |alttot1    = alternate expression for active cases (3rd classification)\n    |5          = expression for number in 4th classification\n    |6          = expression for total in 5th classification\n    |alttot2    = alternate expression for number in 5th classification\n    |7          = number in the first column\n    |8          = change in the first column\n    |firstright1= whether a change in the first column is not applicable (n.a.) (yes|y|1)\n    |9          = number in the second column\n    |10         = change in the second column\n    |firstright2= whether a change in the second column is not applicable (n.a.) (yes|y|1)\n    |divisor    = scaling divisor of the bars (bigger value = narrower bars)               [defaults to: 1]\n    |numwidth   = max width of the numbers in the right columns (xx or xxxx)<-(n|t|m|w|d)  [defaults to: mm]\n    |collapsible= whether the row is collapsible (yes|y|1)                                 {WIP}\n    |collapsed  = manual override of the initial row state (yes|y|1)                       {WIP}\n    |id         = manual override of the row id                                            {WIP}\n    }}\n    */\n    // this is a weird one\n    //https://en.wikipedia.org/wiki/Template:Medical_cases_chart\n    'medical cases chart': function medicalCasesChart(tmpl, list) {\n      var order = ['date', 'deaths_expr', 'recovery_expr', 'cases_expr', 'alt_expr_1', '4th_expr', '5th_expr', 'alt_expr_2', 'col_1', 'col_1_change', 'show_col_1', 'col_2', 'col_2_change', 'show_col_2', 'divisor', 'numwidth', 'collabsible', 'collapsed', 'id'];\n      var obj = parse$3(tmpl); // parse each row template\n\n      var rows = obj.rows.match(/\\{\\{Medical cases chart\\/Row.*\\}\\}/gi);\n      obj.rows = rows.map(function (row) {\n        return parse$3(row, order);\n      });\n      list.push(obj);\n      return '';\n    },\n    'medical cases chart/row': function medicalCasesChartRow(tmpl) {\n      // actually keep this template\n      return tmpl;\n    }\n  };\n  var science = templates$a;\n\n  var sports = {\n    player: function player(tmpl, list) {\n      var res = parse$3(tmpl, ['number', 'country', 'name', 'dl']);\n      list.push(res);\n      var str = \"[[\".concat(res.name, \"]]\");\n\n      if (res.country) {\n        var country = (res.country || '').toLowerCase();\n        var flag = flags.find(function (a) {\n          return country === a[1] || country === a[2];\n        }) || [];\n\n        if (flag && flag[0]) {\n          str = flag[0] + '  ' + str;\n        }\n      }\n\n      if (res.number) {\n        str = res.number + ' ' + str;\n      }\n\n      return str;\n    },\n    //https://en.wikipedia.org/wiki/Template:Goal\n    goal: function goal(tmpl, list) {\n      var res = parse$3(tmpl);\n      var obj = {\n        template: 'goal',\n        data: []\n      };\n      var arr = res.list || [];\n\n      for (var i = 0; i < arr.length; i += 2) {\n        obj.data.push({\n          min: arr[i],\n          note: arr[i + 1] || ''\n        });\n      }\n\n      list.push(obj); //generate a little text summary\n\n      var summary = '⚽ ';\n      summary += obj.data.map(function (o) {\n        var note = o.note;\n\n        if (note) {\n          note = \" (\".concat(note, \")\");\n        }\n\n        return o.min + \"'\" + note;\n      }).join(', ');\n      return summary;\n    },\n    //yellow card\n    yel: function yel(tmpl, list) {\n      var obj = parse$3(tmpl, ['min']);\n      list.push(obj);\n\n      if (obj.min) {\n        return \"yellow: \".concat(obj.min || '', \"'\"); //no yellow-card emoji\n      }\n\n      return '';\n    },\n    subon: function subon(tmpl, list) {\n      var obj = parse$3(tmpl, ['min']);\n      list.push(obj);\n\n      if (obj.min) {\n        return \"sub on: \".concat(obj.min || '', \"'\"); //no yellow-card emoji\n      }\n\n      return '';\n    },\n    suboff: function suboff(tmpl, list) {\n      var obj = parse$3(tmpl, ['min']);\n      list.push(obj);\n\n      if (obj.min) {\n        return \"sub off: \".concat(obj.min || '', \"'\"); //no yellow-card emoji\n      }\n\n      return '';\n    },\n    pengoal: function pengoal(tmpl, list) {\n      list.push({\n        template: 'pengoal'\n      });\n      return '✅';\n    },\n    penmiss: function penmiss(tmpl, list) {\n      list.push({\n        template: 'penmiss'\n      });\n      return '❌';\n    },\n    //'red' card - {{sent off|cards|min1|min2}}\n    'sent off': function sentOff(tmpl, list) {\n      var obj = parse$3(tmpl, ['cards']);\n      var result = {\n        template: 'sent off',\n        cards: obj.cards,\n        minutes: obj.list || []\n      };\n      list.push(result);\n      var mins = result.minutes.map(function (m) {\n        return m + \"'\";\n      }).join(', ');\n      return 'sent off: ' + mins;\n    }\n  };\n  var soccer = sports;\n\n  var misc$3 = {\n    'baseball secondary style': 0,\n    mlbplayer: function mlbplayer(tmpl, list) {\n      var obj = parse$3(tmpl, ['number', 'name', 'dl']);\n      list.push(obj);\n      return obj.name;\n    }\n  };\n  var sports$1 = Object.assign({}, misc$3, brackets_1, soccer);\n\n  var codes$1 = {\n    adx: 'adx',\n    //https://en.wikipedia.org/wiki/Template:Abu_Dhabi_Securities_Exchange\n    aim: 'aim',\n    //https://en.wikipedia.org/wiki/Template:Alternative_Investment_Market\n    bvpasa: 'bvpasa',\n    //https://en.wikipedia.org/wiki/Template:BVPASA\n    asx: 'asx',\n    //https://en.wikipedia.org/wiki/Template:Australian_Securities_Exchange\n    athex: 'athex',\n    //https://en.wikipedia.org/wiki/Template:Athens_Exchange\n    bhse: 'bhse',\n    //https://en.wikipedia.org/wiki/Template:Bahrain_Bourse\n    bvb: 'bvb',\n    //https://en.wikipedia.org/wiki/Template:Bucharest_Stock_Exchange\n    bbv: 'bbv',\n    //https://en.wikipedia.org/wiki/Template:BBV\n    bsx: 'bsx',\n    //https://en.wikipedia.org/wiki/Template:Bermuda_Stock_Exchange\n    b3: 'b3',\n    //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n    'bm&f': 'b3',\n    //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n    'bm&f bovespa': 'b3',\n    //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n    bwse: 'bwse',\n    //https://en.wikipedia.org/wiki/Template:Botswana_Stock_Exchange\n    'botswana stock exchange': 'botswana stock exchange',\n    //https://en.wikipedia.org/wiki/Template:BM%26F_Bovespa\n    bse: 'bse',\n    //https://en.wikipedia.org/wiki/Template:Bombay_Stock_Exchange\n    'bombay stock exchange': 'bombay stock exchange',\n    //https://en.wikipedia.org/wiki/Template:Bombay_Stock_Exchange\n    bpse: 'bpse',\n    //https://en.wikipedia.org/wiki/Template:Budapest_Stock_Exchange\n    bcba: 'bcba',\n    //https://en.wikipedia.org/wiki/Template:Buenos_Aires_Stock_Exchange\n    'canadian securities exchange': 'canadian securities exchange',\n    //https://en.wikipedia.org/wiki/Template:Canadian_Securities_Exchange\n    bvc: 'bvc',\n    //https://en.wikipedia.org/wiki/Template:Colombian_Securities_Exchange\n    cse: 'cse',\n    //https://en.wikipedia.org/wiki/Template:Chittagong_Stock_Exchange\n    darse: 'darse',\n    //https://en.wikipedia.org/wiki/Template:Dar_es_Salaam_Stock_Exchange\n    dse: 'dse',\n    //https://en.wikipedia.org/wiki/Template:Dhaka_Stock_Exchange\n    dfm: 'dfm',\n    //https://en.wikipedia.org/wiki/Template:Dubai_Financial_Market\n    euronext: 'euronext',\n    //https://en.wikipedia.org/wiki/Template:Euronext\n    fwb: 'fwb',\n    //https://en.wikipedia.org/wiki/Template:Frankfurt_Stock_Exchange\n    fse: 'fse',\n    //https://en.wikipedia.org/wiki/Template:Fukuoka_Stock_Exchange\n    gse: 'gse',\n    //https://en.wikipedia.org/wiki/Template:Ghana_Stock_Exchange\n    gtsm: 'gtsm',\n    //https://en.wikipedia.org/wiki/Template:Gre_Tai_Securities_Market\n    sehk: 'sehk',\n    //https://en.wikipedia.org/wiki/Template:Hong_Kong_Stock_Exchange\n    idx: 'idx',\n    //https://en.wikipedia.org/wiki/Template:Indonesia_Stock_Exchange\n    nse: 'nse',\n    //https://en.wikipedia.org/wiki/Template:National_Stock_Exchange_of_India\n    ise: 'ise',\n    //https://en.wikipedia.org/wiki/Template:Irish_Stock_Exchange\n    isin: 'isin',\n    //https://en.wikipedia.org/wiki/Template:ISIN\n    bist: 'bist',\n    //https://en.wikipedia.org/wiki/Template:Borsa_Istanbul\n    bit: 'bit',\n    //https://en.wikipedia.org/wiki/Template:Borsa_Italiana\n    jasdaq: 'jasdaq',\n    //https://en.wikipedia.org/wiki/Template:JASDAQ\n    jse: 'jse',\n    //https://en.wikipedia.org/wiki/Template:Johannesburg_Stock_Exchange\n    kase: 'kase',\n    //https://en.wikipedia.org/wiki/Template:Kazakhstan_Stock_Exchange\n    krx: 'krx',\n    //https://en.wikipedia.org/wiki/Template:Korea_Exchange\n    bvl: 'bvl',\n    //https://en.wikipedia.org/wiki/Template:Lima_Stock_Exchange\n    lse: 'lse',\n    //https://en.wikipedia.org/wiki/Template:London_Stock_Exchange\n    luxse: 'luxse',\n    //https://en.wikipedia.org/wiki/Template:Luxembourg_Stock_Exchange\n    bmad: 'bmad',\n    //https://en.wikipedia.org/wiki/Template:Bolsa_de_Madrid\n    myx: 'myx',\n    //https://en.wikipedia.org/wiki/Template:Bursa_Malaysia\n    bmv: 'bmv',\n    //https://en.wikipedia.org/wiki/Template:Mexican_Stock_Exchange\n    mcx: 'mcx',\n    //https://en.wikipedia.org/wiki/Template:Moscow_Exchange\n    mutf: 'mutf',\n    //https://en.wikipedia.org/wiki/Template:Mutual_fund\n    nag: 'nag',\n    //https://en.wikipedia.org/wiki/Template:Nagoya_Stock_Exchange\n    kn: 'kn',\n    //https://en.wikipedia.org/wiki/Template:Nairobi_Securities_Exchange\n    'nasdaq dubai': 'nasdaq dubai',\n    //https://en.wikipedia.org/wiki/Template:NASDAQ_Dubai\n    nasdaq: 'nasdaq',\n    //https://en.wikipedia.org/wiki/Template:NASDAQ\n    neeq: 'neeq',\n    //https://en.wikipedia.org/wiki/Template:NEEQ\n    nepse: 'nepse',\n    //https://en.wikipedia.org/wiki/Template:Nepal_Stock_Exchange\n    nyse: 'nyse',\n    //https://en.wikipedia.org/wiki/Template:New_York_Stock_Exchange\n    nzx: 'nzx',\n    //https://en.wikipedia.org/wiki/Template:New_Zealand_Exchange\n    amex: 'amex',\n    //https://en.wikipedia.org/wiki/Template:NYSE_American\n    'nyse arca': 'nyse arca',\n    //https://en.wikipedia.org/wiki/Template:NYSE_Arca\n    omx: 'omx',\n    //https://en.wikipedia.org/wiki/Template:OMX\n    'omx baltic': 'omx baltic',\n    //https://en.wikipedia.org/wiki/Template:OMX_Baltic\n    ose: 'ose',\n    //https://en.wikipedia.org/wiki/Template:Oslo_Stock_Exchange\n    'otc pink': 'otc pink',\n    //https://en.wikipedia.org/wiki/Template:OTC_Pink\n    otcqb: 'otcqb',\n    //https://en.wikipedia.org/wiki/Template:OTCQB\n    otcqx: 'otcqx',\n    //https://en.wikipedia.org/wiki/Template:OTCQX\n    'philippine stock exchange': 'philippine stock exchange',\n    //https://en.wikipedia.org/wiki/Template:Philippine_Stock_Exchange\n    prse: 'prse',\n    //https://en.wikipedia.org/wiki/Template:Prague_Stock_Exchange\n    qe: 'qe',\n    //https://en.wikipedia.org/wiki/Template:Qatar_Stock_Exchange\n    bcs: 'bcs',\n    //https://en.wikipedia.org/wiki/Template:Santiago_Stock_Exchange\n    'saudi stock exchange': 'saudi stock exchange',\n    //https://en.wikipedia.org/wiki/Template:Saudi_Stock_Exchange\n    sgx: 'sgx',\n    //https://en.wikipedia.org/wiki/Template:Singapore_Exchange\n    sse: 'sse',\n    //https://en.wikipedia.org/wiki/Template:Shanghai_Stock_Exchange\n    szse: 'szse',\n    //https://en.wikipedia.org/wiki/Template:Shenzhen_Stock_Exchange\n    swx: 'swx',\n    //https://en.wikipedia.org/wiki/Template:SIX_Swiss_Exchange\n    set: 'set',\n    //https://en.wikipedia.org/wiki/Template:Stock_Exchange_of_Thailand\n    tase: 'tase',\n    //https://en.wikipedia.org/wiki/Template:Tel_Aviv_Stock_Exchange\n    tyo: 'tyo',\n    //https://en.wikipedia.org/wiki/Template:Tokyo_Stock_Exchange\n    tsx: 'tsx',\n    //https://en.wikipedia.org/wiki/Template:Toronto_Stock_Exchange\n    twse: 'twse',\n    //https://en.wikipedia.org/wiki/Template:Taiwan_Stock_Exchange\n    'tsx-v': 'tsx-v',\n    //https://en.wikipedia.org/wiki/Template:TSX_Venture_Exchange\n    tsxv: 'tsxv',\n    //https://en.wikipedia.org/wiki/Template:TSX_Venture_Exchange\n    nex: 'nex',\n    //https://en.wikipedia.org/wiki/Template:TSXV_NEX\n    ttse: 'ttse',\n    //https://en.wikipedia.org/wiki/Template:Trinidad_and_Tobago_Stock_Exchange\n    'pfts ukraine stock exchange': 'pfts ukraine stock exchange',\n    //https://en.wikipedia.org/wiki/Template:PFTS_Ukraine_Stock_Exchange\n    wse: 'wse',\n    //https://en.wikipedia.org/wiki/Template:Warsaw_Stock_Exchange\n    wbag: 'wbag',\n    //https://en.wikipedia.org/wiki/Template:Wiener_B%C3%B6rse\n    zse: 'zse',\n    //https://en.wikipedia.org/wiki/Template:Zagreb_Stock_Exchange\n    'zagreb stock exchange': 'zagreb stock exchange',\n    //https://en.wikipedia.org/wiki/Template:Zagreb_Stock_Exchange\n    'zimbabwe stock exchange': 'zimbabwe stock exchange' //https://en.wikipedia.org/wiki/Template:Zimbabwe_Stock_Exchange\n\n  };\n\n  var parseStockExchange = function parseStockExchange(tmpl, list) {\n    var o = parse$3(tmpl, ['ticketnumber', 'code']);\n    list.push(o);\n    var code = o.template || '';\n\n    if (code === '') {\n      code = o.code;\n    }\n\n    code = (code || '').toLowerCase();\n    var out = codes$1[code] || '';\n    var str = out;\n\n    if (o.ticketnumber) {\n      str = \"\".concat(str, \": \").concat(o.ticketnumber);\n    }\n\n    if (o.code && !codes$1[o.code.toLowerCase()]) {\n      str += ' ' + o.code;\n    }\n\n    return str;\n  };\n\n  var currencies$1 = {}; //the others fit the same pattern..\n\n  Object.keys(codes$1).forEach(function (k) {\n    currencies$1[k] = parseStockExchange;\n  });\n  var stockExchanges = currencies$1;\n\n  var hasMonth = /^jan /i;\n  var isYear = /^year /i;\n  var monthList = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\n\n  var toNumber = function toNumber(str) {\n    str = str.replace(/,/g, '');\n    str = str.replace(/−/g, '-');\n    var num = Number(str);\n\n    if (isNaN(num)) {\n      return str;\n    }\n\n    return num;\n  };\n\n  var templates$b = {\n    // this one is a handful!\n    //https://en.wikipedia.org/wiki/Template:Weather_box\n    'weather box': function weatherBox(tmpl, list) {\n      var obj = parse$3(tmpl); //collect all month-based data\n\n      var byMonth = {};\n      var properties = Object.keys(obj).filter(function (k) {\n        return hasMonth.test(k);\n      });\n      properties = properties.map(function (k) {\n        return k.replace(hasMonth, '');\n      });\n      properties.forEach(function (prop) {\n        byMonth[prop] = [];\n        monthList.forEach(function (m) {\n          var key = \"\".concat(m, \" \").concat(prop);\n\n          if (obj.hasOwnProperty(key)) {\n            var num = toNumber(obj[key]);\n            delete obj[key];\n            byMonth[prop].push(num);\n          }\n        });\n      }); //add these to original\n\n      obj.byMonth = byMonth; //collect year-based data\n\n      var byYear = {};\n      Object.keys(obj).forEach(function (k) {\n        if (isYear.test(k)) {\n          var prop = k.replace(isYear, '');\n          byYear[prop] = obj[k];\n          delete obj[k];\n        }\n      });\n      obj.byYear = byYear;\n      list.push(obj);\n      return '';\n    },\n    //The 36 parameters are: 12 monthly highs (C), 12 lows (total 24) plus an optional 12 monthly rain/precipitation\n    //https://en.wikipedia.org/wiki/Template:Weather_box/concise_C\n    'weather box/concise c': function weatherBoxConciseC(tmpl, list) {\n      var obj = parse$3(tmpl);\n      obj.list = obj.list.map(function (s) {\n        return toNumber(s);\n      });\n      obj.byMonth = {\n        'high c': obj.list.slice(0, 12),\n        'low c': obj.list.slice(12, 24),\n        'rain mm': obj.list.slice(24, 36)\n      };\n      delete obj.list;\n      obj.template = 'weather box';\n      list.push(obj);\n      return '';\n    },\n    'weather box/concise f': function weatherBoxConciseF(tmpl, list) {\n      var obj = parse$3(tmpl);\n      obj.list = obj.list.map(function (s) {\n        return toNumber(s);\n      });\n      obj.byMonth = {\n        'high f': obj.list.slice(0, 12),\n        'low f': obj.list.slice(12, 24),\n        'rain inch': obj.list.slice(24, 36)\n      };\n      delete obj.list;\n      obj.template = 'weather box';\n      list.push(obj);\n      return '';\n    },\n    //https://en.wikipedia.org/wiki/Template:Climate_chart\n    'climate chart': function climateChart(tmpl, list) {\n      var lines = parse$3(tmpl).list || [];\n      var title = lines[0];\n      var source = lines[38];\n      lines = lines.slice(1); //amazingly, they use '−' symbol here instead of negatives...\n\n      lines = lines.map(function (str) {\n        if (str && str[0] === '−') {\n          str = str.replace(/−/, '-');\n        }\n\n        return str;\n      });\n      var months = []; //groups of three, for 12 months\n\n      for (var i = 0; i < 36; i += 3) {\n        months.push({\n          low: toNumber(lines[i]),\n          high: toNumber(lines[i + 1]),\n          precip: toNumber(lines[i + 2])\n        });\n      }\n\n      var obj = {\n        template: 'climate chart',\n        data: {\n          title: title,\n          source: source,\n          months: months\n        }\n      };\n      list.push(obj);\n      return '';\n    }\n  };\n  var weather = templates$b;\n\n  //this format seems to be a pattern for these\n  var generic$1 = ['id', 'title', 'description', 'section'];\n  var idName = ['id', 'name']; //https://en.wikipedia.org/wiki/Category:External_link_templates\n\n  var externals = {\n    //https://en.wikipedia.org/wiki/Template:IMDb_title\n    'imdb title': generic$1,\n    'imdb name': generic$1,\n    'imdb episode': generic$1,\n    'imdb event': generic$1,\n    'afi film': generic$1,\n    'allmovie title': generic$1,\n    allgame: generic$1,\n    'tcmdb title': generic$1,\n    'discogs artist': generic$1,\n    'discogs label': generic$1,\n    'discogs release': generic$1,\n    'discogs master': generic$1,\n    'librivox author': generic$1,\n    'musicbrainz artist': generic$1,\n    'musicbrainz label': generic$1,\n    'musicbrainz recording': generic$1,\n    'musicbrainz release': generic$1,\n    'musicbrainz work': generic$1,\n    youtube: generic$1,\n    'goodreads author': idName,\n    'goodreads book': generic$1,\n    twitter: idName,\n    facebook: idName,\n    instagram: idName,\n    tumblr: idName,\n    pinterest: idName,\n    'espn nfl': idName,\n    'espn nhl': idName,\n    'espn fc': idName,\n    hockeydb: idName,\n    'fifa player': idName,\n    worldcat: idName,\n    'worldcat id': idName,\n    'nfl player': idName,\n    'ted speaker': idName,\n    playmate: idName,\n    //https://en.wikipedia.org/wiki/Template:DMOZ\n    dmoz: generic$1,\n    'find a grave': ['id', 'name', 'work', 'last', 'first', 'date', 'accessdate'],\n    congbio: ['id', 'name', 'date'],\n    'hollywood walk of fame': ['name']\n  }; //alias\n\n  externals.imdb = externals['imdb name'];\n  externals['imdb episodess'] = externals['imdb episode'];\n  var websites = externals;\n\n  //wiktionary... who knows. we should atleast try.\n\n  var templates$c = {\n    //{{inflection of|avoir||3|p|pres|ind|lang=fr}}\n    //https://en.wiktionary.org/wiki/Template:inflection_of\n    inflection: function inflection(tmpl, list) {\n      var obj = parse$3(tmpl, ['lemma']);\n      obj.tags = obj.list;\n      delete obj.list;\n      obj.type = 'form-of';\n      list.push(obj);\n      return obj.lemma || '';\n    },\n    //latin verbs\n    'la-verb-form': function laVerbForm(tmpl, list) {\n      var obj = parse$3(tmpl, ['word']);\n      list.push(obj);\n      return obj.word || '';\n    },\n    'feminine plural': function femininePlural(tmpl, list) {\n      var obj = parse$3(tmpl, ['word']);\n      list.push(obj);\n      return obj.word || '';\n    },\n    'male plural': function malePlural(tmpl, list) {\n      var obj = parse$3(tmpl, ['word']);\n      list.push(obj);\n      return obj.word || '';\n    },\n    rhymes: function rhymes(tmpl, list) {\n      var obj = parse$3(tmpl, ['word']);\n      list.push(obj);\n      return 'Rhymes: -' + (obj.word || '');\n    }\n  }; //https://en.wiktionary.org/wiki/Category:Form-of_templates\n\n  var conjugations = ['abbreviation', 'abessive plural', 'abessive singular', 'accusative plural', 'accusative singular', 'accusative', 'acronym', 'active participle', 'agent noun', 'alternative case form', 'alternative form', 'alternative plural', 'alternative reconstruction', 'alternative spelling', 'alternative typography', 'aphetic form', 'apocopic form', 'archaic form', 'archaic spelling', 'aspirate mutation', 'associative plural', 'associative singular', 'attributive form', 'attributive form', 'augmentative', 'benefactive plural', 'benefactive singular', 'causative plural', 'causative singular', 'causative', 'clipping', 'combining form', 'comitative plural', 'comitative singular', 'comparative plural', 'comparative singular', 'comparative', 'contraction', 'dated form', 'dated spelling', 'dative plural definite', 'dative plural indefinite', 'dative plural', 'dative singular', 'dative', 'definite', 'deliberate misspelling', 'diminutive', 'distributive plural', 'distributive singular', 'dual', 'early form', 'eclipsis', 'elative', 'ellipsis', 'equative', 'euphemistic form', 'euphemistic spelling', 'exclusive plural', 'exclusive singular', 'eye dialect', 'feminine noun', 'feminine plural past participle', 'feminine plural', 'feminine singular past participle', 'feminine singular', 'feminine', 'form', 'former name', 'frequentative', 'future participle', 'genitive plural definite', 'genitive plural indefinite', 'genitive plural', 'genitive singular definite', 'genitive singular indefinite', 'genitive singular', 'genitive', 'gerund', 'h-prothesis', 'hard mutation', 'harmonic variant', 'imperative', 'imperfective form', 'inflected form', 'inflection', 'informal form', 'informal spelling', 'initialism', 'ja-form', 'jyutping reading', 'late form', 'lenition', 'masculine plural past participle', 'masculine plural', 'medieval spelling', 'misconstruction', 'misromanization', 'misspelling', 'mixed mutation', 'monotonic form', 'mutation', 'nasal mutation', 'negative', 'neuter plural past participle', 'neuter plural', 'neuter singular past participle', 'neuter singular', 'nominalization', 'nominative plural', 'nominative singular', 'nonstandard form', 'nonstandard spelling', 'oblique plural', 'oblique singular', 'obsolete form', 'obsolete spelling', 'obsolete typography', 'official form', 'participle', 'passive participle', 'passive', 'past active participle', 'past participle', 'past passive participle', 'past tense', 'perfective form', 'plural definite', 'plural indefinite', 'plural', 'polytonic form', 'present active participle', 'present participle', 'present tense', 'pronunciation spelling', 'rare form', 'rare spelling', 'reflexive', 'second-person singular past', 'short for', 'singular definite', 'singular', 'singulative', 'soft mutation', 'spelling', 'standard form', 'standard spelling', 'substantivisation', 'superlative', 'superseded spelling', 'supine', 'syncopic form', 'synonym', 'terminative plural', 'terminative singular', 'uncommon form', 'uncommon spelling', 'verbal noun', 'vocative plural', 'vocative singular'];\n  conjugations.forEach(function (name) {\n    templates$c[name + ' of'] = function (tmpl, list) {\n      var obj = parse$3(tmpl, ['lemma']);\n      obj.tags = obj.list;\n      delete obj.list;\n      obj.type = 'form-of';\n      list.push(obj);\n      return obj.lemma || '';\n    };\n  });\n  var wiktionary = templates$c;\n\n  var templates$d = Object.assign({}, dates, formatting$1, geo, wikipedia, brackets_1, currency, elections, flags_1, ipa, languages_1, math, misc_1$1, punctuation_1, science, soccer, sports$1, stockExchanges, weather, websites, wiktionary);\n\n  var generic$2 = parse$3;\n  var nums = ['0', '1', '2', '3', '4', '5', '6', '7', '8'];\n\n  var isArray$2 = function isArray(arr) {\n    return Object.prototype.toString.call(arr) === '[object Array]';\n  }; //this gets all the {{template}} strings and decides how to parse them\n\n\n  var parseTemplate$1 = function parseTemplate(tmpl, list) {\n    var name = tmpl.name;\n\n    if (_ignore.hasOwnProperty(name) === true) {\n      return '';\n    } // {{infobox settlement...}}\n\n\n    if (_infobox.isInfobox(name) === true) {\n      var obj = parse$3(tmpl.body, list, 'raw');\n      var infobox = _infobox.format(obj);\n      list.push(infobox);\n      return '';\n    } // //cite book, cite arxiv...\n\n\n    if (/^cite [a-z]/.test(name) === true) {\n      var _obj = parse$3(tmpl.body, list);\n\n      _obj.type = _obj.template;\n      _obj.template = 'citation';\n      list.push(_obj);\n      return '';\n    } // known template\n\n\n    if (templates$d.hasOwnProperty(name) === true) {\n      // handle number-syntax\n      if (typeof templates$d[name] === 'number') {\n        var _obj2 = generic$2(tmpl.body, nums);\n\n        var key = String(templates$d[name]);\n        return _obj2[key] || '';\n      } // handle string-syntax\n\n\n      if (typeof templates$d[name] === 'string') {\n        return templates$d[name];\n      } // handle array sytax\n\n\n      if (isArray$2(templates$d[name]) === true) {\n        var _obj3 = generic$2(tmpl.body, templates$d[name]);\n\n        list.push(_obj3);\n        return '';\n      } // handle function syntax\n\n\n      if (typeof templates$d[name] === 'function') {\n        return templates$d[name](tmpl.body, list);\n      }\n    } // unknown template, try to parse it\n\n\n    var parsed = parse$3(tmpl.body);\n\n    if (list && Object.keys(parsed).length > 0) {\n      list.push(parsed);\n    } // ..then remove it\n\n\n    return '';\n  };\n\n  var parse_1 = parseTemplate$1;\n\n  var Template = function Template(data) {\n    Object.defineProperty(this, 'data', {\n      enumerable: false,\n      value: data\n    });\n  };\n\n  var methods$a = {\n    text: function text() {\n      return '';\n    },\n    json: function json() {\n      return this.data;\n    }\n  };\n  Object.keys(methods$a).forEach(function (k) {\n    Template.prototype[k] = methods$a[k];\n  });\n  var Template_1 = Template;\n\n  var isCitation = new RegExp('^(cite |citation)', 'i');\n  var references$1 = {\n    citation: true,\n    refn: true,\n    harvnb: true\n  };\n\n  var isReference = function isReference(obj) {\n    return references$1[obj.template] === true || isCitation.test(obj.template) === true;\n  };\n\n  var isObject = function isObject(obj) {\n    return obj && Object.prototype.toString.call(obj) === '[object Object]';\n  };\n\n  var isInfobox$1 = function isInfobox(obj) {\n    return obj.template === 'infobox' && obj.data && isObject(obj.data);\n  }; //reduce the scary recursive situations\n\n\n  var allTemplates = function allTemplates(section) {\n    var wiki = section.wiki; // nested data-structure of templates\n\n    var list = find(wiki);\n    var keep = []; // recursive template-parser\n\n    var parseThem = function parseThem(obj, parent) {\n      obj.parent = parent; // do tail-first recurion\n\n      if (obj.children && obj.children.length > 0) {\n        obj.children.forEach(function (ch) {\n          return parseThem(ch, obj);\n        });\n      }\n\n      obj.out = parse_1(obj, keep); // remove the text from every parent\n\n      var removeIt = function removeIt(node, body, out) {\n        if (node.parent) {\n          node.parent.body = node.parent.body.replace(body, out);\n          removeIt(node.parent, body, out);\n        }\n      };\n\n      removeIt(obj, obj.body, obj.out);\n      wiki = wiki.replace(obj.body, obj.out);\n    }; //kick it off\n\n\n    list.forEach(function (node) {\n      return parseThem(node, null);\n    }); // sort-out the templates we decide to keep\n\n    section.infoboxes = section.infoboxes || [];\n    section.references = section.references || [];\n    section.templates = section.templates || [];\n    section.templates = section.templates.concat(keep); // remove references and infoboxes from our list\n\n    section.templates = section.templates.filter(function (obj) {\n      if (isReference(obj) === true) {\n        section.references.push(new Reference_1(obj));\n        return false;\n      }\n\n      if (isInfobox$1(obj) === true) {\n        section.infoboxes.push(new Infobox_1(obj));\n        return false;\n      }\n\n      return true;\n    });\n    section.templates = section.templates.map(function (obj) {\n      return new Template_1(obj);\n    }); // remove the templates from our wiki text\n\n    list.forEach(function (node) {\n      wiki = wiki.replace(node.body, node.out);\n    });\n    section.wiki = wiki;\n  };\n\n  var template$1 = allTemplates;\n\n  var parseSentence$6 = _04Sentence.fromText; //okay, <gallery> is a xml-tag, with newline-seperated data, somehow pivoted by '|'...\n  //all deities help us. truly -> https://en.wikipedia.org/wiki/Help:Gallery_tag\n  // - not to be confused with https://en.wikipedia.org/wiki/Template:Gallery...\n\n  var parseGallery = function parseGallery(section) {\n    var wiki = section.wiki;\n    wiki = wiki.replace(/<gallery([^>]*?)>([\\s\\S]+?)<\\/gallery>/g, function (_, attrs, inside) {\n      var images = inside.split(/\\n/g);\n      images = images.filter(function (str) {\n        return str && str.trim() !== '';\n      }); //parse the line, which has an image and sometimes a caption\n\n      images = images.map(function (str) {\n        var arr = str.split(/\\|/);\n        var obj = {\n          file: arr[0].trim()\n        };\n        var img = new Image_1(obj).json();\n        var caption = arr.slice(1).join('|');\n\n        if (caption !== '') {\n          img.caption = parseSentence$6(caption);\n        }\n\n        return img;\n      }); //add it to our templates list\n\n      if (images.length > 0) {\n        section.templates.push({\n          template: 'gallery',\n          images: images,\n          pos: section.title\n        });\n      }\n\n      return '';\n    });\n    section.wiki = wiki;\n  };\n\n  var gallery = parseGallery;\n\n  //https://en.wikipedia.org/wiki/Template:Election_box\n\n  var parseElection = function parseElection(section) {\n    var wiki = section.wiki;\n    wiki = wiki.replace(/\\{\\{election box begin([\\s\\S]+?)\\{\\{election box end\\}\\}/gi, function (tmpl) {\n      var data = {\n        wiki: tmpl,\n        templates: []\n      }; //put it through our full template parser..\n\n      template$1(data); //okay, pull it apart into something sensible..\n\n      var templates = data.templates.map(function (t) {\n        return t.json();\n      });\n      var start = templates.find(function (t) {\n        return t.template === 'election box';\n      }) || {};\n      var candidates = templates.filter(function (t) {\n        return t.template === 'election box candidate';\n      });\n      var summary = templates.find(function (t) {\n        return t.template === 'election box gain' || t.template === 'election box hold';\n      }) || {};\n\n      if (candidates.length > 0 || summary) {\n        section.templates.push({\n          template: 'election box',\n          title: start.title,\n          candidates: candidates,\n          summary: summary.data\n        });\n      } //remove it all\n\n\n      return '';\n    });\n    section.wiki = wiki;\n  };\n\n  var election = parseElection;\n\n  var keys = {\n    coach: ['team', 'year', 'g', 'w', 'l', 'w-l%', 'finish', 'pg', 'pw', 'pl', 'pw-l%'],\n    player: ['year', 'team', 'gp', 'gs', 'mpg', 'fg%', '3p%', 'ft%', 'rpg', 'apg', 'spg', 'bpg', 'ppg'],\n    roster: ['player', 'gp', 'gs', 'mpg', 'fg%', '3fg%', 'ft%', 'rpg', 'apg', 'spg', 'bpg', 'ppg']\n  }; //https://en.wikipedia.org/wiki/Template:NBA_player_statistics_start\n\n  var parseNBA = function parseNBA(section) {\n    var wiki = section.wiki;\n    wiki = wiki.replace(/\\{\\{nba (coach|player|roster) statistics start([\\s\\S]+?)\\{\\{s-end\\}\\}/gi, function (tmpl, name) {\n      tmpl = tmpl.replace(/^\\{\\{.*?\\}\\}/, '');\n      tmpl = tmpl.replace(/\\{\\{s-end\\}\\}/, '');\n      name = name.toLowerCase().trim();\n      var headers = '! ' + keys[name].join(' !! ');\n      var table = '{|\\n' + headers + '\\n' + tmpl + '\\n|}';\n      var rows = parse$4(table);\n      rows = rows.map(function (row) {\n        Object.keys(row).forEach(function (k) {\n          row[k] = row[k].text();\n        });\n        return row;\n      });\n      section.templates.push({\n        template: 'NBA ' + name + ' statistics',\n        data: rows\n      });\n      return '';\n    });\n    section.wiki = wiki;\n  };\n\n  var nba = parseNBA;\n\n  //this is pretty nuts\n\n  var whichHeadings = function whichHeadings(tmpl) {\n    var headings = ['#', 'date', 'opponent', 'score', 'win', 'loss', 'save', 'attendance', 'record'];\n\n    if (/\\|stadium=y/i.test(tmpl) === true) {\n      headings.splice(7, 0, 'stadium'); //save, stadium, attendance\n    }\n\n    if (/\\|time=y/i.test(tmpl) === true) {\n      headings.splice(7, 0, 'time'); //save, time, stadium, attendance\n    }\n\n    if (/\\|box=y/i.test(tmpl) === true) {\n      headings.push('box'); //record, box\n    }\n\n    return headings;\n  };\n\n  var parseMlb = function parseMlb(section) {\n    var wiki = section.wiki;\n    wiki = wiki.replace(/\\{\\{mlb game log (section|month)[\\s\\S]+?\\{\\{mlb game log (section|month) end\\}\\}/gi, function (tmpl) {\n      var headings = whichHeadings(tmpl);\n      tmpl = tmpl.replace(/^\\{\\{.*?\\}\\}/, '');\n      tmpl = tmpl.replace(/\\{\\{mlb game log (section|month) end\\}\\}/i, '');\n      var headers = '! ' + headings.join(' !! ');\n      var table = '{|\\n' + headers + '\\n' + tmpl + '\\n|}';\n      var rows = parse$4(table);\n      rows = rows.map(function (row) {\n        Object.keys(row).forEach(function (k) {\n          row[k] = row[k].text();\n        });\n        return row;\n      });\n      section.templates.push({\n        template: 'mlb game log section',\n        data: rows\n      });\n      return '';\n    });\n    section.wiki = wiki;\n  };\n\n  var mlb = parseMlb;\n\n  var headings$1 = ['res', 'record', 'opponent', 'method', 'event', 'date', 'round', 'time', 'location', 'notes']; //https://en.wikipedia.org/wiki/Template:MMA_record_start\n\n  var parseMMA = function parseMMA(section) {\n    var wiki = section.wiki;\n    wiki = wiki.replace(/\\{\\{mma record start[\\s\\S]+?\\{\\{end\\}\\}/gi, function (tmpl) {\n      tmpl = tmpl.replace(/^\\{\\{.*?\\}\\}/, '');\n      tmpl = tmpl.replace(/\\{\\{end\\}\\}/i, '');\n      var headers = '! ' + headings$1.join(' !! ');\n      var table = '{|\\n' + headers + '\\n' + tmpl + '\\n|}';\n      var rows = parse$4(table);\n      rows = rows.map(function (row) {\n        Object.keys(row).forEach(function (k) {\n          row[k] = row[k].text();\n        });\n        return row;\n      });\n      section.templates.push({\n        template: 'mma record start',\n        data: rows\n      });\n      return '';\n    });\n    section.wiki = wiki;\n  };\n\n  var mma = parseMMA;\n\n  var parseSentence$7 = _04Sentence.fromText; //xml <math>y=mx+b</math> support\n  //https://en.wikipedia.org/wiki/Help:Displaying_a_formula\n\n  var parseMath = function parseMath(section) {\n    var wiki = section.wiki;\n    wiki = wiki.replace(/<math([^>]*?)>([\\s\\S]+?)<\\/math>/g, function (_, attrs, inside) {\n      //clean it up a little?\n      var formula = parseSentence$7(inside).text();\n      section.templates.push({\n        template: 'math',\n        formula: formula,\n        raw: inside\n      }); //should we atleast try to render it in plaintext? :/\n\n      if (formula && formula.length < 12) {\n        return formula;\n      }\n\n      return '';\n    }); //try chemistry version too\n\n    wiki = wiki.replace(/<chem([^>]*?)>([\\s\\S]+?)<\\/chem>/g, function (_, attrs, inside) {\n      section.templates.push({\n        template: 'chem',\n        data: inside\n      });\n      return '';\n    });\n    section.wiki = wiki;\n  };\n\n  var math$1 = parseMath;\n\n  // ... others are {{start}}...{{end}}\n  // -> these are those ones.\n\n  var xmlTemplates = function xmlTemplates(section) {\n    election(section);\n    gallery(section);\n    math$1(section);\n    mlb(section);\n    mma(section);\n    nba(section);\n  };\n\n  var startToEnd = xmlTemplates;\n\n  var isReference$1 = new RegExp('^(' + i18n$1.references.join('|') + '):?', 'i');\n  var section_reg = /(?:\\n|^)(={2,5}.{1,200}?={2,5})/g; //interpret ==heading== lines\n\n  var parse$6 = {\n    heading: heading,\n    table: table,\n    paragraphs: _03Paragraph,\n    templates: template$1,\n    references: reference,\n    startEndTemplates: startToEnd\n  };\n\n  var oneSection = function oneSection(section, doc) {\n    parse$6.startEndTemplates(section); //parse-out the <ref></ref> tags\n\n    parse$6.references(section); //parse-out all {{templates}}\n\n    parse$6.templates(section); // //parse the tables\n\n    parse$6.table(section); //now parse all double-newlines\n\n    parse$6.paragraphs(section, doc);\n    section = new Section_1(section);\n    return section;\n  };\n\n  var removeReferenceSection = function removeReferenceSection(sections) {\n    return sections.filter(function (s, i) {\n      if (isReference$1.test(s.title()) === true) {\n        if (s.paragraphs().length > 0) {\n          return true;\n        } //does it have some wacky templates?\n\n\n        if (s.templates().length > 0) {\n          return true;\n        } //what it has children? awkward\n\n\n        if (sections[i + 1] && sections[i + 1].depth > s.depth) {\n          sections[i + 1].depth -= 1; //move it up a level?...\n        }\n\n        return false;\n      }\n\n      return true;\n    });\n  };\n\n  var parseSections = function parseSections(doc) {\n    var sections = [];\n    var split = doc.wiki.split(section_reg);\n\n    for (var i = 0; i < split.length; i += 2) {\n      var heading = split[i - 1] || '';\n      var wiki = split[i] || '';\n\n      if (wiki === '' && heading === '') {\n        //usually an empty 'intro' section\n        continue;\n      }\n\n      var section = {\n        title: '',\n        depth: null,\n        wiki: wiki,\n        templates: [],\n        tables: [],\n        infoboxes: [],\n        references: []\n      }; //figure-out title/depth\n\n      parse$6.heading(section, heading); //parse it up\n\n      var s = oneSection(section, doc);\n      sections.push(s);\n    } //remove empty references section\n\n\n    doc.sections = removeReferenceSection(sections);\n  };\n\n  var _02Section = parseSections;\n\n  var cat_reg = new RegExp('\\\\[\\\\[:?(' + i18n$1.categories.join('|') + '):(.{2,178}?)]](w{0,10})', 'ig');\n  var cat_remove_reg = new RegExp('^\\\\[\\\\[:?(' + i18n$1.categories.join('|') + '):', 'ig');\n\n  var parse_categories = function parse_categories(doc) {\n    var wiki = doc.wiki;\n    var tmp = wiki.match(cat_reg); //regular links\n\n    if (tmp) {\n      tmp.forEach(function (c) {\n        c = c.replace(cat_remove_reg, '');\n        c = c.replace(/\\|?[ \\*]?\\]\\]$/i, ''); //parse fancy onces..\n\n        c = c.replace(/\\|.*/, ''); //everything after the '|' is metadata\n\n        if (c && !c.match(/[\\[\\]]/)) {\n          doc.categories.push(c.trim());\n        }\n      });\n    }\n\n    wiki = wiki.replace(cat_reg, '');\n    doc.wiki = wiki;\n  };\n\n  var categories$1 = parse_categories;\n\n  var parse$7 = {\n    section: _02Section,\n    categories: categories$1\n  }; //convert wikiscript markup lang to json\n\n  var main = function main(wiki, options) {\n    options = options || {};\n    var data = Object.assign(options, {\n      title: options.title || null,\n      pageID: options.pageID || options.id || null,\n      namespace: options.namespace || options.ns || null,\n      type: 'page',\n      wiki: wiki || '',\n      categories: [],\n      sections: [],\n      coordinates: []\n    }); //detect if page is just redirect, and return it\n\n    if (redirects$1.isRedirect(wiki) === true) {\n      data.type = 'redirect';\n      data.redirectTo = redirects$1.parse(wiki);\n      parse$7.categories(data);\n      return new Document_1(data);\n    } //give ourselves a little head-start\n\n\n    preProcess_1(data); //pull-out [[category:whatevers]]\n\n    parse$7.categories(data); //parse all the headings, and their texts/sentences\n\n    parse$7.section(data); //all together now\n\n    return new Document_1(data);\n  };\n\n  var _01Document = main;\n\n  var parseDoc = function parseDoc(res) {\n    res = res.filter(function (o) {\n      return o;\n    });\n    var docs = res.map(function (o) {\n      return _01Document(o.wiki, o.meta);\n    });\n\n    if (docs.length === 0) {\n      return null;\n    }\n\n    if (docs.length === 1) {\n      return docs[0];\n    }\n\n    return docs;\n  };\n\n  var _03ParseDoc = parseDoc;\n\n  // use the native client-side fetch function\n  var request = function request(url, opts) {\n    //eslint-disable-next-line\n    return fetch(url, opts).then(function (res) {\n      return res.json();\n    });\n  };\n\n  var client = request;\n\n  var makeHeaders = function makeHeaders(options) {\n    var agent = options.userAgent || options['User-Agent'] || options['Api-User-Agent'] || 'User of the wtf_wikipedia library';\n    var opts = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Api-User-Agent': agent,\n        'User-Agent': agent,\n        Origin: '*'\n      },\n      redirect: 'follow'\n    };\n    return opts;\n  };\n\n  var _headers = makeHeaders;\n\n  var isUrl = /^https?:\\/\\//;\n  var defaults$c = {\n    lang: 'en',\n    wiki: 'wikipedia',\n    domain: null,\n    follow_redirects: true,\n    path: 'api.php' //some 3rd party sites use a weird path\n\n  };\n\n  var fetch$1 = function fetch(title, options, c) {\n    var callback = null;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    if (typeof c === 'function') {\n      callback = c;\n      c = {};\n    } //support lang 2nd param\n\n\n    if (typeof options === 'string') {\n      c = c || {};\n      options = Object.assign({}, {\n        lang: options\n      }, c);\n    }\n\n    options = options || {};\n    options = Object.assign({}, defaults$c, options);\n    options.title = title; // parse url input\n\n    if (isUrl.test(title)) {\n      options = Object.assign(options, _00ParseUrl(title));\n    }\n\n    var url = _01MakeUrl(options);\n    var headers = _headers(options);\n    return client(url, headers).then(function (res) {\n      try {\n        var data = _02GetResult(res, options);\n        data = _03ParseDoc(data);\n\n        if (callback) {\n          callback(null, data);\n        }\n\n        return data;\n      } catch (e) {\n        throw e;\n      }\n    })[\"catch\"](function (e) {\n      console.error(e);\n\n      if (callback) {\n        callback(e, null);\n      }\n\n      return null;\n    });\n  };\n\n  var _fetch = fetch$1;\n\n  var defaults$d = {\n    lang: 'en',\n    wiki: 'wikipedia',\n    domain: null,\n    path: 'w/api.php' //some 3rd party sites use a weird path\n\n  };\n\n  var isObject$1 = function isObject(obj) {\n    return obj && Object.prototype.toString.call(obj) === '[object Object]';\n  };\n\n  var fetchRandom = function fetchRandom(lang, options) {\n    options = options || {};\n    options = Object.assign({}, defaults$d, options); //support lang 2nd param\n\n    if (typeof lang === 'string') {\n      options.lang = lang;\n    } else if (isObject$1(lang)) {\n      options = Object.assign(options, lang);\n    }\n\n    var url = \"https://\".concat(options.lang, \".wikipedia.org/\").concat(options.path, \"?\");\n\n    if (options.domain) {\n      url = \"https://\".concat(options.domain, \"/\").concat(options.path, \"?\");\n    }\n\n    url += \"format=json&action=query&generator=random&grnnamespace=0&prop=revisions&rvprop=content&grnlimit=1&rvslots=main&origin=*\";\n    var headers = _headers(options);\n    return client(url, headers).then(function (res) {\n      try {\n        var data = _02GetResult(res);\n        return _03ParseDoc(data);\n      } catch (e) {\n        throw e;\n      }\n    })[\"catch\"](function (e) {\n      console.error(e);\n      return null;\n    });\n  };\n\n  var random = fetchRandom;\n\n  var defaults$e = {\n    lang: 'en',\n    wiki: 'wikipedia',\n    domain: null,\n    path: 'w/api.php' //some 3rd party sites use a weird path\n\n  };\n\n  var normalizeCategory = function normalizeCategory() {\n    var cat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    if (/^Category/i.test(cat) === false) {\n      cat = 'Category:' + cat;\n    }\n\n    cat = cat.replace(/ /g, '_');\n    return cat;\n  };\n\n  var isObject$2 = function isObject(obj) {\n    return obj && Object.prototype.toString.call(obj) === '[object Object]';\n  };\n\n  var getResult$1 = function getResult(body) {\n    var list = body.query.categorymembers || [];\n    var res = {\n      pages: [],\n      categories: []\n    };\n    list.forEach(function (p) {\n      if (p.ns === 14) {\n        delete p.ns;\n        res.categories.push(p);\n      } else {\n        delete p.ns;\n        res.pages.push(p);\n      }\n    });\n    return res;\n  };\n\n  var makeUrl$1 = function makeUrl(category, options, cm) {\n    category = normalizeCategory(category);\n    category = encodeURIComponent(category);\n    var url = \"https://\".concat(options.lang, \".wikipedia.org/\").concat(options.path, \"?\");\n\n    if (options.domain) {\n      url = \"https://\".concat(options.domain, \"/\").concat(options.path, \"?\");\n    }\n\n    url += \"action=query&list=categorymembers&cmtitle=\".concat(category, \"&cmlimit=500&format=json&origin=*&redirects=true&cmtype=page|subcat\");\n\n    if (cm) {\n      url += '&cmcontinue=' + cm;\n    }\n\n    return url;\n  };\n\n  var fetchCategory = function fetchCategory(category, lang, options) {\n    options = options || {};\n    options = Object.assign({}, defaults$e, options); //support lang 2nd param\n\n    if (typeof lang === 'string') {\n      options.lang = lang;\n    } else if (isObject$2(lang)) {\n      options = Object.assign(options, lang);\n    }\n\n    var res = {\n      pages: [],\n      categories: []\n    }; // wrap a promise around potentially-many requests\n\n    return new Promise(function (resolve, reject) {\n      var doit = function doit(cm) {\n        var url = makeUrl$1(category, options, cm);\n        var headers = _headers(options);\n        return client(url, headers).then(function (body) {\n          res = getResult$1(body);\n\n          if (body[\"continue\"] && body[\"continue\"].cmcontinue) {\n            doit(body[\"continue\"].cmcontinue);\n          } else {\n            resolve(res);\n          }\n        })[\"catch\"](function (e) {\n          console.error(e);\n          reject(e);\n        });\n      };\n\n      doit(null);\n    });\n  };\n\n  var category = fetchCategory;\n\n  var _version = '8.1.0';\n\n  var wtf = function wtf(wiki, options) {\n    return _01Document(wiki, options);\n  }; // export classes for plugin development\n\n\n  var models = {\n    Doc: Document_1,\n    Section: Section_1,\n    Paragraph: Paragraph_1,\n    Sentence: Sentence_1,\n    Image: Image_1,\n    Infobox: Infobox_1,\n    Link: Link_1,\n    List: List_1,\n    Reference: Reference_1,\n    Table: Table_1,\n    Template: Template_1,\n    wtf: wtf\n  };\n\n  wtf.fetch = function (title, lang, options, cb) {\n    return _fetch(title, lang, options);\n  };\n\n  wtf.random = function (lang, options, cb) {\n    return random(lang, options);\n  };\n\n  wtf.category = function (cat, lang, options, cb) {\n    return category(cat, lang, options);\n  };\n\n  wtf.extend = function (fn) {\n    fn(models, templates$d, this);\n    return this;\n  };\n\n  wtf.version = _version;\n  var src = wtf;\n\n  return src;\n\n})));\n//# sourceMappingURL=wtf_wikipedia-client.js.map\n","import { toggleInput, showErrors } from './index';\nimport { nodes, edges, NODE_DISTANCE, resetStore } from './store';\nimport { setActiveNodeKey } from './events';\n\nconst wiki = require('wtf_wikipedia');\n\nexport const createNode = (name, prevNode, angle) => {\n  wiki.fetch(name)\n  .then (doc => {\n    if (doc === null) {\n      showErrors();\n      return;\n    }\n    const paragraphs = doc.paragraphs();\n    let text = paragraphs[0].text();\n    if (text.length === 0 || paragraphs[1])\n      text = paragraphs[1].text(); \n    const links = doc.links().map(link => link.json());\n    const nodeLinks = [];\n    for (let i = 0; i < links.length; i++) {\n      if (nodeLinks.length >= 8)\n        break;\n      if (links[i].type === 'internal' && links[i].page[0] !== ':')\n        nodeLinks.push(links[i]);\n    }\n    nodes[name] = {};\n    nodes[name].color = randomColor();\n    nodes[name].links = nodeLinks;\n    nodes[name].text = text;\n    const canvas = document.getElementById('canvas1');\n    if (!prevNode) {\n      nodes[name].position = {x: canvas.width/2, y: canvas.height/2};\n      const infoBox = document.getElementById('info-box');\n      const infoButton = document.getElementById('info-button');\n      const instructions = document.getElementById('instructions-container');\n      infoBox.className = \"\";\n      infoBox.classList.add('info-show');\n      infoButton.innerHTML = \"Hide Info\";\n      instructions.style.display = \"None\";\n      \n    } else {\n      const xPos = nodes[prevNode].position.x + NODE_DISTANCE * Math.cos(angle); \n      const yPos = nodes[prevNode].position.y + NODE_DISTANCE * Math.sin(angle); \n      nodes[name].position = {x: xPos, y: yPos};\n      edges.push({node1: prevNode, node2: name});\n    }\n    setActiveNodeKey(name);\n    renderInfo(name, nodes[name].text);\n  })\n}\n\nexport const deleteEdgeFromNode = (node, page) => {\n  let idx = null;\n  for (let i = 0; i < node.links.length; i++) {\n    if (node.links[i].page === page)\n      idx = i;\n  }\n  if (idx !== null) {\n    node.links = node.links.slice(0, idx).concat(node.links.slice(idx+1, node.links.length));\n  }\n}\n\nexport const reset = () => {\n  resetStore();\n  setActiveNodeKey(null);\n  renderInfo('', '');\n  const infoBox = document.getElementById('info-box');\n  const infoButton = document.getElementById('info-button');\n  if (infoBox.classList.contains(\"info-show\")) {\n    infoBox.classList.add('info-slide-out');\n    infoButton.innerHTML = \"Show Info\";\n    setTimeout(() => {\n      infoBox.className = \"\";  \n      infoBox.classList.add('info-hide');\n    }, 300);    \n  }\n}\n\nconst randomColor = () => {\n  const chars = \"0123456789abcdef\"\n  let output = \"#\";\n  for (let i = 0; i < 6; i++) {\n    output += chars[Math.floor(Math.random() * chars.length)];\n  }\n  return output;\n}\n\nexport const renderInfo = (key, text) => {\n  const infoTitle = document.getElementById('info-title');\n  const infoText = document.getElementById('info-text');\n  infoTitle.innerHTML = key;\n  infoText.innerHTML = text;\n}","import { nodes, edges, RADIUS, EDGE_LENGTH } from './store';\nimport { scale, xPan, yPan, activeEdge, activeNodeKey } from './events';\n\n\nexport const renderNodes = () => {\n  const canvas = document.getElementById('canvas1');\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n  const nodeKeys = Object.keys(nodes);\n  nodeKeys.forEach(nodeKey => drawNode(nodeKey));\n}\n\nconst drawNode = nodeKey => {\n  const canvas = document.getElementById('canvas1');\n  const ctx = canvas.getContext('2d');\n  const node = nodes[nodeKey];\n  ctx.translate(node.position.x + xPan, node.position.y + yPan);\n  ctx.beginPath();\n  ctx.fillStyle = node.color;\n  ctx.arc(0, 0, RADIUS, 0, 2*Math.PI);\n  ctx.fill();\n  ctx.strokeStyle = '#FFFFFF';\n  ctx.stroke();\n  formatAndDrawText(nodeKey)\n  ctx.setTransform(scale,0,0,scale,0,0);\n}\n\nconst formatAndDrawText = (text) => {\n  const LINE_HEIGHT = 16;\n  const LINE_WIDTH = 10;\n  const canvas = document.getElementById('canvas1');\n  const ctx = canvas.getContext('2d');\n  ctx.font = \"bold 16px Calibri\";\n  ctx.textBaseline = \"middle\";\n  ctx.textAlign = \"center\";\n  ctx.fillStyle = '#FFFFFF';\n  ctx.strokeStyle = '#FFFFFF';\n  const textArr = text.split(\" \");\n  const lineArr = [];\n  let currLineText = \"\"\n  for (let i = 0; i < textArr.length; i++) {\n    if (currLineText && currLineText.length + textArr[i].length > LINE_WIDTH) {\n      lineArr.push(currLineText.slice(0, currLineText.length - 1));\n      currLineText = textArr[i] + \" \";\n    } else {\n      currLineText += textArr[i] + \" \";\n    }\n  }\n  lineArr.push(currLineText.slice(0, currLineText.length - 1));\n  const startY = (lineArr.length-1) * -1 * LINE_HEIGHT/2;\n  for (let i = 0; i < lineArr.length; i++) {    \n    ctx.fillText(lineArr[i], 0, startY + i * LINE_HEIGHT);\n  }\n}\n\nexport const renderEdges = () => {\n  const canvas = document.getElementById('canvas2');\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n  if (activeNodeKey) {\n    let node, rotation;\n    node = nodes[activeNodeKey];\n    if (node) {\n      node.links.forEach((link, idx) => {\n        ctx.translate(node.position.x + xPan, node.position.y + yPan);\n        rotation = idx * 2 * Math.PI / node.links.length;\n        ctx.rotate(rotation);\n        ctx.beginPath();\n        ctx.moveTo(0,0);\n        ctx.lineWidth = 5;\n        ctx.textAlign = \"center\";\n        if (activeEdge && link.page === activeEdge.page) {\n          ctx.strokeStyle = \"#000000\";\n          ctx.fillStyle = \"#000000\";\n        }\n        else {\n          ctx.strokeStyle = \"#CCCCCC\";\n          ctx.fillStyle = '#AAAAAA';\n        }\n        ctx.lineTo(EDGE_LENGTH, 0);\n        ctx.stroke();\n        ctx.font = \"18px Calibri\";\n        if (rotation >= Math.PI/2 && rotation < Math.PI * 3/2) {\n          ctx.rotate(Math.PI);\n          ctx.fillText(link.page, -150, -15);\n        } else {\n          ctx.fillText(link.page, 150, 30);\n        }\n        \n        ctx.setTransform(scale,0,0,scale,0,0);\n      })\n    }\n  }\n    \n  edges.forEach(edge => {\n    ctx.beginPath();\n    ctx.moveTo(nodes[edge.node1].position.x + xPan, nodes[edge.node1].position.y + yPan);\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = \"#000000\";\n    ctx.lineTo(nodes[edge.node2].position.x + xPan, nodes[edge.node2].position.y + yPan);\n    ctx.stroke();\n  })\n}","import { nodes, RADIUS, EDGE_LENGTH, SCREEN_Y_OFFSET } from './store';\nimport { createNode, deleteEdgeFromNode, renderInfo } from './actions';\n\nexport let scale = 1;\nexport let xPan = 0;\nexport let yPan = 0;\nexport let activeNodeKey = null;\nexport let activeEdge = null;\n\nexport const handleMouseScroll = e => {\n  e.preventDefault();\n  const canvas1 = document.getElementById('canvas1');\n  const ctx1 = canvas1.getContext('2d');\n  const canvas2 = document.getElementById('canvas2');\n  const ctx2 = canvas2.getContext('2d');\n  const oldScale = scale;\n  if (e.deltaY < 0)\n    scale *= 1.05;\n  else \n    scale /= 1.05;\n  ctx1.setTransform(scale, 0, 0, scale, 0, 0);\n  ctx2.setTransform(scale, 0, 0, scale, 0, 0);\n}\n\nexport const handleMouseDrag = e => {\n  e.preventDefault();\n  const x = (e.offsetX) / scale - xPan;\n  const y = (e.offsetY + SCREEN_Y_OFFSET) / scale - yPan;  \n  const nodeKeys = Object.keys(nodes);\n  let node, distSq, foundNode = false;\n\n  nodeKeys.forEach(nodeKey => {\n    node = nodes[nodeKey];\n    distSq = Math.pow((x - node.position.x),2) + Math.pow((y - node.position.y),2)\n    if (distSq < RADIUS*RADIUS ) {\n      foundNode = true;\n      node.position.x = node.position.x + e.movementX / scale;\n      node.position.y = node.position.y + e.movementY / scale;\n    }\n  })\n  if (!foundNode) {\n    xPan += e.movementX;\n    yPan += e.movementY;\n  }\n}\n\nexport const handleMouseDown = e => {\n  e.preventDefault();\n  document.addEventListener('mousemove', handleMouseDrag);\n}\n\nexport const handleMouseUp = e => {\n  e.preventDefault();\n  document.removeEventListener('mousemove', handleMouseDrag);\n}\n\nexport const handleMouseMove = e => {\n  if (!nodes[activeNodeKey] || nodes[activeNodeKey].links.length === 0)\n    return;\n\n  const x = (e.offsetX) / scale - xPan;\n  const y = (e.offsetY + SCREEN_Y_OFFSET) / scale - yPan;\n  const nodeKeys = Object.keys(nodes);\n  let node, distSq, angle, idx;\n  node = nodes[activeNodeKey];\n  distSq = Math.pow((x - node.position.x),2) + Math.pow((y - node.position.y),2)\n  if (RADIUS*RADIUS < distSq && distSq < EDGE_LENGTH * EDGE_LENGTH) {\n    angle = Math.atan((y - node.position.y)/(x - node.position.x));\n    if (x - node.position.x < 0 && y - node.position.y > 0)\n      angle = Math.PI + angle;\n    else if ( x - node.position.x < 0 && y - node.position.y < 0)\n      angle = Math.PI + angle;\n    else if ( x- node.position.x > 0 && y - node.position.y < 0)\n      angle = 2 * Math.PI + angle;\n    idx = Math.floor(angle/ (2 * Math.PI / node.links.length));\n    activeEdge = {page: node.links[idx].page, nodeKey: activeNodeKey};\n  } else {\n    activeEdge = null;\n  };\n}\n\nexport const handleClickNode = e => {\n  const nodeKeys = Object.keys(nodes);\n  const x = (e.offsetX) / scale - xPan;\n  const y = (e.offsetY + SCREEN_Y_OFFSET) / scale - yPan;\n  let node, distSq;\n\n  activeNodeKey = null;\n  nodeKeys.forEach(nodeKey => {\n    node = nodes[nodeKey];\n    distSq = Math.pow((x - node.position.x),2) + Math.pow((y - node.position.y),2)\n    if (distSq < RADIUS*RADIUS) {\n      activeNodeKey = nodeKey;\n      renderInfo(nodeKey, node.text);\n    }\n  })\n}\n\nexport const handleClickEdge = () => {\n  if (activeEdge) {\n    const node = nodes[activeEdge.nodeKey];\n    let angle;\n    for (let i = 0; i < node.links.length; i++) {\n      if (node.links[i].page === activeEdge.page) {\n        angle = 2 * Math.PI * i / node.links.length;  \n      }\n    }\n    createNode(activeEdge.page, activeEdge.nodeKey, angle);\n    deleteEdgeFromNode(node, activeEdge.page);\n    activeNodeKey = activeEdge.page;\n  }\n}\n\nexport const setActiveNodeKey = key => {\n  activeNodeKey = key;\n}\n\nexport const handleResize = e => {\n  e.preventDefault();\n  const canvas1 = document.getElementById('canvas1');\n  const ctx1 = canvas1.getContext('2d');\n  const canvas2 = document.getElementById('canvas2');\n  const ctx2 = canvas2.getContext('2d');\n \n  const width = /Mobi/.test(navigator.userAgent) ? screen.width : window.innerWidth;\n  const height = /Mobi/.test(navigator.userAgent) ? screen.height : window.innerHeight;\n\n  canvas1.width = width;\n  canvas1.height = height;\n  canvas2.width = width;\n  canvas2.height = height;\n  ctx1.setTransform(scale, 0, 0, scale, 0, 0);\n  ctx2.setTransform(scale, 0, 0, scale, 0, 0);\n}\n\nexport const modifyPan = (x,y) => {\n  xPan += x;\n  yPan += y;\n}\n\nexport const modifyScale = (val) => {\n  scale *= val;\n}","import { createNode, reset } from './actions';\nimport { renderNodes, renderEdges} from './canvas';\nimport { handleMouseScroll, handleMouseDown, handleMouseUp, handleMouseMove, \n         handleClickNode, handleClickEdge, handleResize } from './events';\nimport { loadMobileEventListeners } from './mobile';\n         \ndocument.addEventListener('DOMContentLoaded', () => {\n  const startButton = document.getElementById('start-button');\n  const infoButton = document.getElementById('info-button');\n  const startInput = document.getElementById('start-input');\n  const helpButton = document.getElementById('help-button')\n  const canvas1 = document.getElementById('canvas1');\n  const canvas2 = document.getElementById('canvas2');\n  const canvasBox = document.getElementById('canvas-box');\n  \n  canvas1.width = window.innerWidth;\n  canvas1.height = window.innerHeight;  \n  canvas2.width = window.innerWidth;\n  canvas2.height = window.innerHeight;\n  \n  startButton.addEventListener('click', handleStartClick);\n  infoButton.addEventListener('click', handleInfoClick);\n  helpButton.addEventListener('click', handleHelpClick);\n  startInput.addEventListener('input', handleInputClearErrors);\n  canvasBox.addEventListener('wheel', handleMouseScroll);\n  canvasBox.addEventListener('mousedown', handleMouseDown);\n  canvasBox.addEventListener('mouseup', handleMouseUp);\n  canvasBox.addEventListener('mousemove', handleMouseMove);\n  canvasBox.addEventListener('mousedown', handleClickNode);\n  canvasBox.addEventListener('mousedown', handleClickEdge);\n  window.addEventListener('resize', handleResize);\n\n  loadMobileEventListeners();\n\n  setInterval(renderNodes, 17);\n  setInterval(renderEdges, 17);\n})\n\n\nconst handleStartClick = e => {\n  e.preventDefault();\n  const button = e.target;\n  const input = document.getElementById('start-input');\n  if (button.innerText === 'Start') {\n    if (input.value) {\n      createNode(input.value, null);\n      toggleInput();\n    }\n  } \n  else {\n      button.innerText = 'Start';\n      input.disabled = false;\n      reset();\n    }\n}\n\nconst handleInfoClick = e => {\n  e.preventDefault();\n  const button = e.target;\n  const infoBox = document.getElementById('info-box');\n  if (button.innerText === 'Show Info') {\n    button.innerText = 'Hide Info';\n    infoBox.className = \"\";\n    infoBox.classList.add('info-show');\n  } else {\n    button.innerText = 'Show Info';\n    infoBox.classList.add('info-slide-out');\n    setTimeout(() => {\n      infoBox.className = \"\"; \n      infoBox.classList.add('info-hide')}, 300);\n  }\n}\n\nexport const handleHelpClick = e => {\n  e.preventDefault();\n  const instructions = document.getElementById('instructions-container');\n  if (instructions.style.display == 'none')\n    instructions.style.display = 'flex';\n  else\n    instructions.style.display = 'none';\n}\n\nexport const handleInputClearErrors = () => {\n  const input = document.getElementById('start-input');\n  input.style.border = \"1px solid #5c51ad\";\n  const error = document.getElementById('start-input-error');\n  error.style.display = \"none\";\n}\n\nexport const toggleInput = () => {\n  const button = document.getElementById('start-button');\n  button.innerText = 'Reset';\n  const input = document.getElementById('start-input');\n  input.disabled = true;\n}\n\nexport const showErrors = () => {\n  const button = document.getElementById('start-button');\n  button.innerText = 'Start';\n  const input = document.getElementById('start-input');\n  input.disabled = false;\n  input.style.border = \"1px solid #FF3333\";\n  const error = document.getElementById('start-input-error');\n  error.style.display = \"block\";\n}","import { modifyPan, modifyScale } from './events';\nimport { xPan, yPan, scale } from './events';\nimport { nodes, RADIUS } from './store';\n\nlet touchX1, touchY1, touchX2, touchY2, distance;\n\nexport const loadMobileEventListeners = () => {\n  const canvasBox = document.getElementById('canvas-box');\n\n  \n  canvasBox.addEventListener('touchstart', handleTouchStart);\n  canvasBox.addEventListener('touchmove', handleTouchMove);\n}\n\nconst handleTouchStart = e => {\n  touchX1 = e.touches[0].clientX;\n  touchY1 = e.touches[0].clientY;\n\n  if (e.touches.length >= 2) {\n    distance = getDist(e.touches[0].clientX, e.touches[1].clientX, e.touches[0].clientY, e.touches[1].clientY);\n  }\n\n}\n\nconst handleTouchMove = e => {  \n  e.preventDefault();\n  const x = (e.changedTouches[0].clientX) / scale - xPan;\n  const y = (e.changedTouches[0].clientY) / scale - yPan;\n  const deltaX = e.changedTouches[0].clientX - touchX1;\n  const deltaY = e.changedTouches[0].clientY - touchY1;\n  const nodeKeys = Object.keys(nodes);\n  let node, distSq, foundNode = false;\n\n  nodeKeys.forEach(nodeKey => {\n    node = nodes[nodeKey];\n    distSq = Math.pow((x - node.position.x),2) + Math.pow((y - node.position.y),2)\n    if (distSq < RADIUS*RADIUS ) {\n      foundNode = true;\n      node.position.x = node.position.x + deltaX / scale;\n      node.position.y = node.position.y + deltaY / scale;\n    }\n  })\n  if (!foundNode) {\n    modifyPan(deltaX, deltaY);\n  }\n\n  touchX1 = e.changedTouches[0].clientX;\n  touchY1 = e.changedTouches[0].clientY;\n\n  if (e.touches.length >= 2) {\n    const newDist = getDist(e.touches[0].clientX, e.touches[1].clientX, e.touches[0].clientY, e.touches[1].clientY);\n    if (distance - newDist < 0)\n      modifyScale(1/1.03);\n    else\n      modifyScale(1.03);\n    distance = newDist;\n  }\n}\n\nconst getDist = (x1, y1, x2, y2) => {\n  return Math.sqrt((Math.pow(x1-x2, 2) + Math.pow(y1-y2, 2)));\n}","export let nodes = {};\nexport let edges = [];\nexport const RADIUS = 50;\nexport const EDGE_LENGTH = 200;\nexport const SCREEN_Y_OFFSET = 100;\nexport const NODE_DISTANCE = 300;\n\nexport const resetStore = () => {\n  nodes = {};\n  edges = [];\n}\n"],"sourceRoot":""}